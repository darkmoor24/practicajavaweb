"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/material-react-table";
exports.ids = ["vendor-chunks/material-react-table"];
exports.modules = {

/***/ "(ssr)/./node_modules/material-react-table/dist/index.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/material-react-table/dist/index.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MRT_AggregationFns: () => (/* binding */ MRT_AggregationFns),\n/* harmony export */   MRT_BottomToolbar: () => (/* binding */ MRT_BottomToolbar),\n/* harmony export */   MRT_ColumnActionMenu: () => (/* binding */ MRT_ColumnActionMenu),\n/* harmony export */   MRT_ColumnPinningButtons: () => (/* binding */ MRT_ColumnPinningButtons),\n/* harmony export */   MRT_CopyButton: () => (/* binding */ MRT_CopyButton),\n/* harmony export */   MRT_DefaultColumn: () => (/* binding */ MRT_DefaultColumn),\n/* harmony export */   MRT_DefaultDisplayColumn: () => (/* binding */ MRT_DefaultDisplayColumn),\n/* harmony export */   MRT_EditActionButtons: () => (/* binding */ MRT_EditActionButtons),\n/* harmony export */   MRT_EditCellTextField: () => (/* binding */ MRT_EditCellTextField),\n/* harmony export */   MRT_EditRowModal: () => (/* binding */ MRT_EditRowModal),\n/* harmony export */   MRT_ExpandAllButton: () => (/* binding */ MRT_ExpandAllButton),\n/* harmony export */   MRT_ExpandButton: () => (/* binding */ MRT_ExpandButton),\n/* harmony export */   MRT_FilterCheckbox: () => (/* binding */ MRT_FilterCheckbox),\n/* harmony export */   MRT_FilterFns: () => (/* binding */ MRT_FilterFns),\n/* harmony export */   MRT_FilterOptionMenu: () => (/* binding */ MRT_FilterOptionMenu),\n/* harmony export */   MRT_FilterRangeFields: () => (/* binding */ MRT_FilterRangeFields),\n/* harmony export */   MRT_FilterRangeSlider: () => (/* binding */ MRT_FilterRangeSlider),\n/* harmony export */   MRT_FilterTextField: () => (/* binding */ MRT_FilterTextField),\n/* harmony export */   MRT_GlobalFilterTextField: () => (/* binding */ MRT_GlobalFilterTextField),\n/* harmony export */   MRT_GrabHandleButton: () => (/* binding */ MRT_GrabHandleButton),\n/* harmony export */   MRT_LinearProgressBar: () => (/* binding */ MRT_LinearProgressBar),\n/* harmony export */   MRT_RowActionMenu: () => (/* binding */ MRT_RowActionMenu),\n/* harmony export */   MRT_RowPinButton: () => (/* binding */ MRT_RowPinButton),\n/* harmony export */   MRT_SelectCheckbox: () => (/* binding */ MRT_SelectCheckbox),\n/* harmony export */   MRT_ShowHideColumnsButton: () => (/* binding */ MRT_ShowHideColumnsButton),\n/* harmony export */   MRT_ShowHideColumnsMenu: () => (/* binding */ MRT_ShowHideColumnsMenu),\n/* harmony export */   MRT_ShowHideColumnsMenuItems: () => (/* binding */ MRT_ShowHideColumnsMenuItems),\n/* harmony export */   MRT_SortingFns: () => (/* binding */ MRT_SortingFns),\n/* harmony export */   MRT_Table: () => (/* binding */ MRT_Table),\n/* harmony export */   MRT_TableBody: () => (/* binding */ MRT_TableBody),\n/* harmony export */   MRT_TableBodyCell: () => (/* binding */ MRT_TableBodyCell),\n/* harmony export */   MRT_TableBodyCellValue: () => (/* binding */ MRT_TableBodyCellValue),\n/* harmony export */   MRT_TableBodyRow: () => (/* binding */ MRT_TableBodyRow),\n/* harmony export */   MRT_TableBodyRowGrabHandle: () => (/* binding */ MRT_TableBodyRowGrabHandle),\n/* harmony export */   MRT_TableBodyRowPinButton: () => (/* binding */ MRT_TableBodyRowPinButton),\n/* harmony export */   MRT_TableContainer: () => (/* binding */ MRT_TableContainer),\n/* harmony export */   MRT_TableDetailPanel: () => (/* binding */ MRT_TableDetailPanel),\n/* harmony export */   MRT_TableFooter: () => (/* binding */ MRT_TableFooter),\n/* harmony export */   MRT_TableFooterCell: () => (/* binding */ MRT_TableFooterCell),\n/* harmony export */   MRT_TableFooterRow: () => (/* binding */ MRT_TableFooterRow),\n/* harmony export */   MRT_TableHead: () => (/* binding */ MRT_TableHead),\n/* harmony export */   MRT_TableHeadCell: () => (/* binding */ MRT_TableHeadCell),\n/* harmony export */   MRT_TableHeadCellColumnActionsButton: () => (/* binding */ MRT_TableHeadCellColumnActionsButton),\n/* harmony export */   MRT_TableHeadCellFilterContainer: () => (/* binding */ MRT_TableHeadCellFilterContainer),\n/* harmony export */   MRT_TableHeadCellFilterLabel: () => (/* binding */ MRT_TableHeadCellFilterLabel),\n/* harmony export */   MRT_TableHeadCellGrabHandle: () => (/* binding */ MRT_TableHeadCellGrabHandle),\n/* harmony export */   MRT_TableHeadCellResizeHandle: () => (/* binding */ MRT_TableHeadCellResizeHandle),\n/* harmony export */   MRT_TableHeadCellSortLabel: () => (/* binding */ MRT_TableHeadCellSortLabel),\n/* harmony export */   MRT_TableHeadRow: () => (/* binding */ MRT_TableHeadRow),\n/* harmony export */   MRT_TableLoadingOverlay: () => (/* binding */ MRT_TableLoadingOverlay),\n/* harmony export */   MRT_TablePagination: () => (/* binding */ MRT_TablePagination),\n/* harmony export */   MRT_TablePaper: () => (/* binding */ MRT_TablePaper),\n/* harmony export */   MRT_ToggleDensePaddingButton: () => (/* binding */ MRT_ToggleDensePaddingButton),\n/* harmony export */   MRT_ToggleFiltersButton: () => (/* binding */ MRT_ToggleFiltersButton),\n/* harmony export */   MRT_ToggleFullScreenButton: () => (/* binding */ MRT_ToggleFullScreenButton),\n/* harmony export */   MRT_ToggleGlobalFilterButton: () => (/* binding */ MRT_ToggleGlobalFilterButton),\n/* harmony export */   MRT_ToggleRowActionMenuButton: () => (/* binding */ MRT_ToggleRowActionMenuButton),\n/* harmony export */   MRT_ToolbarAlertBanner: () => (/* binding */ MRT_ToolbarAlertBanner),\n/* harmony export */   MRT_ToolbarDropZone: () => (/* binding */ MRT_ToolbarDropZone),\n/* harmony export */   MRT_ToolbarInternalButtons: () => (/* binding */ MRT_ToolbarInternalButtons),\n/* harmony export */   MRT_TopToolbar: () => (/* binding */ MRT_TopToolbar),\n/* harmony export */   MaterialReactTable: () => (/* binding */ MaterialReactTable),\n/* harmony export */   Memo_MRT_TableBody: () => (/* binding */ Memo_MRT_TableBody),\n/* harmony export */   Memo_MRT_TableBodyCell: () => (/* binding */ Memo_MRT_TableBodyCell),\n/* harmony export */   Memo_MRT_TableBodyRow: () => (/* binding */ Memo_MRT_TableBodyRow),\n/* harmony export */   commonListItemStyles: () => (/* binding */ commonListItemStyles),\n/* harmony export */   commonMenuItemStyles: () => (/* binding */ commonMenuItemStyles),\n/* harmony export */   createMRTColumnHelper: () => (/* binding */ createMRTColumnHelper),\n/* harmony export */   createRow: () => (/* binding */ createRow),\n/* harmony export */   extraIndexRangeExtractor: () => (/* binding */ extraIndexRangeExtractor),\n/* harmony export */   flexRender: () => (/* binding */ flexRender),\n/* harmony export */   getAllLeafColumnDefs: () => (/* binding */ getAllLeafColumnDefs),\n/* harmony export */   getCanRankRows: () => (/* binding */ getCanRankRows),\n/* harmony export */   getColumnId: () => (/* binding */ getColumnId),\n/* harmony export */   getCommonMRTCellStyles: () => (/* binding */ getCommonMRTCellStyles),\n/* harmony export */   getCommonToolbarStyles: () => (/* binding */ getCommonToolbarStyles),\n/* harmony export */   getDefaultColumnFilterFn: () => (/* binding */ getDefaultColumnFilterFn),\n/* harmony export */   getDefaultColumnOrderIds: () => (/* binding */ getDefaultColumnOrderIds),\n/* harmony export */   getIsFirstColumn: () => (/* binding */ getIsFirstColumn),\n/* harmony export */   getIsFirstRightPinnedColumn: () => (/* binding */ getIsFirstRightPinnedColumn),\n/* harmony export */   getIsLastColumn: () => (/* binding */ getIsLastColumn),\n/* harmony export */   getIsLastLeftPinnedColumn: () => (/* binding */ getIsLastLeftPinnedColumn),\n/* harmony export */   getLeadingDisplayColumnIds: () => (/* binding */ getLeadingDisplayColumnIds),\n/* harmony export */   getMRTTheme: () => (/* binding */ getMRTTheme),\n/* harmony export */   getTotalRight: () => (/* binding */ getTotalRight),\n/* harmony export */   getTrailingDisplayColumnIds: () => (/* binding */ getTrailingDisplayColumnIds),\n/* harmony export */   getValueAndLabel: () => (/* binding */ getValueAndLabel),\n/* harmony export */   mrtFilterOptions: () => (/* binding */ mrtFilterOptions),\n/* harmony export */   parseCSSVarId: () => (/* binding */ parseCSSVarId),\n/* harmony export */   parseFromValuesOrFunc: () => (/* binding */ parseFromValuesOrFunc),\n/* harmony export */   prepareColumns: () => (/* binding */ prepareColumns),\n/* harmony export */   rankGlobalFuzzy: () => (/* binding */ rankGlobalFuzzy),\n/* harmony export */   reorderColumn: () => (/* binding */ reorderColumn),\n/* harmony export */   showExpandColumn: () => (/* binding */ showExpandColumn),\n/* harmony export */   useMRT_DisplayColumns: () => (/* binding */ useMRT_DisplayColumns),\n/* harmony export */   useMRT_Effects: () => (/* binding */ useMRT_Effects),\n/* harmony export */   useMRT_TableInstance: () => (/* binding */ useMRT_TableInstance),\n/* harmony export */   useMRT_TableOptions: () => (/* binding */ useMRT_TableOptions),\n/* harmony export */   useMaterialReactTable: () => (/* binding */ useMaterialReactTable)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @mui/material/Paper */ \"(ssr)/./node_modules/@mui/material/node/Paper/index.js\");\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Paper__WEBPACK_IMPORTED_MODULE_59__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @mui/material/TableContainer */ \"(ssr)/./node_modules/@mui/material/node/TableContainer/index.js\");\n/* harmony import */ var _mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_58__);\n/* harmony import */ var _tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/react-virtual */ \"(ssr)/./node_modules/@tanstack/virtual-core/build/lib/index.mjs\");\n/* harmony import */ var _tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @tanstack/react-virtual */ \"(ssr)/./node_modules/@tanstack/react-virtual/build/lib/index.mjs\");\n/* harmony import */ var _mui_material_Table__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @mui/material/Table */ \"(ssr)/./node_modules/@mui/material/node/Table/index.js\");\n/* harmony import */ var _mui_material_Table__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Table__WEBPACK_IMPORTED_MODULE_52__);\n/* harmony import */ var _mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/material/TableBody */ \"(ssr)/./node_modules/@mui/material/node/TableBody/index.js\");\n/* harmony import */ var _mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _mui_material_Typography__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mui/material/Typography */ \"(ssr)/./node_modules/@mui/material/node/Typography/index.js\");\n/* harmony import */ var _mui_material_Typography__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/material/TableRow */ \"(ssr)/./node_modules/@mui/material/node/TableRow/index.js\");\n/* harmony import */ var _mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/styles */ \"(ssr)/./node_modules/@mui/material/node/styles/index.js\");\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/material/Skeleton */ \"(ssr)/./node_modules/@mui/material/node/Skeleton/index.js\");\n/* harmony import */ var _mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/material/TableCell */ \"(ssr)/./node_modules/@mui/material/node/TableCell/index.js\");\n/* harmony import */ var _mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/Box */ \"(ssr)/./node_modules/@mui/material/node/Box/index.js\");\n/* harmony import */ var _tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-table */ \"(ssr)/./node_modules/@tanstack/react-table/build/lib/index.mjs\");\n/* harmony import */ var _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-table */ \"(ssr)/./node_modules/@tanstack/table-core/build/lib/index.mjs\");\n/* harmony import */ var highlight_words__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! highlight-words */ \"(ssr)/./node_modules/highlight-words/dist/highlight-words.mjs\");\n/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/IconButton */ \"(ssr)/./node_modules/@mui/material/node/IconButton/index.js\");\n/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/Tooltip */ \"(ssr)/./node_modules/@mui/material/node/Tooltip/index.js\");\n/* harmony import */ var _mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/Button */ \"(ssr)/./node_modules/@mui/material/node/Button/index.js\");\n/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/material/MenuItem */ \"(ssr)/./node_modules/@mui/material/node/MenuItem/index.js\");\n/* harmony import */ var _mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _mui_material_TextField__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/material/TextField */ \"(ssr)/./node_modules/@mui/material/node/TextField/index.js\");\n/* harmony import */ var _mui_material_TextField__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/material/Collapse */ \"(ssr)/./node_modules/@mui/material/node/Collapse/index.js\");\n/* harmony import */ var _mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @tanstack/match-sorter-utils */ \"(ssr)/./node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs\");\n/* harmony import */ var _mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @mui/material/TableFooter */ \"(ssr)/./node_modules/@mui/material/node/TableFooter/index.js\");\n/* harmony import */ var _mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var _mui_material_TableHead__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @mui/material/TableHead */ \"(ssr)/./node_modules/@mui/material/node/TableHead/index.js\");\n/* harmony import */ var _mui_material_TableHead__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableHead__WEBPACK_IMPORTED_MODULE_51__);\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @mui/material */ \"(ssr)/./node_modules/@mui/material/index.js\");\n/* harmony import */ var _mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @mui/material/ListItemIcon */ \"(ssr)/./node_modules/@mui/material/node/ListItemIcon/index.js\");\n/* harmony import */ var _mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _mui_material_Menu__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @mui/material/Menu */ \"(ssr)/./node_modules/@mui/material/node/Menu/index.js\");\n/* harmony import */ var _mui_material_Menu__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @mui/material/Checkbox */ \"(ssr)/./node_modules/@mui/material/node/Checkbox/index.js\");\n/* harmony import */ var _mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var _mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @mui/material/FormControlLabel */ \"(ssr)/./node_modules/@mui/material/node/FormControlLabel/index.js\");\n/* harmony import */ var _mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var _mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @mui/material/Autocomplete */ \"(ssr)/./node_modules/@mui/material/node/Autocomplete/index.js\");\n/* harmony import */ var _mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_30__);\n/* harmony import */ var _mui_material_Chip__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @mui/material/Chip */ \"(ssr)/./node_modules/@mui/material/node/Chip/index.js\");\n/* harmony import */ var _mui_material_Chip__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var _mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @mui/material/InputAdornment */ \"(ssr)/./node_modules/@mui/material/node/InputAdornment/index.js\");\n/* harmony import */ var _mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var _mui_material_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @mui/material/utils */ \"(ssr)/./node_modules/@mui/material/node/utils/index.js\");\n/* harmony import */ var _mui_x_date_pickers_DatePicker__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @mui/x-date-pickers/DatePicker */ \"(ssr)/./node_modules/@mui/x-date-pickers/node/DatePicker/index.js\");\n/* harmony import */ var _mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @mui/material/FormHelperText */ \"(ssr)/./node_modules/@mui/material/node/FormHelperText/index.js\");\n/* harmony import */ var _mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_33__);\n/* harmony import */ var _mui_material_Slider__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @mui/material/Slider */ \"(ssr)/./node_modules/@mui/material/node/Slider/index.js\");\n/* harmony import */ var _mui_material_Slider__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var _mui_material_Stack__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @mui/material/Stack */ \"(ssr)/./node_modules/@mui/material/node/Stack/index.js\");\n/* harmony import */ var _mui_material_Grow__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @mui/material/Grow */ \"(ssr)/./node_modules/@mui/material/node/Grow/index.js\");\n/* harmony import */ var _mui_material_Popover__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @mui/material/Popover */ \"(ssr)/./node_modules/@mui/material/node/Popover/index.js\");\n/* harmony import */ var _mui_material_Popover__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Popover__WEBPACK_IMPORTED_MODULE_35__);\n/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @mui/material/Divider */ \"(ssr)/./node_modules/@mui/material/node/Divider/index.js\");\n/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_36__);\n/* harmony import */ var _mui_material_Badge__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @mui/material/Badge */ \"(ssr)/./node_modules/@mui/material/node/Badge/index.js\");\n/* harmony import */ var _mui_material_Badge__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Badge__WEBPACK_IMPORTED_MODULE_37__);\n/* harmony import */ var _mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @mui/material/TableSortLabel */ \"(ssr)/./node_modules/@mui/material/node/TableSortLabel/index.js\");\n/* harmony import */ var _mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_38__);\n/* harmony import */ var _mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @mui/material/useMediaQuery */ \"(ssr)/./node_modules/@mui/material/node/useMediaQuery/index.js\");\n/* harmony import */ var _mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @mui/material/LinearProgress */ \"(ssr)/./node_modules/@mui/material/node/LinearProgress/index.js\");\n/* harmony import */ var _mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_40__);\n/* harmony import */ var _mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @mui/material/InputLabel */ \"(ssr)/./node_modules/@mui/material/node/InputLabel/index.js\");\n/* harmony import */ var _mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_41__);\n/* harmony import */ var _mui_material_Pagination__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @mui/material/Pagination */ \"(ssr)/./node_modules/@mui/material/node/Pagination/index.js\");\n/* harmony import */ var _mui_material_Pagination__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Pagination__WEBPACK_IMPORTED_MODULE_43__);\n/* harmony import */ var _mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @mui/material/PaginationItem */ \"(ssr)/./node_modules/@mui/material/node/PaginationItem/index.js\");\n/* harmony import */ var _mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_44__);\n/* harmony import */ var _mui_material_Select__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @mui/material/Select */ \"(ssr)/./node_modules/@mui/material/node/Select/index.js\");\n/* harmony import */ var _mui_material_Select__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Select__WEBPACK_IMPORTED_MODULE_42__);\n/* harmony import */ var _mui_material_Alert__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @mui/material/Alert */ \"(ssr)/./node_modules/@mui/material/node/Alert/index.js\");\n/* harmony import */ var _mui_material_Alert__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Alert__WEBPACK_IMPORTED_MODULE_46__);\n/* harmony import */ var _mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @mui/material/AlertTitle */ \"(ssr)/./node_modules/@mui/material/node/AlertTitle/index.js\");\n/* harmony import */ var _mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_47__);\n/* harmony import */ var _mui_material_Radio__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @mui/material/Radio */ \"(ssr)/./node_modules/@mui/material/node/Radio/index.js\");\n/* harmony import */ var _mui_material_Radio__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Radio__WEBPACK_IMPORTED_MODULE_45__);\n/* harmony import */ var _mui_material_Fade__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @mui/material/Fade */ \"(ssr)/./node_modules/@mui/material/node/Fade/index.js\");\n/* harmony import */ var _mui_material_Switch__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @mui/material/Switch */ \"(ssr)/./node_modules/@mui/material/node/Switch/index.js\");\n/* harmony import */ var _mui_material_Switch__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_50__);\n/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @mui/material/CircularProgress */ \"(ssr)/./node_modules/@mui/material/node/CircularProgress/index.js\");\n/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53__);\n/* harmony import */ var _mui_material_Dialog__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @mui/material/Dialog */ \"(ssr)/./node_modules/@mui/material/node/Dialog/index.js\");\n/* harmony import */ var _mui_material_Dialog__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_54__);\n/* harmony import */ var _mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @mui/material/DialogActions */ \"(ssr)/./node_modules/@mui/material/node/DialogActions/index.js\");\n/* harmony import */ var _mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_57__);\n/* harmony import */ var _mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @mui/material/DialogContent */ \"(ssr)/./node_modules/@mui/material/node/DialogContent/index.js\");\n/* harmony import */ var _mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_56__);\n/* harmony import */ var _mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @mui/material/DialogTitle */ \"(ssr)/./node_modules/@mui/material/node/DialogTitle/index.js\");\n/* harmony import */ var _mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_55__);\n/* harmony import */ var _mui_icons_material_ArrowDownward__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @mui/icons-material/ArrowDownward */ \"(ssr)/./node_modules/@mui/icons-material/ArrowDownward.js\");\n/* harmony import */ var _mui_icons_material_ArrowRight__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @mui/icons-material/ArrowRight */ \"(ssr)/./node_modules/@mui/icons-material/ArrowRight.js\");\n/* harmony import */ var _mui_icons_material_Cancel__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @mui/icons-material/Cancel */ \"(ssr)/./node_modules/@mui/icons-material/Cancel.js\");\n/* harmony import */ var _mui_icons_material_ChevronLeft__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @mui/icons-material/ChevronLeft */ \"(ssr)/./node_modules/@mui/icons-material/ChevronLeft.js\");\n/* harmony import */ var _mui_icons_material_ChevronRight__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @mui/icons-material/ChevronRight */ \"(ssr)/./node_modules/@mui/icons-material/ChevronRight.js\");\n/* harmony import */ var _mui_icons_material_ClearAll__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! @mui/icons-material/ClearAll */ \"(ssr)/./node_modules/@mui/icons-material/ClearAll.js\");\n/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @mui/icons-material/Close */ \"(ssr)/./node_modules/@mui/icons-material/Close.js\");\n/* harmony import */ var _mui_icons_material_DensityLarge__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! @mui/icons-material/DensityLarge */ \"(ssr)/./node_modules/@mui/icons-material/DensityLarge.js\");\n/* harmony import */ var _mui_icons_material_DensityMedium__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @mui/icons-material/DensityMedium */ \"(ssr)/./node_modules/@mui/icons-material/DensityMedium.js\");\n/* harmony import */ var _mui_icons_material_DensitySmall__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @mui/icons-material/DensitySmall */ \"(ssr)/./node_modules/@mui/icons-material/DensitySmall.js\");\n/* harmony import */ var _mui_icons_material_DragHandle__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @mui/icons-material/DragHandle */ \"(ssr)/./node_modules/@mui/icons-material/DragHandle.js\");\n/* harmony import */ var _mui_icons_material_DynamicFeed__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @mui/icons-material/DynamicFeed */ \"(ssr)/./node_modules/@mui/icons-material/DynamicFeed.js\");\n/* harmony import */ var _mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! @mui/icons-material/Edit */ \"(ssr)/./node_modules/@mui/icons-material/Edit.js\");\n/* harmony import */ var _mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! @mui/icons-material/ExpandMore */ \"(ssr)/./node_modules/@mui/icons-material/ExpandMore.js\");\n/* harmony import */ var _mui_icons_material_FilterAlt__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! @mui/icons-material/FilterAlt */ \"(ssr)/./node_modules/@mui/icons-material/FilterAlt.js\");\n/* harmony import */ var _mui_icons_material_FilterList__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! @mui/icons-material/FilterList */ \"(ssr)/./node_modules/@mui/icons-material/FilterList.js\");\n/* harmony import */ var _mui_icons_material_FilterListOff__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! @mui/icons-material/FilterListOff */ \"(ssr)/./node_modules/@mui/icons-material/FilterListOff.js\");\n/* harmony import */ var _mui_icons_material_FirstPage__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! @mui/icons-material/FirstPage */ \"(ssr)/./node_modules/@mui/icons-material/FirstPage.js\");\n/* harmony import */ var _mui_icons_material_Fullscreen__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! @mui/icons-material/Fullscreen */ \"(ssr)/./node_modules/@mui/icons-material/Fullscreen.js\");\n/* harmony import */ var _mui_icons_material_FullscreenExit__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! @mui/icons-material/FullscreenExit */ \"(ssr)/./node_modules/@mui/icons-material/FullscreenExit.js\");\n/* harmony import */ var _mui_icons_material_KeyboardDoubleArrowDown__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! @mui/icons-material/KeyboardDoubleArrowDown */ \"(ssr)/./node_modules/@mui/icons-material/KeyboardDoubleArrowDown.js\");\n/* harmony import */ var _mui_icons_material_LastPage__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! @mui/icons-material/LastPage */ \"(ssr)/./node_modules/@mui/icons-material/LastPage.js\");\n/* harmony import */ var _mui_icons_material_MoreHoriz__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @mui/icons-material/MoreHoriz */ \"(ssr)/./node_modules/@mui/icons-material/MoreHoriz.js\");\n/* harmony import */ var _mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! @mui/icons-material/MoreVert */ \"(ssr)/./node_modules/@mui/icons-material/MoreVert.js\");\n/* harmony import */ var _mui_icons_material_PushPin__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! @mui/icons-material/PushPin */ \"(ssr)/./node_modules/@mui/icons-material/PushPin.js\");\n/* harmony import */ var _mui_icons_material_RestartAlt__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @mui/icons-material/RestartAlt */ \"(ssr)/./node_modules/@mui/icons-material/RestartAlt.js\");\n/* harmony import */ var _mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! @mui/icons-material/Save */ \"(ssr)/./node_modules/@mui/icons-material/Save.js\");\n/* harmony import */ var _mui_icons_material_Search__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! @mui/icons-material/Search */ \"(ssr)/./node_modules/@mui/icons-material/Search.js\");\n/* harmony import */ var _mui_icons_material_SearchOff__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! @mui/icons-material/SearchOff */ \"(ssr)/./node_modules/@mui/icons-material/SearchOff.js\");\n/* harmony import */ var _mui_icons_material_Sort__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! @mui/icons-material/Sort */ \"(ssr)/./node_modules/@mui/icons-material/Sort.js\");\n/* harmony import */ var _mui_icons_material_SyncAlt__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! @mui/icons-material/SyncAlt */ \"(ssr)/./node_modules/@mui/icons-material/SyncAlt.js\");\n/* harmony import */ var _mui_icons_material_ViewColumn__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! @mui/icons-material/ViewColumn */ \"(ssr)/./node_modules/@mui/icons-material/ViewColumn.js\");\n/* harmony import */ var _mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! @mui/icons-material/VisibilityOff */ \"(ssr)/./node_modules/@mui/icons-material/VisibilityOff.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst getColumnId = (columnDef) => { var _a, _b, _c, _d; return (_d = (_a = columnDef.id) !== null && _a !== void 0 ? _a : (_c = (_b = columnDef.accessorKey) === null || _b === void 0 ? void 0 : _b.toString) === null || _c === void 0 ? void 0 : _c.call(_b)) !== null && _d !== void 0 ? _d : columnDef.header; };\nconst getAllLeafColumnDefs = (columns) => {\n    const allLeafColumnDefs = [];\n    const getLeafColumns = (cols) => {\n        cols.forEach((col) => {\n            if (col.columns) {\n                getLeafColumns(col.columns);\n            }\n            else {\n                allLeafColumnDefs.push(col);\n            }\n        });\n    };\n    getLeafColumns(columns);\n    return allLeafColumnDefs;\n};\nconst prepareColumns = ({ aggregationFns, columnDefs, columnFilterFns, defaultDisplayColumn, filterFns, sortingFns, }) => columnDefs.map((columnDef) => {\n    var _a, _b;\n    //assign columnId\n    if (!columnDef.id)\n        columnDef.id = getColumnId(columnDef);\n    if ( true && !columnDef.id) {\n        console.error('Column definitions must have a valid `accessorKey` or `id` property');\n    }\n    //assign columnDefType\n    if (!columnDef.columnDefType)\n        columnDef.columnDefType = 'data';\n    if ((_a = columnDef.columns) === null || _a === void 0 ? void 0 : _a.length) {\n        columnDef.columnDefType = 'group';\n        //recursively prepare columns if this is a group column\n        columnDef.columns = prepareColumns({\n            aggregationFns,\n            columnDefs: columnDef.columns,\n            columnFilterFns,\n            defaultDisplayColumn,\n            filterFns,\n            sortingFns,\n        });\n    }\n    else if (columnDef.columnDefType === 'data') {\n        //assign aggregationFns if multiple aggregationFns are provided\n        if (Array.isArray(columnDef.aggregationFn)) {\n            const aggFns = columnDef.aggregationFn;\n            columnDef.aggregationFn = (columnId, leafRows, childRows) => aggFns.map((fn) => { var _a; return (_a = aggregationFns[fn]) === null || _a === void 0 ? void 0 : _a.call(aggregationFns, columnId, leafRows, childRows); });\n        }\n        //assign filterFns\n        if (Object.keys(filterFns).includes(columnFilterFns[columnDef.id])) {\n            columnDef.filterFn =\n                (_b = filterFns[columnFilterFns[columnDef.id]]) !== null && _b !== void 0 ? _b : filterFns.fuzzy;\n            columnDef._filterFn =\n                columnFilterFns[columnDef.id];\n        }\n        //assign sortingFns\n        if (Object.keys(sortingFns).includes(columnDef.sortingFn)) {\n            // @ts-ignore\n            columnDef.sortingFn = sortingFns[columnDef.sortingFn];\n        }\n    }\n    else if (columnDef.columnDefType === 'display') {\n        columnDef = Object.assign(Object.assign({}, defaultDisplayColumn), columnDef);\n    }\n    return columnDef;\n});\nconst reorderColumn = (draggedColumn, targetColumn, columnOrder) => {\n    if (draggedColumn.getCanPin()) {\n        draggedColumn.pin(targetColumn.getIsPinned());\n    }\n    const newColumnOrder = [...columnOrder];\n    newColumnOrder.splice(newColumnOrder.indexOf(targetColumn.id), 0, newColumnOrder.splice(newColumnOrder.indexOf(draggedColumn.id), 1)[0]);\n    return newColumnOrder;\n};\nconst showExpandColumn = (props, grouping) => !!(props.enableExpanding ||\n    (props.enableGrouping && (grouping === undefined || (grouping === null || grouping === void 0 ? void 0 : grouping.length))) ||\n    props.renderDetailPanel);\nconst getLeadingDisplayColumnIds = (props) => {\n    var _a, _b;\n    return [\n        props.enableRowPinning &&\n            !((_a = props.rowPinningDisplayMode) === null || _a === void 0 ? void 0 : _a.startsWith('select')) &&\n            'mrt-row-pin',\n        (props.enableRowDragging || props.enableRowOrdering) && 'mrt-row-drag',\n        props.positionActionsColumn === 'first' &&\n            (props.enableRowActions ||\n                (props.enableEditing &&\n                    ['modal', 'row'].includes((_b = props.editDisplayMode) !== null && _b !== void 0 ? _b : ''))) &&\n            'mrt-row-actions',\n        props.positionExpandColumn === 'first' &&\n            showExpandColumn(props) &&\n            'mrt-row-expand',\n        props.enableRowSelection && 'mrt-row-select',\n        props.enableRowNumbers && 'mrt-row-numbers',\n    ].filter(Boolean);\n};\nconst getTrailingDisplayColumnIds = (props) => {\n    var _a;\n    return [\n        props.positionActionsColumn === 'last' &&\n            (props.enableRowActions ||\n                (props.enableEditing &&\n                    ['modal', 'row'].includes((_a = props.editDisplayMode) !== null && _a !== void 0 ? _a : ''))) &&\n            'mrt-row-actions',\n        props.positionExpandColumn === 'last' &&\n            showExpandColumn(props) &&\n            'mrt-row-expand',\n        props.layoutMode === 'grid-no-grow' && 'mrt-row-spacer',\n    ].filter(Boolean);\n};\nconst getDefaultColumnOrderIds = (props) => {\n    const leadingDisplayCols = getLeadingDisplayColumnIds(props);\n    const trailingDisplayCols = getTrailingDisplayColumnIds(props);\n    const allLeafColumnDefs = getAllLeafColumnDefs(props.columns)\n        .map((columnDef) => getColumnId(columnDef))\n        .filter((columnId) => !leadingDisplayCols.includes(columnId) &&\n        !trailingDisplayCols.includes(columnId));\n    return [...leadingDisplayCols, ...allLeafColumnDefs, ...trailingDisplayCols];\n};\nconst getDefaultColumnFilterFn = (columnDef) => {\n    var _a;\n    if (columnDef.filterVariant === 'multi-select')\n        return 'arrIncludesSome';\n    if ((_a = columnDef.filterVariant) === null || _a === void 0 ? void 0 : _a.includes('range'))\n        return 'betweenInclusive';\n    if (columnDef.filterVariant === 'select' ||\n        columnDef.filterVariant === 'checkbox')\n        return 'equals';\n    return 'fuzzy';\n};\nconst getIsFirstColumn = (column, table) => {\n    const leftColumns = table.getLeftVisibleLeafColumns();\n    return leftColumns.length\n        ? leftColumns[0].id === column.id\n        : table.getVisibleLeafColumns()[0].id === column.id;\n};\nconst getIsLastColumn = (column, table) => {\n    const rightColumns = table.getRightVisibleLeafColumns();\n    const columns = table.getVisibleLeafColumns();\n    return rightColumns.length\n        ? rightColumns[rightColumns.length - 1].id === column.id\n        : columns[columns.length - 1].id === column.id;\n};\nconst getIsLastLeftPinnedColumn = (table, column) => {\n    return (column.getIsPinned() === 'left' &&\n        table.getLeftLeafHeaders().length - 1 === column.getPinnedIndex());\n};\nconst getIsFirstRightPinnedColumn = (column) => {\n    return column.getIsPinned() === 'right' && column.getPinnedIndex() === 0;\n};\nconst getTotalRight = (table, column) => {\n    return table\n        .getRightLeafHeaders()\n        .slice(column.getPinnedIndex() + 1)\n        .reduce((acc, col) => acc + col.getSize(), 0);\n};\nconst getCanRankRows = (table) => {\n    const { getState, options } = table;\n    const { enableGlobalFilterRankedResults, manualExpanding, manualFiltering, manualGrouping, manualSorting, } = options;\n    const { expanded, globalFilterFn } = getState();\n    return (!manualExpanding &&\n        !manualFiltering &&\n        !manualGrouping &&\n        !manualSorting &&\n        enableGlobalFilterRankedResults &&\n        globalFilterFn === 'fuzzy' &&\n        expanded !== true &&\n        !Object.values(expanded).some(Boolean));\n};\nconst parseFromValuesOrFunc = (fn, arg) => (fn instanceof Function ? fn(arg) : fn);\nconst flexRender = _tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__.flexRender;\nconst createRow = (table, originalRow) => (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.createRow)(table, 'mrt-row-create', originalRow !== null && originalRow !== void 0 ? originalRow : Object.assign({}, ...getAllLeafColumnDefs(table.options.columns).map((col) => ({\n    [getColumnId(col)]: '',\n}))), -1, 0);\nconst extraIndexRangeExtractor = (range, draggingIndex) => {\n    const newIndexes = (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_5__.defaultRangeExtractor)(range);\n    if (draggingIndex >= 0 &&\n        draggingIndex < Math.max(range.startIndex - range.overscan, 0)) {\n        newIndexes.unshift(draggingIndex);\n    }\n    if (draggingIndex >= 0 && draggingIndex > range.endIndex + range.overscan) {\n        newIndexes.push(draggingIndex);\n    }\n    return newIndexes;\n};\nfunction createMRTColumnHelper() {\n    return {\n        accessor: (accessor, column) => {\n            return typeof accessor === 'function'\n                ? Object.assign(Object.assign({}, column), { accessorFn: accessor })\n                : Object.assign(Object.assign({}, column), { accessorKey: accessor });\n        },\n        display: (column) => column,\n        group: (column) => column,\n    };\n}\nconst getValueAndLabel = (option) => {\n    var _a, _b, _c;\n    let label = '';\n    let value = '';\n    if (option) {\n        if (typeof option !== 'object') {\n            label = option;\n            value = option;\n        }\n        else {\n            label = (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.text) !== null && _b !== void 0 ? _b : option.value;\n            value = (_c = option.value) !== null && _c !== void 0 ? _c : label;\n        }\n    }\n    return { label, value };\n};\n\nconst parseCSSVarId = (id) => id.replace(/[^a-zA-Z0-9]/g, '_');\nconst getMRTTheme = (table, theme) => (Object.assign({ baseBackgroundColor: theme.palette.mode === 'dark'\n        ? (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.lighten)(theme.palette.background.default, 0.05)\n        : theme.palette.background.default, draggingBorderColor: theme.palette.primary.main, matchHighlightColor: theme.palette.mode === 'dark'\n        ? (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.darken)(theme.palette.warning.dark, 0.25)\n        : (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.lighten)(theme.palette.warning.light, 0.5), pinnedRowBackgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(theme.palette.primary.main, 0.1), selectedRowBackgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(theme.palette.primary.main, 0.2) }, parseFromValuesOrFunc(table.options.mrtTheme, theme)));\nconst getCommonMRTCellStyles = ({ column, header, table, tableCellProps, theme, }) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    const { options: { layoutMode }, } = table;\n    const widthStyles = {\n        minWidth: `max(calc(var(--${header ? 'header' : 'col'}-${parseCSSVarId((_a = header === null || header === void 0 ? void 0 : header.id) !== null && _a !== void 0 ? _a : column.id)}-size) * 1px), ${(_b = column.columnDef.minSize) !== null && _b !== void 0 ? _b : 30}px)`,\n        width: `calc(var(--${header ? 'header' : 'col'}-${parseCSSVarId((_c = header === null || header === void 0 ? void 0 : header.id) !== null && _c !== void 0 ? _c : column.id)}-size) * 1px)`,\n    };\n    if (layoutMode === 'grid') {\n        widthStyles.flex = `var(--${header ? 'header' : 'col'}-${parseCSSVarId((_d = header === null || header === void 0 ? void 0 : header.id) !== null && _d !== void 0 ? _d : column.id)}-size) 0 auto`;\n    }\n    else if (layoutMode === 'grid-no-grow') {\n        widthStyles.flex = '0 0 auto';\n    }\n    return Object.assign(Object.assign({ backgroundColor: column.getIsPinned() && column.columnDef.columnDefType !== 'group'\n            ? (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)((0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.darken)(getMRTTheme(table, theme).baseBackgroundColor, theme.palette.mode === 'dark' ? 0.05 : 0.01), 0.97)\n            : 'inherit', backgroundImage: 'inherit', boxShadow: getIsLastLeftPinnedColumn(table, column)\n            ? `-4px 0 8px -6px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(theme.palette.grey[700], 0.5)} inset`\n            : getIsFirstRightPinnedColumn(column)\n                ? `4px 0 8px -6px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(theme.palette.grey[700], 0.5)} inset`\n                : undefined, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, left: column.getIsPinned() === 'left'\n            ? `${column.getStart('left')}px`\n            : undefined, ml: table.options.enableColumnVirtualization &&\n            column.getIsPinned() === 'left' &&\n            column.getPinnedIndex() === 0\n            ? `-${column.getSize() *\n                ((_f = (_e = table.getState().columnPinning.left) === null || _e === void 0 ? void 0 : _e.length) !== null && _f !== void 0 ? _f : 1)}px`\n            : undefined, mr: table.options.enableColumnVirtualization &&\n            column.getIsPinned() === 'right' &&\n            column.getPinnedIndex() === table.getVisibleLeafColumns().length - 1\n            ? `-${column.getSize() *\n                ((_h = (_g = table.getState().columnPinning.right) === null || _g === void 0 ? void 0 : _g.length) !== null && _h !== void 0 ? _h : 1) *\n                1.2}px`\n            : undefined, opacity: ((_j = table.getState().draggingColumn) === null || _j === void 0 ? void 0 : _j.id) === column.id ||\n            ((_k = table.getState().hoveredColumn) === null || _k === void 0 ? void 0 : _k.id) === column.id\n            ? 0.5\n            : 1, position: column.getIsPinned() && column.columnDef.columnDefType !== 'group'\n            ? 'sticky'\n            : undefined, right: column.getIsPinned() === 'right'\n            ? `${getTotalRight(table, column)}px`\n            : undefined, transition: table.options.enableColumnVirtualization\n            ? 'none'\n            : `padding 150ms ease-in-out` }, widthStyles), parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme));\n};\nconst getCommonToolbarStyles = ({ table, theme, }) => ({\n    alignItems: 'flex-start',\n    backgroundColor: getMRTTheme(table, theme).baseBackgroundColor,\n    display: 'grid',\n    flexWrap: 'wrap-reverse',\n    minHeight: '3.5rem',\n    overflow: 'hidden',\n    position: 'relative',\n    transition: 'all 150ms ease-in-out',\n    zIndex: 1,\n});\n\nconst allowedTypes = ['string', 'number'];\nconst MRT_TableBodyCellValue = ({ cell, table, }) => {\n    var _a, _b, _c;\n    const { getState, options: { enableFilterMatchHighlighting }, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { globalFilter, globalFilterFn } = getState();\n    const filterValue = column.getFilterValue();\n    let renderedCellValue = cell.getIsAggregated() && columnDef.AggregatedCell\n        ? columnDef.AggregatedCell({\n            cell,\n            column,\n            row,\n            table,\n        })\n        : row.getIsGrouped() && !cell.getIsGrouped()\n            ? null\n            : cell.getIsGrouped() && columnDef.GroupedCell\n                ? columnDef.GroupedCell({\n                    cell,\n                    column,\n                    row,\n                    table,\n                })\n                : undefined;\n    const isGroupedValue = renderedCellValue !== undefined;\n    if (!isGroupedValue) {\n        renderedCellValue = cell.renderValue();\n    }\n    if (enableFilterMatchHighlighting &&\n        columnDef.enableFilterMatchHighlighting !== false &&\n        String(renderedCellValue) &&\n        allowedTypes.includes(typeof renderedCellValue) &&\n        ((filterValue &&\n            allowedTypes.includes(typeof filterValue) &&\n            columnDef.filterVariant === 'text') ||\n            (globalFilter &&\n                allowedTypes.includes(typeof globalFilter) &&\n                column.getCanGlobalFilter()))) {\n        const chunks = highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === null || highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === void 0 ? void 0 : (0,highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            matchExactly: (filterValue ? columnDef._filterFn : globalFilterFn) !== 'fuzzy',\n            query: ((_a = filterValue !== null && filterValue !== void 0 ? filterValue : globalFilter) !== null && _a !== void 0 ? _a : '').toString(),\n            text: renderedCellValue === null || renderedCellValue === void 0 ? void 0 : renderedCellValue.toString(),\n        });\n        if ((chunks === null || chunks === void 0 ? void 0 : chunks.length) > 1 || ((_b = chunks === null || chunks === void 0 ? void 0 : chunks[0]) === null || _b === void 0 ? void 0 : _b.match)) {\n            renderedCellValue = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { \"aria-label\": renderedCellValue, role: \"note\", children: (_c = chunks === null || chunks === void 0 ? void 0 : chunks.map(({ key, match, text }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { \"aria-hidden\": \"true\", component: \"span\", sx: match\n                        ? {\n                            backgroundColor: (theme) => getMRTTheme(table, theme).matchHighlightColor,\n                            borderRadius: '2px',\n                            color: (theme) => theme.palette.mode === 'dark'\n                                ? theme.palette.common.white\n                                : theme.palette.common.black,\n                            padding: '2px 1px',\n                        }\n                        : undefined, children: text }, key)))) !== null && _c !== void 0 ? _c : renderedCellValue }));\n        }\n    }\n    if (columnDef.Cell && !isGroupedValue) {\n        renderedCellValue = columnDef.Cell({\n            cell,\n            column,\n            renderedCellValue,\n            row,\n            table,\n        });\n    }\n    return renderedCellValue;\n};\n\nconst MRT_GrabHandleButton = (_a) => {\n    var _b;\n    var { iconButtonProps, location, onDragEnd, onDragStart, table } = _a, rest = __rest(_a, [\"iconButtonProps\", \"location\", \"onDragEnd\", \"onDragStart\", \"table\"]);\n    const { options: { icons: { DragHandleIcon }, localization, }, } = table;\n    const _iconButtonProps = Object.assign(Object.assign({}, iconButtonProps), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, placement: \"top\", title: (_b = _iconButtonProps === null || _iconButtonProps === void 0 ? void 0 : _iconButtonProps.title) !== null && _b !== void 0 ? _b : localization.move, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ disableRipple: true, draggable: \"true\", size: \"small\" }, _iconButtonProps, { onClick: (e) => {\n                var _a;\n                e.stopPropagation();\n                (_a = _iconButtonProps === null || _iconButtonProps === void 0 ? void 0 : _iconButtonProps.onClick) === null || _a === void 0 ? void 0 : _a.call(_iconButtonProps, e);\n            }, onDragEnd: onDragEnd, onDragStart: onDragStart, sx: (theme) => (Object.assign({ '&:active': {\n                    cursor: 'grabbing',\n                }, '&:hover': {\n                    backgroundColor: 'transparent',\n                    opacity: 1,\n                }, cursor: 'grab', m: '0 -0.1rem', opacity: location === 'row' ? 1 : 0.3, p: '2px', transition: 'all 150ms ease-in-out' }, parseFromValuesOrFunc(_iconButtonProps === null || _iconButtonProps === void 0 ? void 0 : _iconButtonProps.sx, theme))), title: undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DragHandleIcon, {}) })) }));\n};\n\nconst MRT_TableBodyRowGrabHandle = (_a) => {\n    var { row, rowRef, table } = _a, rest = __rest(_a, [\"row\", \"rowRef\", \"table\"]);\n    const { options: { muiRowDragHandleProps }, } = table;\n    const iconButtonProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiRowDragHandleProps, {\n        row,\n        table,\n    })), rest);\n    const handleDragStart = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragStart) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        event.dataTransfer.setDragImage(rowRef.current, 0, 0);\n        table.setDraggingRow(row);\n    };\n    const handleDragEnd = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragEnd) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        table.setDraggingRow(null);\n        table.setHoveredRow(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GrabHandleButton, { iconButtonProps: iconButtonProps, location: \"row\", onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table }));\n};\n\nconst MRT_CopyButton = (_a) => {\n    var _b;\n    var { cell, table } = _a, rest = __rest(_a, [\"cell\", \"table\"]);\n    const { options: { localization, muiCopyButtonProps }, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const [copied, setCopied] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleCopy = (event, text) => {\n        event.stopPropagation();\n        navigator.clipboard.writeText(text);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 4000);\n    };\n    const buttonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiCopyButtonProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiCopyButtonProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, placement: \"top\", title: (_b = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.title) !== null && _b !== void 0 ? _b : (copied ? localization.copiedToClipboard : localization.clickToCopy), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), Object.assign({ onClick: (e) => handleCopy(e, cell.getValue()), size: \"small\", type: \"button\", variant: \"text\" }, buttonProps, { sx: (theme) => (Object.assign({ backgroundColor: 'transparent', border: 'none', color: 'inherit', cursor: 'copy', fontFamily: 'inherit', fontSize: 'inherit', letterSpacing: 'inherit', m: '-0.25rem', minWidth: 'unset', textAlign: 'inherit', textTransform: 'inherit' }, parseFromValuesOrFunc(buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.sx, theme))), title: undefined })) }));\n};\n\nconst MRT_EditCellTextField = (_a) => {\n    var _b, _c, _d;\n    var { cell, table } = _a, rest = __rest(_a, [\"cell\", \"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, muiEditTextFieldProps }, refs: { editInputRefs }, setCreatingRow, setEditingCell, setEditingRow, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { creatingRow, editingRow } = getState();\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const isSelectEdit = columnDef.editVariant === 'select';\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => cell.getValue());\n    const textFieldProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiEditTextFieldProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiEditTextFieldProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), rest);\n    const saveInputValueToRowCache = (newValue) => {\n        //@ts-ignore\n        row._valuesCache[column.id] = newValue;\n        if (isCreating) {\n            setCreatingRow(row);\n        }\n        else if (isEditing) {\n            setEditingRow(row);\n        }\n    };\n    const handleChange = (event) => {\n        var _a;\n        (_a = textFieldProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        setValue(event.target.value);\n        if (textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.select) {\n            saveInputValueToRowCache(event.target.value);\n        }\n    };\n    const handleBlur = (event) => {\n        var _a;\n        (_a = textFieldProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        saveInputValueToRowCache(value);\n        setEditingCell(null);\n    };\n    const handleEnterKeyDown = (event) => {\n        var _a, _b;\n        (_a = textFieldProps.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        if (event.key === 'Enter' && !event.shiftKey) {\n            (_b = editInputRefs.current[column.id]) === null || _b === void 0 ? void 0 : _b.blur();\n        }\n    };\n    if (columnDef.Edit) {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (_b = columnDef.Edit) === null || _b === void 0 ? void 0 : _b.call(columnDef, { cell, column, row, table }) });\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TextField__WEBPACK_IMPORTED_MODULE_11___default()), Object.assign({ disabled: parseFromValuesOrFunc(columnDef.enableEditing, row) === false, fullWidth: true, inputRef: (inputRef) => {\n            if (inputRef) {\n                editInputRefs.current[column.id] = inputRef;\n                if (textFieldProps.inputRef) {\n                    textFieldProps.inputRef = inputRef;\n                }\n            }\n        }, label: ['custom', 'modal'].includes((isCreating ? createDisplayMode : editDisplayMode))\n            ? columnDef.header\n            : undefined, margin: \"none\", name: column.id, placeholder: !['custom', 'modal'].includes((isCreating ? createDisplayMode : editDisplayMode))\n            ? columnDef.header\n            : undefined, select: isSelectEdit, size: \"small\", value: value, variant: \"standard\" }, textFieldProps, { InputProps: Object.assign(Object.assign({ disableUnderline: editDisplayMode === 'table' }, textFieldProps.InputProps), { sx: (theme) => {\n                var _a;\n                return (Object.assign({ mb: 0 }, parseFromValuesOrFunc((_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.sx, theme)));\n            } }), inputProps: Object.assign({ autoComplete: 'new-password' }, textFieldProps.inputProps), onBlur: handleBlur, onChange: handleChange, onClick: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.onClick) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, e);\n        }, onKeyDown: handleEnterKeyDown, children: (_c = textFieldProps.children) !== null && _c !== void 0 ? _c : (_d = columnDef === null || columnDef === void 0 ? void 0 : columnDef.editSelectOptions) === null || _d === void 0 ? void 0 : _d.map((option) => {\n            const { label, value } = getValueAndLabel(option);\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { sx: {\n                    alignItems: 'center',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    m: 0,\n                }, value: value, children: label }, value));\n        }) })));\n};\n\nconst MRT_TableBodyCell = (_a) => {\n    var _b, _c, _d, _e, _f;\n    var { cell, measureElement, numRows, rowIndex, rowRef, table, virtualIndex } = _a, rest = __rest(_a, [\"cell\", \"measureElement\", \"numRows\", \"rowIndex\", \"rowRef\", \"table\", \"virtualIndex\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.useTheme)();\n    const { getState, options: { columnResizeMode, createDisplayMode, editDisplayMode, enableClickToCopy, enableColumnOrdering, enableEditing, enableGrouping, enableRowNumbers, layoutMode, muiSkeletonProps, muiTableBodyCellProps, rowNumberDisplayMode, }, refs: { editInputRefs }, setEditingCell, setHoveredColumn, } = table;\n    const { columnSizingInfo, creatingRow, density, draggingColumn, draggingRow, editingCell, editingRow, hoveredColumn, hoveredRow, isLoading, showSkeletons, } = getState();\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const args = { cell, column, row, table };\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableBodyCellProps, args)), parseFromValuesOrFunc(columnDef.muiTableBodyCellProps, args)), rest);\n    const skeletonProps = parseFromValuesOrFunc(muiSkeletonProps, {\n        cell,\n        column,\n        row,\n        table,\n    });\n    const { draggingBorderColor } = getMRTTheme(table, theme);\n    const [skeletonWidth, setSkeletonWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(100);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if ((!isLoading && !showSkeletons) || skeletonWidth !== 100)\n            return;\n        const size = column.getSize();\n        setSkeletonWidth(columnDefType === 'display'\n            ? size / 2\n            : Math.round(Math.random() * (size - size / 3) + size / 3));\n    }, [isLoading, showSkeletons]);\n    const draggingBorders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        const isDraggingColumn = (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id;\n        const isHoveredColumn = (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id;\n        const isDraggingRow = (draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.id) === row.id;\n        const isHoveredRow = (hoveredRow === null || hoveredRow === void 0 ? void 0 : hoveredRow.id) === row.id;\n        const isFirstColumn = getIsFirstColumn(column, table);\n        const isLastColumn = getIsLastColumn(column, table);\n        const isLastRow = numRows && rowIndex === numRows - 1;\n        const showResizeBorder = columnSizingInfo.isResizingColumn === column.id &&\n            columnResizeMode === 'onChange';\n        const borderStyle = showResizeBorder\n            ? `2px solid ${draggingBorderColor} !important`\n            : isDraggingColumn || isDraggingRow\n                ? `1px dashed ${theme.palette.grey[500]} !important`\n                : isHoveredColumn ||\n                    isHoveredRow ||\n                    columnSizingInfo.isResizingColumn === column.id\n                    ? `2px dashed ${draggingBorderColor} !important`\n                    : undefined;\n        if (showResizeBorder) {\n            return { borderRight: borderStyle };\n        }\n        return borderStyle\n            ? {\n                borderBottom: isDraggingRow || isHoveredRow || isLastRow\n                    ? borderStyle\n                    : undefined,\n                borderLeft: isDraggingColumn ||\n                    isHoveredColumn ||\n                    ((isDraggingRow || isHoveredRow) && isFirstColumn)\n                    ? borderStyle\n                    : undefined,\n                borderRight: isDraggingColumn ||\n                    isHoveredColumn ||\n                    ((isDraggingRow || isHoveredRow) && isLastColumn)\n                    ? borderStyle\n                    : undefined,\n                borderTop: isDraggingRow || isHoveredRow ? borderStyle : undefined,\n            }\n            : undefined;\n    }, [\n        columnSizingInfo.isResizingColumn,\n        draggingColumn,\n        draggingRow,\n        hoveredColumn,\n        hoveredRow,\n        rowIndex,\n    ]);\n    const isEditable = parseFromValuesOrFunc(enableEditing, row) &&\n        parseFromValuesOrFunc(columnDef.enableEditing, row) !== false;\n    const isEditing = isEditable &&\n        !['custom', 'modal'].includes(editDisplayMode) &&\n        (editDisplayMode === 'table' ||\n            (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id ||\n            (editingCell === null || editingCell === void 0 ? void 0 : editingCell.id) === cell.id) &&\n        !row.getIsGrouped();\n    const isCreating = isEditable && createDisplayMode === 'row' && (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const handleDoubleClick = (event) => {\n        var _a;\n        (_a = tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.onDoubleClick) === null || _a === void 0 ? void 0 : _a.call(tableCellProps, event);\n        if (isEditable && editDisplayMode === 'cell') {\n            setEditingCell(cell);\n            queueMicrotask(() => {\n                var _a;\n                const textField = editInputRefs.current[column.id];\n                if (textField) {\n                    textField.focus();\n                    (_a = textField.select) === null || _a === void 0 ? void 0 : _a.call(textField);\n                }\n            });\n        }\n    };\n    const handleDragEnter = (e) => {\n        var _a;\n        (_a = tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.onDragEnter) === null || _a === void 0 ? void 0 : _a.call(tableCellProps, e);\n        if (enableGrouping && (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            setHoveredColumn(null);\n        }\n        if (enableColumnOrdering && draggingColumn) {\n            setHoveredColumn(columnDef.enableColumnOrdering !== false ? column : null);\n        }\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13___default()), Object.assign({ \"data-index\": virtualIndex, ref: (node) => {\n            if (node) {\n                measureElement === null || measureElement === void 0 ? void 0 : measureElement(node);\n            }\n        } }, tableCellProps, { onDoubleClick: handleDoubleClick, onDragEnter: handleDragEnter, sx: (theme) => (Object.assign(Object.assign({ '&:hover': {\n                outline: ['cell', 'table'].includes(editDisplayMode !== null && editDisplayMode !== void 0 ? editDisplayMode : '') && isEditable\n                    ? `1px solid ${theme.palette.grey[500]}`\n                    : undefined,\n                outlineOffset: '-1px',\n                textOverflow: 'clip',\n            }, alignItems: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'center' : undefined, cursor: isEditable && editDisplayMode === 'cell' ? 'pointer' : 'inherit', justifyContent: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid'))\n                ? tableCellProps.align\n                : undefined, overflow: 'hidden', p: density === 'compact'\n                ? columnDefType === 'display'\n                    ? '0 0.5rem'\n                    : '0.5rem'\n                : density === 'comfortable'\n                    ? columnDefType === 'display'\n                        ? '0.5rem 0.75rem'\n                        : '1rem'\n                    : columnDefType === 'display'\n                        ? '1rem 1.25rem'\n                        : '1.5rem', textOverflow: columnDefType !== 'display' ? 'ellipsis' : undefined, [theme.direction === 'rtl' ? 'pr' : 'pl']: column.id === 'mrt-row-expand'\n                ? `${row.depth +\n                    (density === 'compact'\n                        ? 0.5\n                        : density === 'comfortable'\n                            ? 0.75\n                            : 1.25)}rem`\n                : undefined, whiteSpace: row.getIsPinned() || density === 'compact' ? 'nowrap' : 'normal', zIndex: (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id ? 2 : column.getIsPinned() ? 1 : 0 }, getCommonMRTCellStyles({\n            column,\n            table,\n            tableCellProps,\n            theme,\n        })), draggingBorders)), children: (_b = tableCellProps.children) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [cell.getIsPlaceholder() ? ((_d = (_c = columnDef.PlaceholderCell) === null || _c === void 0 ? void 0 : _c.call(columnDef, { cell, column, row, table })) !== null && _d !== void 0 ? _d : null) : showSkeletons !== false && (isLoading || showSkeletons) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_14___default()), Object.assign({ animation: \"wave\", height: 20, width: skeletonWidth }, skeletonProps))) : enableRowNumbers &&\n                    rowNumberDisplayMode === 'static' &&\n                    column.id === 'mrt-row-numbers' ? (rowIndex + 1) : column.id === 'mrt-row-drag' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRowGrabHandle, { row: row, rowRef: rowRef, table: table })) : columnDefType === 'display' &&\n                    (column.id === 'mrt-row-select' ||\n                        column.id === 'mrt-row-expand' ||\n                        !row.getIsGrouped()) ? ((_e = columnDef.Cell) === null || _e === void 0 ? void 0 : _e.call(columnDef, {\n                    cell,\n                    column,\n                    renderedCellValue: cell.renderValue(),\n                    row,\n                    table,\n                })) : isCreating || isEditing ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_EditCellTextField, { cell: cell, table: table })) : (enableClickToCopy || columnDef.enableClickToCopy) &&\n                    columnDef.enableClickToCopy !== false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_CopyButton, { cell: cell, table: table, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyCellValue, { cell: cell, table: table }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyCellValue, { cell: cell, table: table })), cell.getIsGrouped() && !columnDef.GroupedCell && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\" (\", (_f = row.subRows) === null || _f === void 0 ? void 0 : _f.length, \")\"] }))] })) })));\n};\nconst Memo_MRT_TableBodyCell = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(MRT_TableBodyCell, (prev, next) => next.cell === prev.cell);\n\nconst MRT_TableDetailPanel = (_a) => {\n    var { parentRowRef, row, rowIndex, table, virtualRow } = _a, rest = __rest(_a, [\"parentRowRef\", \"row\", \"rowIndex\", \"table\", \"virtualRow\"]);\n    const { getState, getVisibleLeafColumns, options: { layoutMode, muiDetailPanelProps, muiTableBodyRowProps, renderDetailPanel, }, } = table;\n    const { isLoading } = getState();\n    const tableRowProps = parseFromValuesOrFunc(muiTableBodyRowProps, {\n        isDetailPanel: true,\n        row,\n        staticRowIndex: rowIndex,\n        table,\n    });\n    const tableCellProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiDetailPanelProps, {\n        row,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15___default()), Object.assign({ className: \"Mui-TableBodyCell-DetailPanel\" }, tableRowProps, { sx: (theme) => {\n            var _a, _b;\n            return (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, position: virtualRow ? 'absolute' : undefined, top: virtualRow\n                    ? `${(_b = (_a = parentRowRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.height}px`\n                    : undefined, transform: virtualRow\n                    ? `translateY(${virtualRow === null || virtualRow === void 0 ? void 0 : virtualRow.start}px)`\n                    : undefined, width: '100%', zIndex: virtualRow ? 2 : undefined }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme)));\n        }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13___default()), Object.assign({ className: \"Mui-TableBodyCell-DetailPanel\", colSpan: getVisibleLeafColumns().length }, tableCellProps, { sx: (theme) => (Object.assign({ backgroundColor: virtualRow\n                    ? getMRTTheme(table, theme).baseBackgroundColor\n                    : undefined, borderBottom: !row.getIsExpanded() ? 'none' : undefined, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, py: row.getIsExpanded() ? '1rem' : 0, transition: 'all 150ms ease-in-out', width: `${table.getTotalSize()}px` }, parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme))), children: renderDetailPanel && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default()), { in: row.getIsExpanded(), mountOnEnter: true, unmountOnExit: true, children: !isLoading && renderDetailPanel({ row, table }) })) })) })));\n};\n\nconst MRT_TableBodyRow = ({ columnVirtualizer, measureElement, numRows, pinnedRowIds, row, rowIndex, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight, virtualRow, }) => {\n    var _a, _b, _c, _d;\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.useTheme)();\n    const { getState, options: { enableRowOrdering, enableRowPinning, enableStickyFooter, enableStickyHeader, layoutMode, memoMode, muiTableBodyRowProps, renderDetailPanel, rowPinningDisplayMode, }, refs: { tableFooterRef, tableHeadRef }, setHoveredRow, } = table;\n    const { density, draggingColumn, draggingRow, editingCell, editingRow, hoveredRow, isFullScreen, rowPinning, } = getState();\n    const isPinned = enableRowPinning && row.getIsPinned();\n    const tableRowProps = parseFromValuesOrFunc(muiTableBodyRowProps, {\n        row,\n        staticRowIndex: rowIndex,\n        table,\n    });\n    const [bottomPinnedIndex, topPinnedIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        if (!enableRowPinning ||\n            !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) ||\n            !pinnedRowIds ||\n            !row.getIsPinned())\n            return [];\n        return [\n            [...pinnedRowIds].reverse().indexOf(row.id),\n            pinnedRowIds.indexOf(row.id),\n        ];\n    }, [pinnedRowIds, rowPinning]);\n    const tableHeadHeight = ((enableStickyHeader || isFullScreen) &&\n        ((_a = tableHeadRef.current) === null || _a === void 0 ? void 0 : _a.clientHeight)) ||\n        0;\n    const tableFooterHeight = (enableStickyFooter && ((_b = tableFooterRef.current) === null || _b === void 0 ? void 0 : _b.clientHeight)) || 0;\n    const sx = parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme);\n    const rowHeight = \n    // @ts-ignore\n    parseInt((_d = (_c = tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.style) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : sx === null || sx === void 0 ? void 0 : sx.height, 10) ||\n        (density === 'compact' ? 37 : density === 'comfortable' ? 53 : 69);\n    const handleDragEnter = (_e) => {\n        if (enableRowOrdering && draggingRow) {\n            setHoveredRow(row);\n        }\n    };\n    const rowRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const { baseBackgroundColor, pinnedRowBackgroundColor, selectedRowBackgroundColor, } = getMRTTheme(table, theme);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15___default()), Object.assign({ \"data-index\": virtualRow === null || virtualRow === void 0 ? void 0 : virtualRow.index, \"data-pinned\": !!isPinned || undefined, \"data-selected\": row.getIsSelected() || undefined, onDragEnter: handleDragEnter, ref: (node) => {\n                    if (node) {\n                        rowRef.current = node;\n                        measureElement === null || measureElement === void 0 ? void 0 : measureElement(node);\n                    }\n                }, selected: row.getIsSelected() }, tableRowProps, { style: Object.assign({ transform: virtualRow\n                        ? `translateY(${virtualRow === null || virtualRow === void 0 ? void 0 : virtualRow.start}px)`\n                        : undefined }, tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.style), sx: (theme) => (Object.assign({ '&:hover td': {\n                        backgroundColor: (tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.hover) !== false\n                            ? row.getIsSelected()\n                                ? `${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(selectedRowBackgroundColor, 0.3)}`\n                                : theme.palette.mode === 'dark'\n                                    ? `${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.lighten)(baseBackgroundColor, 0.05)}`\n                                    : `${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.darken)(baseBackgroundColor, 0.05)}`\n                            : undefined,\n                    }, backgroundColor: `${baseBackgroundColor} !important`, bottom: !virtualRow && bottomPinnedIndex !== undefined && isPinned\n                        ? `${bottomPinnedIndex * rowHeight +\n                            (enableStickyFooter ? tableFooterHeight - 1 : 0)}px`\n                        : undefined, boxSizing: 'border-box', display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, opacity: isPinned\n                        ? 0.97\n                        : (draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.id) === row.id || (hoveredRow === null || hoveredRow === void 0 ? void 0 : hoveredRow.id) === row.id\n                            ? 0.5\n                            : 1, position: virtualRow\n                        ? 'absolute'\n                        : (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) && isPinned\n                            ? 'sticky'\n                            : undefined, td: {\n                        backgroundColor: row.getIsSelected()\n                            ? selectedRowBackgroundColor\n                            : isPinned\n                                ? pinnedRowBackgroundColor\n                                : undefined,\n                    }, top: virtualRow\n                        ? 0\n                        : topPinnedIndex !== undefined && isPinned\n                            ? `${topPinnedIndex * rowHeight +\n                                (enableStickyHeader || isFullScreen ? tableHeadHeight - 1 : 0)}px`\n                            : undefined, transition: virtualRow ? 'none' : 'all 150ms ease-in-out', width: '100%', zIndex: (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) && isPinned\n                        ? 2\n                        : undefined }, sx)), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : row.getVisibleCells()).map((cellOrVirtualCell) => {\n                        const cell = columnVirtualizer\n                            ? row.getVisibleCells()[cellOrVirtualCell.index]\n                            : cellOrVirtualCell;\n                        const props = {\n                            cell,\n                            measureElement: columnVirtualizer === null || columnVirtualizer === void 0 ? void 0 : columnVirtualizer.measureElement,\n                            numRows,\n                            rowIndex,\n                            rowRef,\n                            table,\n                            virtualIndex: columnVirtualizer\n                                ? cellOrVirtualCell.index\n                                : undefined,\n                        };\n                        return cell ? (memoMode === 'cells' &&\n                            cell.column.columnDef.columnDefType === 'data' &&\n                            !draggingColumn &&\n                            !draggingRow &&\n                            (editingCell === null || editingCell === void 0 ? void 0 : editingCell.id) !== cell.id &&\n                            (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) !== row.id ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Memo_MRT_TableBodyCell, Object.assign({}, props), cell.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyCell, Object.assign({}, props), cell.id))) : null;\n                    }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })), renderDetailPanel && !row.getIsGrouped() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableDetailPanel, { parentRowRef: rowRef, row: row, rowIndex: rowIndex, table: table, virtualRow: virtualRow }))] }));\n};\nconst Memo_MRT_TableBodyRow = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(MRT_TableBodyRow, (prev, next) => prev.row === next.row && prev.rowIndex === next.rowIndex);\n\nconst fuzzy$1 = (rowA, rowB, columnId) => {\n    let dir = 0;\n    if (rowA.columnFiltersMeta[columnId]) {\n        dir = (0,_tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_17__.compareItems)(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n    // Provide a fallback for when the item ranks are equal\n    return dir === 0\n        ? _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.sortingFns.alphanumeric(rowA, rowB, columnId)\n        : dir;\n};\nconst MRT_SortingFns = Object.assign(Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.sortingFns), { fuzzy: fuzzy$1 });\nconst rankGlobalFuzzy = (rowA, rowB) => Math.max(...Object.values(rowB.columnFiltersMeta).map((v) => v.rank)) -\n    Math.max(...Object.values(rowA.columnFiltersMeta).map((v) => v.rank));\n\nconst MRT_TableBody = (_a) => {\n    var _b, _c, _d, _e, _f, _g;\n    var { columnVirtualizer, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"table\", \"virtualColumns\", \"virtualPaddingLeft\", \"virtualPaddingRight\"]);\n    const { getBottomRows, getCenterRows, getIsSomeRowsPinned, getPrePaginationRowModel, getRowModel, getState, getTopRows, options: { createDisplayMode, enableGlobalFilterRankedResults, enablePagination, enableRowPinning, enableRowVirtualization, enableStickyFooter, enableStickyHeader, layoutMode, localization, manualExpanding, manualFiltering, manualGrouping, manualPagination, manualSorting, memoMode, muiTableBodyProps, renderEmptyRowsFallback, rowPinningDisplayMode, rowVirtualizerInstanceRef, rowVirtualizerOptions, }, refs: { tableContainerRef, tableFooterRef, tableHeadRef, tablePaperRef }, } = table;\n    const { columnFilters, creatingRow, density, draggingRow, expanded, globalFilter, isFullScreen, pagination, rowPinning, sorting, } = getState();\n    const tableBodyProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableBodyProps, { table })), rest);\n    const rowVirtualizerProps = parseFromValuesOrFunc(rowVirtualizerOptions, {\n        table,\n    });\n    const tableHeadHeight = ((enableStickyHeader || isFullScreen) &&\n        ((_b = tableHeadRef.current) === null || _b === void 0 ? void 0 : _b.clientHeight)) ||\n        0;\n    const tableFooterHeight = (enableStickyFooter && ((_c = tableFooterRef.current) === null || _c === void 0 ? void 0 : _c.clientHeight)) || 0;\n    const shouldRankRows = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => getCanRankRows(table) &&\n        !Object.values(sorting).some(Boolean) &&\n        globalFilter, [\n        enableGlobalFilterRankedResults,\n        expanded,\n        globalFilter,\n        manualExpanding,\n        manualFiltering,\n        manualGrouping,\n        manualSorting,\n        sorting,\n    ]);\n    const pinnedRowIds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => getRowModel()\n        .rows.filter((row) => row.getIsPinned())\n        .map((r) => r.id), [rowPinning, table.getRowModel().rows]);\n    const rows = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        let rows = [];\n        if (!shouldRankRows) {\n            rows =\n                !enableRowPinning || (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky'))\n                    ? getRowModel().rows\n                    : getCenterRows();\n        }\n        else {\n            rows = getPrePaginationRowModel().rows.sort((a, b) => rankGlobalFuzzy(a, b));\n            if (enablePagination && !manualPagination) {\n                const start = pagination.pageIndex * pagination.pageSize;\n                rows = rows.slice(start, start + pagination.pageSize);\n            }\n        }\n        if (enableRowPinning && (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky'))) {\n            rows = [\n                ...getTopRows().filter((row) => !pinnedRowIds.includes(row.id)),\n                ...rows,\n                ...getBottomRows().filter((row) => !pinnedRowIds.includes(row.id)),\n            ];\n        }\n        return rows;\n    }, [\n        shouldRankRows,\n        shouldRankRows ? getPrePaginationRowModel().rows : getRowModel().rows,\n        pagination.pageIndex,\n        pagination.pageSize,\n        rowPinning,\n    ]);\n    const rowVirtualizer = enableRowVirtualization\n        ? (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_18__.useVirtualizer)(Object.assign({ count: rows.length, estimateSize: () => density === 'compact' ? 37 : density === 'comfortable' ? 58 : 73, getScrollElement: () => tableContainerRef.current, measureElement: typeof window !== 'undefined' &&\n                navigator.userAgent.indexOf('Firefox') === -1\n                ? (element) => element === null || element === void 0 ? void 0 : element.getBoundingClientRect().height\n                : undefined, overscan: 4, rangeExtractor: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((range) => {\n                var _a;\n                return extraIndexRangeExtractor(range, (_a = draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.index) !== null && _a !== void 0 ? _a : 0);\n            }, [draggingRow]) }, rowVirtualizerProps))\n        : undefined;\n    if (rowVirtualizerInstanceRef && rowVirtualizer) {\n        rowVirtualizerInstanceRef.current = rowVirtualizer;\n    }\n    const virtualRows = rowVirtualizer\n        ? rowVirtualizer.getVirtualItems()\n        : undefined;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [!(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) &&\n                getIsSomeRowsPinned('top') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19___default()), Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, position: 'sticky', top: tableHeadHeight - 1, zIndex: 1 }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: getTopRows().map((row, rowIndex) => {\n                    const props = {\n                        columnVirtualizer,\n                        measureElement: rowVirtualizer === null || rowVirtualizer === void 0 ? void 0 : rowVirtualizer.measureElement,\n                        numRows: rows.length,\n                        row,\n                        rowIndex,\n                        table,\n                        virtualColumns,\n                        virtualPaddingLeft,\n                        virtualPaddingRight,\n                    };\n                    return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), row.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRow, Object.assign({}, props), row.id));\n                }) }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19___default()), Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, height: rowVirtualizer\n                        ? `${rowVirtualizer.getTotalSize()}px`\n                        : 'inherit', minHeight: !rows.length ? '100px' : undefined, position: 'relative' }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: [creatingRow && createDisplayMode === 'row' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRow, { row: creatingRow, rowIndex: -1, table: table })), (_d = tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.children) !== null && _d !== void 0 ? _d : (!rows.length ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", { style: {\n                            display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                        }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", { colSpan: table.getVisibleLeafColumns().length, style: {\n                                display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                            }, children: (_e = renderEmptyRowsFallback === null || renderEmptyRowsFallback === void 0 ? void 0 : renderEmptyRowsFallback({ table })) !== null && _e !== void 0 ? _e : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20___default()), { sx: {\n                                    color: 'text.secondary',\n                                    fontStyle: 'italic',\n                                    maxWidth: `min(100vw, ${(_g = (_f = tablePaperRef.current) === null || _f === void 0 ? void 0 : _f.clientWidth) !== null && _g !== void 0 ? _g : 360}px)`,\n                                    py: '2rem',\n                                    textAlign: 'center',\n                                    width: '100%',\n                                }, children: globalFilter || columnFilters.length\n                                    ? localization.noResultsFound\n                                    : localization.noRecordsToDisplay })) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (virtualRows !== null && virtualRows !== void 0 ? virtualRows : rows).map((rowOrVirtualRow, rowIndex) => {\n                            const row = rowVirtualizer\n                                ? rows[rowOrVirtualRow.index]\n                                : rowOrVirtualRow;\n                            const props = {\n                                columnVirtualizer,\n                                measureElement: rowVirtualizer === null || rowVirtualizer === void 0 ? void 0 : rowVirtualizer.measureElement,\n                                numRows: rows.length,\n                                pinnedRowIds,\n                                row,\n                                rowIndex: rowVirtualizer ? rowOrVirtualRow.index : rowIndex,\n                                table,\n                                virtualColumns,\n                                virtualPaddingLeft,\n                                virtualPaddingRight,\n                                virtualRow: rowVirtualizer\n                                    ? rowOrVirtualRow\n                                    : undefined,\n                            };\n                            return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), row.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRow, Object.assign({}, props), row.id));\n                        }) })))] })), !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) &&\n                getIsSomeRowsPinned('bottom') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_19___default()), Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ bottom: tableFooterHeight - 1, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, position: 'sticky', zIndex: 1 }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: getBottomRows().map((row, rowIndex) => {\n                    const props = {\n                        columnVirtualizer,\n                        measureElement: rowVirtualizer === null || rowVirtualizer === void 0 ? void 0 : rowVirtualizer.measureElement,\n                        numRows: rows.length,\n                        row,\n                        rowIndex,\n                        table,\n                        virtualColumns,\n                        virtualPaddingLeft,\n                        virtualPaddingRight,\n                    };\n                    return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), row.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRow, Object.assign({}, props), row.id));\n                }) })))] }));\n};\nconst Memo_MRT_TableBody = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(MRT_TableBody, (prev, next) => prev.table.options.data === next.table.options.data);\n\nconst MRT_TableFooterCell = (_a) => {\n    var _b, _c, _d;\n    var { footer, table } = _a, rest = __rest(_a, [\"footer\", \"table\"]);\n    const { getState, options: { layoutMode, muiTableFooterCellProps }, } = table;\n    const { density } = getState();\n    const { column } = footer;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const args = { column, table };\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterCellProps, args)), parseFromValuesOrFunc(columnDef.muiTableFooterCellProps, args)), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13___default()), Object.assign({ align: columnDefType === 'group' ? 'center' : 'left', colSpan: footer.colSpan, variant: \"head\" }, tableCellProps, { sx: (theme) => (Object.assign(Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, fontWeight: 'bold', justifyContent: columnDefType === 'group' ? 'center' : undefined, p: density === 'compact'\n                ? '0.5rem'\n                : density === 'comfortable'\n                    ? '1rem'\n                    : '1.5rem', verticalAlign: 'top', zIndex: column.getIsPinned() && columnDefType !== 'group' ? 2 : 1 }, getCommonMRTCellStyles({\n            column,\n            table,\n            tableCellProps,\n            theme,\n        })), parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme))), children: (_b = tableCellProps.children) !== null && _b !== void 0 ? _b : (footer.isPlaceholder\n            ? null\n            : (_d = (_c = parseFromValuesOrFunc(columnDef.Footer, {\n                column,\n                footer,\n                table,\n            })) !== null && _c !== void 0 ? _c : columnDef.footer) !== null && _d !== void 0 ? _d : null) })));\n};\n\nconst MRT_TableFooterRow = (_a) => {\n    var _b;\n    var { footerGroup, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight } = _a, rest = __rest(_a, [\"footerGroup\", \"table\", \"virtualColumns\", \"virtualPaddingLeft\", \"virtualPaddingRight\"]);\n    const { options: { layoutMode, muiTableFooterRowProps }, } = table;\n    // if no content in row, skip row\n    if (!((_b = footerGroup.headers) === null || _b === void 0 ? void 0 : _b.some((header) => (typeof header.column.columnDef.footer === 'string' &&\n        !!header.column.columnDef.footer) ||\n        header.column.columnDef.Footer)))\n        return null;\n    const tableRowProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterRowProps, {\n        footerGroup,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15___default()), Object.assign({}, tableRowProps, { sx: (theme) => (Object.assign({ backgroundColor: getMRTTheme(table, theme).baseBackgroundColor, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, width: '100%' }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme))), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : footerGroup.headers).map((footerOrVirtualFooter) => {\n                const footer = virtualColumns\n                    ? footerGroup.headers[footerOrVirtualFooter.index]\n                    : footerOrVirtualFooter;\n                return footer ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableFooterCell, { footer: footer, table: table }, footer.id)) : null;\n            }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })));\n};\n\nconst MRT_TableFooter = (_a) => {\n    var { table, virtualColumns, virtualPaddingLeft, virtualPaddingRight } = _a, rest = __rest(_a, [\"table\", \"virtualColumns\", \"virtualPaddingLeft\", \"virtualPaddingRight\"]);\n    const { getFooterGroups, getState, options: { enableStickyFooter, layoutMode, muiTableFooterProps }, refs: { tableFooterRef }, } = table;\n    const { isFullScreen } = getState();\n    const tableFooterProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterProps, {\n        table,\n    })), rest);\n    const stickFooter = (isFullScreen || enableStickyFooter) && enableStickyFooter !== false;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_21___default()), Object.assign({}, tableFooterProps, { ref: (ref) => {\n            tableFooterRef.current = ref;\n            if (tableFooterProps === null || tableFooterProps === void 0 ? void 0 : tableFooterProps.ref) {\n                // @ts-ignore\n                tableFooterProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign({ bottom: stickFooter ? 0 : undefined, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, opacity: stickFooter ? 0.97 : undefined, outline: stickFooter\n                ? theme.palette.mode === 'light'\n                    ? `1px solid ${theme.palette.grey[300]}`\n                    : `1px solid ${theme.palette.grey[700]}`\n                : undefined, position: stickFooter ? 'sticky' : undefined, zIndex: stickFooter ? 1 : undefined }, parseFromValuesOrFunc(tableFooterProps === null || tableFooterProps === void 0 ? void 0 : tableFooterProps.sx, theme))), children: getFooterGroups().map((footerGroup) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableFooterRow, { footerGroup: footerGroup, table: table, virtualColumns: virtualColumns, virtualPaddingLeft: virtualPaddingLeft, virtualPaddingRight: virtualPaddingRight }, footerGroup.id))) })));\n};\n\nconst mrtFilterOptions = (localization) => [\n    {\n        divider: false,\n        label: localization.filterFuzzy,\n        option: 'fuzzy',\n        symbol: '≈',\n    },\n    {\n        divider: false,\n        label: localization.filterContains,\n        option: 'contains',\n        symbol: '*',\n    },\n    {\n        divider: false,\n        label: localization.filterStartsWith,\n        option: 'startsWith',\n        symbol: 'a',\n    },\n    {\n        divider: true,\n        label: localization.filterEndsWith,\n        option: 'endsWith',\n        symbol: 'z',\n    },\n    {\n        divider: false,\n        label: localization.filterEquals,\n        option: 'equals',\n        symbol: '=',\n    },\n    {\n        divider: true,\n        label: localization.filterNotEquals,\n        option: 'notEquals',\n        symbol: '≠',\n    },\n    {\n        divider: false,\n        label: localization.filterBetween,\n        option: 'between',\n        symbol: '⇿',\n    },\n    {\n        divider: true,\n        label: localization.filterBetweenInclusive,\n        option: 'betweenInclusive',\n        symbol: '⬌',\n    },\n    {\n        divider: false,\n        label: localization.filterGreaterThan,\n        option: 'greaterThan',\n        symbol: '>',\n    },\n    {\n        divider: false,\n        label: localization.filterGreaterThanOrEqualTo,\n        option: 'greaterThanOrEqualTo',\n        symbol: '≥',\n    },\n    {\n        divider: false,\n        label: localization.filterLessThan,\n        option: 'lessThan',\n        symbol: '<',\n    },\n    {\n        divider: true,\n        label: localization.filterLessThanOrEqualTo,\n        option: 'lessThanOrEqualTo',\n        symbol: '≤',\n    },\n    {\n        divider: false,\n        label: localization.filterEmpty,\n        option: 'empty',\n        symbol: '∅',\n    },\n    {\n        divider: false,\n        label: localization.filterNotEmpty,\n        option: 'notEmpty',\n        symbol: '!∅',\n    },\n];\nconst rangeModes = ['between', 'betweenInclusive', 'inNumberRange'];\nconst emptyModes = ['empty', 'notEmpty'];\nconst arrModes = ['arrIncludesSome', 'arrIncludesAll', 'arrIncludes'];\nconst rangeVariants = ['range-slider', 'date-range', 'range'];\nconst MRT_FilterOptionMenu = (_a) => {\n    var _b, _c, _d, _e;\n    var { anchorEl, header, onSelect, setAnchorEl, setFilterValue, table } = _a, rest = __rest(_a, [\"anchorEl\", \"header\", \"onSelect\", \"setAnchorEl\", \"setFilterValue\", \"table\"]);\n    const { getState, options: { columnFilterModeOptions, globalFilterModeOptions, localization, renderColumnFilterModeMenuItems, renderGlobalFilterModeMenuItems, }, setColumnFilterFns, setGlobalFilterFn, } = table;\n    const { density, globalFilterFn } = getState();\n    const { column } = header !== null && header !== void 0 ? header : {};\n    const { columnDef } = column !== null && column !== void 0 ? column : {};\n    const currentFilterValue = column === null || column === void 0 ? void 0 : column.getFilterValue();\n    let allowedColumnFilterOptions = (_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _b !== void 0 ? _b : columnFilterModeOptions;\n    if (rangeVariants.includes(columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant)) {\n        allowedColumnFilterOptions = [\n            ...rangeModes,\n            ...(allowedColumnFilterOptions !== null && allowedColumnFilterOptions !== void 0 ? allowedColumnFilterOptions : []),\n        ].filter((option) => rangeModes.includes(option));\n    }\n    const internalFilterOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => mrtFilterOptions(localization).filter((filterOption) => columnDef\n        ? allowedColumnFilterOptions === undefined ||\n            (allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.includes(filterOption.option))\n        : (!globalFilterModeOptions ||\n            globalFilterModeOptions.includes(filterOption.option)) &&\n            ['contains', 'fuzzy', 'startsWith'].includes(filterOption.option)), []);\n    const handleSelectFilterMode = (option) => {\n        var _a, _b;\n        const prevFilterMode = (_a = columnDef === null || columnDef === void 0 ? void 0 : columnDef._filterFn) !== null && _a !== void 0 ? _a : '';\n        if (!header || !column) {\n            // global filter mode\n            setGlobalFilterFn(option);\n        }\n        else if (option !== prevFilterMode) {\n            // column filter mode\n            setColumnFilterFns((prev) => (Object.assign(Object.assign({}, prev), { [header.id]: option })));\n            // reset filter value and/or perform new filter render\n            if (emptyModes.includes(option)) {\n                // will now be empty/notEmpty filter mode\n                if (currentFilterValue !== ' ' &&\n                    !emptyModes.includes(prevFilterMode)) {\n                    column.setFilterValue(' ');\n                }\n                else if (currentFilterValue) {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else if ((columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant) === 'multi-select' ||\n                arrModes.includes(option)) {\n                // will now be array filter mode\n                if (currentFilterValue instanceof String ||\n                    (currentFilterValue === null || currentFilterValue === void 0 ? void 0 : currentFilterValue.length)) {\n                    column.setFilterValue([]);\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue([]);\n                }\n                else if (currentFilterValue) {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else if (((_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant) === null || _b === void 0 ? void 0 : _b.includes('range')) ||\n                rangeModes.includes(option)) {\n                // will now be range filter mode\n                if (!Array.isArray(currentFilterValue) ||\n                    (!(currentFilterValue === null || currentFilterValue === void 0 ? void 0 : currentFilterValue.every((v) => v === '')) &&\n                        !rangeModes.includes(prevFilterMode))) {\n                    column.setFilterValue(['', '']);\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue('');\n                }\n                else {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else {\n                // will now be single value filter mode\n                if (Array.isArray(currentFilterValue)) {\n                    column.setFilterValue('');\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue('');\n                }\n                else {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n        }\n        setAnchorEl(null);\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect();\n    };\n    const filterOption = !!header && columnDef ? columnDef._filterFn : globalFilterFn;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Menu__WEBPACK_IMPORTED_MODULE_22___default()), Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n        }, anchorEl: anchorEl, anchorOrigin: { horizontal: 'right', vertical: 'center' }, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: (_e = (header && column && columnDef\n            ? (_d = (_c = columnDef.renderColumnFilterModeMenuItems) === null || _c === void 0 ? void 0 : _c.call(columnDef, {\n                column: column,\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            })) !== null && _d !== void 0 ? _d : renderColumnFilterModeMenuItems === null || renderColumnFilterModeMenuItems === void 0 ? void 0 : renderColumnFilterModeMenuItems({\n                column: column,\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            })\n            : renderGlobalFilterModeMenuItems === null || renderGlobalFilterModeMenuItems === void 0 ? void 0 : renderGlobalFilterModeMenuItems({\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            }))) !== null && _e !== void 0 ? _e : internalFilterOptions.map(({ divider, label, option, symbol }, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { divider: divider, onClick: () => handleSelectFilterMode(option), selected: option === filterOption, sx: {\n                alignItems: 'center',\n                display: 'flex',\n                gap: '2ch',\n                my: 0,\n                py: '6px',\n            }, value: option, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { fontSize: '1.25rem', width: '2ch' }, children: symbol }), label] }, index))) })));\n};\n\nconst commonMenuItemStyles = {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    my: 0,\n    py: '6px',\n};\nconst commonListItemStyles = {\n    alignItems: 'center',\n    display: 'flex',\n};\nconst MRT_ColumnActionMenu = (_a) => {\n    var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    var { anchorEl, header, setAnchorEl, table } = _a, rest = __rest(_a, [\"anchorEl\", \"header\", \"setAnchorEl\", \"table\"]);\n    const { getState, options: { columnFilterDisplayMode, columnFilterModeOptions, enableColumnFilterModes, enableColumnFilters, enableColumnPinning, enableColumnResizing, enableGrouping, enableHiding, enableSorting, enableSortingRemoval, icons: { ArrowRightIcon, ClearAllIcon, DynamicFeedIcon, FilterListIcon, FilterListOffIcon, PushPinIcon, RestartAltIcon, SortIcon, ViewColumnIcon, VisibilityOffIcon, }, localization, renderColumnActionsMenuItems, }, refs: { filterInputRefs }, setColumnOrder, setColumnSizingInfo, setShowColumnFilters, toggleAllColumnsVisible, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { columnSizing, columnVisibility, density, showColumnFilters } = getState();\n    const columnFilterValue = column.getFilterValue();\n    const [filterMenuAnchorEl, setFilterMenuAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleClearSort = () => {\n        column.clearSorting();\n        setAnchorEl(null);\n    };\n    const handleSortAsc = () => {\n        column.toggleSorting(false);\n        setAnchorEl(null);\n    };\n    const handleSortDesc = () => {\n        column.toggleSorting(true);\n        setAnchorEl(null);\n    };\n    const handleResetColumnSize = () => {\n        setColumnSizingInfo((old) => (Object.assign(Object.assign({}, old), { isResizingColumn: false })));\n        column.resetSize();\n        setAnchorEl(null);\n    };\n    const handleHideColumn = () => {\n        column.toggleVisibility(false);\n        setAnchorEl(null);\n    };\n    const handlePinColumn = (pinDirection) => {\n        column.pin(pinDirection);\n        setAnchorEl(null);\n    };\n    const handleGroupByColumn = () => {\n        column.toggleGrouping();\n        setColumnOrder((old) => ['mrt-row-expand', ...old]);\n        setAnchorEl(null);\n    };\n    const handleClearFilter = () => {\n        column.setFilterValue('');\n        setAnchorEl(null);\n    };\n    const handleFilterByColumn = () => {\n        setShowColumnFilters(true);\n        queueMicrotask(() => { var _a; return (_a = filterInputRefs.current[`${column.id}-0`]) === null || _a === void 0 ? void 0 : _a.focus(); });\n        setAnchorEl(null);\n    };\n    const handleShowAllColumns = () => {\n        toggleAllColumnsVisible(true);\n        setAnchorEl(null);\n    };\n    const handleOpenFilterModeMenu = (event) => {\n        event.stopPropagation();\n        setFilterMenuAnchorEl(event.currentTarget);\n    };\n    const isSelectFilter = !!columnDef.filterSelectOptions;\n    const allowedColumnFilterOptions = (_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _b !== void 0 ? _b : columnFilterModeOptions;\n    const showFilterModeSubMenu = enableColumnFilterModes &&\n        columnDef.enableColumnFilterModes !== false &&\n        !isSelectFilter &&\n        (allowedColumnFilterOptions === undefined ||\n            !!(allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.length));\n    const internalColumnMenuItems = [\n        ...(enableSorting && column.getCanSort()\n            ? [\n                enableSortingRemoval !== false && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !column.getIsSorted(), onClick: handleClearSort, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ClearAllIcon, {}) }), localization.clearSort] }) }, 0)),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: column.getIsSorted() === 'asc', onClick: handleSortAsc, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SortIcon, { style: { transform: 'rotate(180deg) scaleX(-1)' } }) }), (_c = localization.sortByColumnAsc) === null || _c === void 0 ? void 0 : _c.replace('{column}', String(columnDef.header))] }) }, 1),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: column.getIsSorted() === 'desc', divider: enableColumnFilters || enableGrouping || enableHiding, onClick: handleSortDesc, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SortIcon, {}) }), (_d = localization.sortByColumnDesc) === null || _d === void 0 ? void 0 : _d.replace('{column}', String(columnDef.header))] }) }, 2),\n            ]\n            : []),\n        ...(enableColumnFilters && column.getCanFilter()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !columnFilterValue ||\n                        (Array.isArray(columnFilterValue) &&\n                            !columnFilterValue.filter((value) => value).length), onClick: handleClearFilter, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterListOffIcon, {}) }), localization.clearFilter] }) }, 3),\n                columnFilterDisplayMode === 'subheader' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: showColumnFilters && !enableColumnFilterModes, divider: enableGrouping || enableHiding, onClick: showColumnFilters\n                        ? handleOpenFilterModeMenu\n                        : handleFilterByColumn, sx: commonMenuItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterListIcon, {}) }), (_e = localization.filterByColumn) === null || _e === void 0 ? void 0 : _e.replace('{column}', String(columnDef.header))] }), showFilterModeSubMenu && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { onClick: handleOpenFilterModeMenu, onMouseEnter: handleOpenFilterModeMenu, size: \"small\", sx: { p: 0 }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ArrowRightIcon, {}) }))] }, 4)),\n                showFilterModeSubMenu && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterOptionMenu, { anchorEl: filterMenuAnchorEl, header: header, onSelect: handleFilterByColumn, setAnchorEl: setFilterMenuAnchorEl, table: table }, 5)),\n            ].filter(Boolean)\n            : []),\n        ...(enableGrouping && column.getCanGroup()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { divider: enableColumnPinning, onClick: handleGroupByColumn, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DynamicFeedIcon, {}) }), (_f = localization[column.getIsGrouped() ? 'ungroupByColumn' : 'groupByColumn']) === null || _f === void 0 ? void 0 : _f.replace('{column}', String(columnDef.header))] }) }, 6),\n            ]\n            : []),\n        ...(enableColumnPinning && column.getCanPin()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: column.getIsPinned() === 'left' || !column.getCanPin(), onClick: () => handlePinColumn('left'), sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, { style: { transform: 'rotate(90deg)' } }) }), localization.pinToLeft] }) }, 7),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: column.getIsPinned() === 'right' || !column.getCanPin(), onClick: () => handlePinColumn('right'), sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, { style: { transform: 'rotate(-90deg)' } }) }), localization.pinToRight] }) }, 8),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !column.getIsPinned(), divider: enableHiding, onClick: () => handlePinColumn(false), sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, {}) }), localization.unpin] }) }, 9),\n            ]\n            : []),\n        ...(enableColumnResizing && column.getCanResize()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !columnSizing[column.id], onClick: handleResetColumnSize, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RestartAltIcon, {}) }), localization.resetColumnSize] }) }, 10),\n            ]\n            : []),\n        ...(enableHiding\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !column.getCanHide(), onClick: handleHideColumn, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VisibilityOffIcon, {}) }), (_g = localization.hideColumn) === null || _g === void 0 ? void 0 : _g.replace('{column}', String(columnDef.header))] }) }, 11),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: !Object.values(columnVisibility).filter((visible) => !visible)\n                        .length, onClick: handleShowAllColumns, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewColumnIcon, {}) }), (_h = localization.showAllColumns) === null || _h === void 0 ? void 0 : _h.replace('{column}', String(columnDef.header))] }) }, 12),\n            ]\n            : []),\n    ].filter(Boolean);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Menu__WEBPACK_IMPORTED_MODULE_22___default()), Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n        }, anchorEl: anchorEl, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: (_l = (_k = (_j = columnDef.renderColumnActionsMenuItems) === null || _j === void 0 ? void 0 : _j.call(columnDef, {\n            closeMenu: () => setAnchorEl(null),\n            column,\n            internalColumnMenuItems,\n            table,\n        })) !== null && _k !== void 0 ? _k : renderColumnActionsMenuItems === null || renderColumnActionsMenuItems === void 0 ? void 0 : renderColumnActionsMenuItems({\n            closeMenu: () => setAnchorEl(null),\n            column,\n            internalColumnMenuItems,\n            table,\n        })) !== null && _l !== void 0 ? _l : internalColumnMenuItems })));\n};\n\nconst MRT_TableHeadCellColumnActionsButton = (_a) => {\n    var _b;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { icons: { MoreVertIcon }, localization, muiColumnActionsButtonProps, }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleClick = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n    const iconButtonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiColumnActionsButtonProps, {\n        column,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiColumnActionsButtonProps, {\n        column,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, placement: \"top\", title: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _b !== void 0 ? _b : localization.columnActions, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.columnActions, onClick: handleClick, size: \"small\" }, iconButtonProps, { sx: (theme) => (Object.assign({ '&:hover': {\n                            opacity: 1,\n                        }, height: '2rem', m: '-8px -4px', opacity: 0.3, transition: 'all 150ms', width: '2rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MoreVertIcon, { style: { transform: 'scale(0.9)' } }) })) }), anchorEl && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ColumnActionMenu, { anchorEl: anchorEl, header: header, setAnchorEl: setAnchorEl, table: table }))] }));\n};\n\nconst MRT_FilterCheckbox = (_a) => {\n    var _b, _c, _d;\n    var { column, table } = _a, rest = __rest(_a, [\"column\", \"table\"]);\n    const { getState, options: { localization, muiFilterCheckboxProps }, } = table;\n    const { density } = getState();\n    const { columnDef } = column;\n    const checkboxProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterCheckboxProps, {\n        column,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiFilterCheckboxProps, {\n        column,\n        table,\n    })), rest);\n    const filterLabel = (_b = localization.filterByColumn) === null || _b === void 0 ? void 0 : _b.replace('{column}', columnDef.header);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, title: (_c = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.title) !== null && _c !== void 0 ? _c : filterLabel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_24___default()), { control: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25___default()), Object.assign({ checked: column.getFilterValue() === 'true', color: column.getFilterValue() === undefined ? 'default' : 'primary', indeterminate: column.getFilterValue() === undefined, size: density === 'compact' ? 'small' : 'medium' }, checkboxProps, { onChange: (e, checked) => {\n                    var _a;\n                    column.setFilterValue(column.getFilterValue() === undefined\n                        ? 'true'\n                        : column.getFilterValue() === 'true'\n                            ? 'false'\n                            : undefined);\n                    (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onChange) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e, checked);\n                }, onClick: (e) => {\n                    var _a;\n                    e.stopPropagation();\n                    (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onClick) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e);\n                }, sx: (theme) => (Object.assign({ height: '2.5rem', width: '2.5rem' }, parseFromValuesOrFunc(checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.sx, theme))) })), disableTypography: true, label: (_d = checkboxProps.title) !== null && _d !== void 0 ? _d : filterLabel, sx: { color: 'text.secondary', fontWeight: 'normal', mt: '-4px' }, title: undefined }) }));\n};\n\nconst MRT_FilterTextField = (_a) => {\n    var _b, _c, _d, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    var { header, rangeFilterIndex, table } = _a, rest = __rest(_a, [\"header\", \"rangeFilterIndex\", \"table\"]);\n    const { options: { columnFilterModeOptions, enableColumnFilterModes, icons: { CloseIcon, FilterListIcon }, localization, manualFiltering, muiFilterAutocompleteProps, muiFilterDatePickerProps, muiFilterTextFieldProps, }, refs: { filterInputRefs }, setColumnFilterFns, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { filterVariant } = columnDef;\n    const textFieldProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterTextFieldProps, { column, table })), parseFromValuesOrFunc(columnDef.muiFilterTextFieldProps, {\n        column,\n        table,\n    })), rest);\n    const autocompleteProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterAutocompleteProps, { column, table })), parseFromValuesOrFunc(columnDef.muiFilterAutocompleteProps, {\n        column,\n        table,\n    }));\n    const datePickerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterDatePickerProps, { column, table })), parseFromValuesOrFunc(columnDef.muiFilterDatePickerProps, {\n        column,\n        table,\n    }));\n    const isDateFilter = filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('date');\n    const isAutocompleteFilter = filterVariant === 'autocomplete';\n    const isRangeFilter = (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.includes('range')) || rangeFilterIndex !== undefined;\n    const isSelectFilter = filterVariant === 'select';\n    const isMultiSelectFilter = filterVariant === 'multi-select';\n    const isTextboxFilter = ['autocomplete', 'text'].includes(filterVariant) ||\n        (!isSelectFilter && !isMultiSelectFilter);\n    const currentFilterOption = columnDef._filterFn;\n    const filterChipLabel = ['empty', 'notEmpty'].includes(currentFilterOption)\n        ? //@ts-ignore\n            localization[`filter${((_c = (_b = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt) === null || _b === void 0 ? void 0 : _b.call(currentFilterOption, 0)) === null || _c === void 0 ? void 0 : _c.toUpperCase()) +\n                (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]\n        : '';\n    const filterPlaceholder = !isRangeFilter\n        ? (_d = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.placeholder) !== null && _d !== void 0 ? _d : (_f = localization.filterByColumn) === null || _f === void 0 ? void 0 : _f.replace('{column}', String(columnDef.header))\n        : rangeFilterIndex === 0\n            ? localization.min\n            : rangeFilterIndex === 1\n                ? localization.max\n                : '';\n    const allowedColumnFilterOptions = (_g = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _g !== void 0 ? _g : columnFilterModeOptions;\n    const showChangeModeButton = enableColumnFilterModes &&\n        columnDef.enableColumnFilterModes !== false &&\n        !rangeFilterIndex &&\n        (allowedColumnFilterOptions === undefined ||\n            !!(allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.length));\n    const facetedUniqueValues = column.getFacetedUniqueValues();\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [filterValue, setFilterValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => {\n        var _a, _b;\n        return isMultiSelectFilter\n            ? column.getFilterValue() || []\n            : isRangeFilter\n                ? ((_a = column.getFilterValue()) === null || _a === void 0 ? void 0 : _a[rangeFilterIndex]) || ''\n                : (_b = column.getFilterValue()) !== null && _b !== void 0 ? _b : '';\n    });\n    const handleChangeDebounced = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_26__.debounce)((newValue) => {\n        if (isRangeFilter) {\n            column.setFilterValue((old) => {\n                const newFilterValues = old !== null && old !== void 0 ? old : ['', ''];\n                newFilterValues[rangeFilterIndex] = newValue !== null && newValue !== void 0 ? newValue : undefined;\n                return newFilterValues;\n            });\n        }\n        else {\n            column.setFilterValue(newValue !== null && newValue !== void 0 ? newValue : undefined);\n        }\n    }, isTextboxFilter ? (manualFiltering ? 400 : 200) : 1), []);\n    const handleChange = (newValue) => {\n        setFilterValue(newValue !== null && newValue !== void 0 ? newValue : '');\n        handleChangeDebounced(newValue);\n    };\n    const handleTextFieldChange = (event) => {\n        var _a;\n        const newValue = textFieldProps.type === 'date'\n            ? event.target.valueAsDate\n            : textFieldProps.type === 'number'\n                ? event.target.valueAsNumber\n                : event.target.value;\n        handleChange(newValue);\n        (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n    };\n    const handleClear = () => {\n        if (isMultiSelectFilter) {\n            setFilterValue([]);\n            column.setFilterValue([]);\n        }\n        else if (isRangeFilter) {\n            setFilterValue('');\n            column.setFilterValue((old) => {\n                const newFilterValues = (Array.isArray(old) && old) || ['', ''];\n                newFilterValues[rangeFilterIndex] = undefined;\n                return newFilterValues;\n            });\n        }\n        else {\n            setFilterValue('');\n            column.setFilterValue(undefined);\n        }\n    };\n    const handleClearEmptyFilterChip = () => {\n        setFilterValue('');\n        column.setFilterValue(undefined);\n        setColumnFilterFns((prev) => {\n            var _a;\n            return (Object.assign(Object.assign({}, prev), { [header.id]: (_a = allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions[0]) !== null && _a !== void 0 ? _a : 'fuzzy' }));\n        });\n    };\n    const handleFilterMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (isMounted.current) {\n            const filterValue = column.getFilterValue();\n            if (filterValue === undefined) {\n                handleClear();\n            }\n            else if (isRangeFilter && rangeFilterIndex !== undefined) {\n                setFilterValue(filterValue[rangeFilterIndex]);\n            }\n            else {\n                setFilterValue(filterValue);\n            }\n        }\n        isMounted.current = true;\n    }, [column.getFilterValue()]);\n    if (columnDef.Filter) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: (_h = columnDef.Filter) === null || _h === void 0 ? void 0 : _h.call(columnDef, { column, header, rangeFilterIndex, table }) }));\n    }\n    const dropdownOptions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a;\n        return (_a = columnDef.filterSelectOptions) !== null && _a !== void 0 ? _a : ((isSelectFilter || isMultiSelectFilter || isAutocompleteFilter) &&\n            facetedUniqueValues\n            ? Array.from(facetedUniqueValues.keys())\n                .filter((value) => value !== null && value !== undefined)\n                .sort((a, b) => a.localeCompare(b))\n            : undefined);\n    }, [\n        columnDef.filterSelectOptions,\n        facetedUniqueValues,\n        isMultiSelectFilter,\n        isSelectFilter,\n    ]);\n    const endAdornment = !isAutocompleteFilter && !isDateFilter && !filterChipLabel ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27___default()), { position: \"end\", sx: { mr: isSelectFilter || isMultiSelectFilter ? '20px' : undefined }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { placement: \"right\", title: (_j = localization.clearFilter) !== null && _j !== void 0 ? _j : '', children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.clearFilter, disabled: !((_k = filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString()) === null || _k === void 0 ? void 0 : _k.length), onClick: handleClear, size: \"small\", sx: {\n                        height: '2rem',\n                        transform: 'scale(0.9)',\n                        width: '2rem',\n                    }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloseIcon, {}) }) }) }) })) : null;\n    const startAdornment = showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27___default()), { position: \"start\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.changeFilterMode, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.changeFilterMode, onClick: handleFilterMenuOpen, size: \"small\", sx: { height: '1.75rem', width: '1.75rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterListIcon, {}) }) }) }), filterChipLabel && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Chip__WEBPACK_IMPORTED_MODULE_28___default()), { label: filterChipLabel, onDelete: handleClearEmptyFilterChip }))] })) : null;\n    const commonTextFieldProps = Object.assign(Object.assign({ FormHelperTextProps: {\n            sx: {\n                fontSize: '0.75rem',\n                lineHeight: '0.8rem',\n                whiteSpace: 'nowrap',\n            },\n        }, InputProps: endAdornment //hack because mui looks for presense of endAdornment key instead of undefined\n            ? { endAdornment, startAdornment }\n            : { startAdornment }, fullWidth: true, helperText: showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", { children: localization.filterMode.replace('{filterType}', \n            // @ts-ignore\n            localization[`filter${((_l = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _l === void 0 ? void 0 : _l.toUpperCase()) +\n                (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]) })) : null, inputProps: {\n            'aria-label': filterPlaceholder,\n            autoComplete: 'new-password',\n            disabled: !!filterChipLabel,\n            sx: {\n                textOverflow: 'ellipsis',\n                width: filterChipLabel ? 0 : undefined,\n            },\n            title: filterPlaceholder,\n        }, inputRef: (inputRef) => {\n            filterInputRefs.current[`${column.id}-${rangeFilterIndex !== null && rangeFilterIndex !== void 0 ? rangeFilterIndex : 0}`] =\n                inputRef;\n            if (textFieldProps.inputRef) {\n                textFieldProps.inputRef = inputRef;\n            }\n        }, margin: 'none', onClick: (e) => e.stopPropagation(), placeholder: filterChipLabel || isSelectFilter || isMultiSelectFilter\n            ? undefined\n            : filterPlaceholder, variant: 'standard' }, textFieldProps), { sx: (theme) => (Object.assign({ minWidth: isDateFilter\n                ? '160px'\n                : enableColumnFilterModes && rangeFilterIndex === 0\n                    ? '110px'\n                    : isRangeFilter\n                        ? '100px'\n                        : !filterChipLabel\n                            ? '120px'\n                            : 'auto', mx: '-2px', p: 0, width: 'calc(100% + 4px)' }, parseFromValuesOrFunc(textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.sx, theme))) });\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [isDateFilter ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_x_date_pickers_DatePicker__WEBPACK_IMPORTED_MODULE_29__.DatePicker, Object.assign({ onChange: (newDate) => {\n                    handleChange(newDate);\n                }, value: filterValue || null }, datePickerProps, { slotProps: {\n                    field: Object.assign({ clearable: true, onClear: () => handleClear() }, (_m = datePickerProps === null || datePickerProps === void 0 ? void 0 : datePickerProps.slotProps) === null || _m === void 0 ? void 0 : _m.field),\n                    textField: Object.assign(Object.assign({}, commonTextFieldProps), (_o = datePickerProps === null || datePickerProps === void 0 ? void 0 : datePickerProps.slotProps) === null || _o === void 0 ? void 0 : _o.textField),\n                } }))) : isAutocompleteFilter ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_30___default()), Object.assign({ freeSolo: true, getOptionLabel: (option) => getValueAndLabel(option).label, onChange: (_e, newValue) => handleChange(getValueAndLabel(newValue).value), options: (_p = dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.map((option) => getValueAndLabel(option))) !== null && _p !== void 0 ? _p : [] }, autocompleteProps, { renderInput: (builtinTextFieldProps) => {\n                    var _a;\n                    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TextField__WEBPACK_IMPORTED_MODULE_11___default()), Object.assign({}, builtinTextFieldProps, commonTextFieldProps, { InputProps: Object.assign(Object.assign({}, builtinTextFieldProps.InputProps), { startAdornment: (_a = commonTextFieldProps === null || commonTextFieldProps === void 0 ? void 0 : commonTextFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.startAdornment }), inputProps: Object.assign(Object.assign({}, builtinTextFieldProps.inputProps), commonTextFieldProps === null || commonTextFieldProps === void 0 ? void 0 : commonTextFieldProps.inputProps), onChange: handleTextFieldChange })));\n                }, value: filterValue }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TextField__WEBPACK_IMPORTED_MODULE_11___default()), Object.assign({ SelectProps: {\n                    displayEmpty: true,\n                    multiple: isMultiSelectFilter,\n                    renderValue: isMultiSelectFilter\n                        ? (selected) => !(selected === null || selected === void 0 ? void 0 : selected.length) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { opacity: 0.5 }, children: filterPlaceholder })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { display: 'flex', flexWrap: 'wrap', gap: '2px' }, children: selected === null || selected === void 0 ? void 0 : selected.map((value) => {\n                                const selectedValue = dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.find((option) => getValueAndLabel(option).value === value);\n                                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Chip__WEBPACK_IMPORTED_MODULE_28___default()), { label: getValueAndLabel(selectedValue).label }, value));\n                            }) }))\n                        : undefined,\n                }, onChange: handleTextFieldChange, select: isSelectFilter || isMultiSelectFilter }, commonTextFieldProps, { value: filterValue !== null && filterValue !== void 0 ? filterValue : '', children: (isSelectFilter || isMultiSelectFilter) && [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { disabled: true, divider: true, hidden: true, value: \"\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { opacity: 0.5 }, children: filterPlaceholder }) }, \"p\"),\n                    ...[\n                        (_q = textFieldProps.children) !== null && _q !== void 0 ? _q : dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.map((option, index) => {\n                            var _a;\n                            const { label, value } = getValueAndLabel(option);\n                            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { sx: {\n                                    alignItems: 'center',\n                                    display: 'flex',\n                                    gap: '0.5rem',\n                                    m: 0,\n                                }, value: value, children: [isMultiSelectFilter && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25___default()), { checked: ((_a = column.getFilterValue()) !== null && _a !== void 0 ? _a : []).includes(value), sx: { mr: '0.5rem' } })), label, ' ', !columnDef.filterSelectOptions &&\n                                        `(${facetedUniqueValues.get(value)})`] }, `${index}-${value}`));\n                        }),\n                    ],\n                ] }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterOptionMenu, { anchorEl: anchorEl, header: header, setAnchorEl: setAnchorEl, setFilterValue: setFilterValue, table: table })] }));\n};\n\nconst MRT_FilterRangeFields = (_a) => {\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ display: 'grid', gap: '1rem', gridTemplateColumns: '1fr 1fr' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterTextField, { header: header, rangeFilterIndex: 0, table: table }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterTextField, { header: header, rangeFilterIndex: 1, table: table })] })));\n};\n\nconst MRT_FilterRangeSlider = (_a) => {\n    var _b, _c;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { enableColumnFilterModes, localization, muiFilterSliderProps }, refs: { filterInputRefs }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const currentFilterOption = columnDef._filterFn;\n    const showChangeModeButton = enableColumnFilterModes && columnDef.enableColumnFilterModes !== false;\n    const sliderProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterSliderProps, { column, table })), parseFromValuesOrFunc(columnDef.muiFilterSliderProps, { column, table })), rest);\n    let [min, max] = sliderProps.min !== undefined && sliderProps.max !== undefined\n        ? [sliderProps.min, sliderProps.max]\n        : (_b = column.getFacetedMinMaxValues()) !== null && _b !== void 0 ? _b : [0, 1];\n    //fix potential TanStack Table bugs where min or max is an array\n    if (Array.isArray(min))\n        min = min[0];\n    if (Array.isArray(max))\n        max = max[0];\n    if (min === null)\n        min = 0;\n    if (max === null)\n        max = 1;\n    const [filterValues, setFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([min, max]);\n    const columnFilterValue = column.getFilterValue();\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (isMounted.current) {\n            if (columnFilterValue === undefined) {\n                setFilterValues([min, max]);\n            }\n            else if (Array.isArray(columnFilterValue)) {\n                setFilterValues(columnFilterValue);\n            }\n        }\n        isMounted.current = true;\n    }, [columnFilterValue, min, max]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_31__[\"default\"], { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Slider__WEBPACK_IMPORTED_MODULE_32___default()), Object.assign({ disableSwap: true, max: max, min: min, onChange: (_event, values) => {\n                    setFilterValues(values);\n                }, onChangeCommitted: (_event, value) => {\n                    if (Array.isArray(value)) {\n                        if (value[0] <= min && value[1] >= max) {\n                            //if the user has selected the entire range, remove the filter\n                            column.setFilterValue(undefined);\n                        }\n                        else {\n                            column.setFilterValue(value);\n                        }\n                    }\n                }, value: filterValues, valueLabelDisplay: \"auto\" }, sliderProps, { slotProps: {\n                    input: {\n                        ref: (node) => {\n                            var _a, _b;\n                            if (node) {\n                                filterInputRefs.current[`${column.id}-0`] = node;\n                                // @ts-ignore\n                                if ((_b = (_a = sliderProps === null || sliderProps === void 0 ? void 0 : sliderProps.slotProps) === null || _a === void 0 ? void 0 : _a.input) === null || _b === void 0 ? void 0 : _b.ref) {\n                                    //@ts-ignore\n                                    sliderProps.slotProps.input.ref = node;\n                                }\n                            }\n                        },\n                    },\n                }, sx: (theme) => (Object.assign({ m: 'auto', mt: !showChangeModeButton ? '10px' : '6px', px: '4px', width: 'calc(100% - 8px)' }, parseFromValuesOrFunc(sliderProps === null || sliderProps === void 0 ? void 0 : sliderProps.sx, theme))) })), showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_33___default()), { sx: {\n                    fontSize: '0.75rem',\n                    lineHeight: '0.8rem',\n                    m: '-3px -6px',\n                    whiteSpace: 'nowrap',\n                }, children: localization.filterMode.replace('{filterType}', \n                // @ts-ignore\n                localization[`filter${((_c = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _c === void 0 ? void 0 : _c.toUpperCase()) +\n                    (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]) })) : null] }));\n};\n\nconst MRT_TableHeadCellFilterContainer = (_a) => {\n    var _b;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { columnFilterDisplayMode }, } = table;\n    const { showColumnFilters } = getState();\n    const { column } = header;\n    const { columnDef } = column;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default()), Object.assign({ in: showColumnFilters || columnFilterDisplayMode === 'popover', mountOnEnter: true, unmountOnExit: true }, rest, { children: columnDef.filterVariant === 'checkbox' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterCheckbox, { column: column, table: table })) : columnDef.filterVariant === 'range-slider' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterRangeSlider, { header: header, table: table })) : ((_b = columnDef.filterVariant) === null || _b === void 0 ? void 0 : _b.includes('range')) ||\n            ['between', 'betweenInclusive', 'inNumberRange'].includes(columnDef._filterFn) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterRangeFields, { header: header, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterTextField, { header: header, table: table })) })));\n};\n\nconst MRT_TableHeadCellFilterLabel = (_a) => {\n    var _b, _c, _d;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { columnFilterDisplayMode, icons: { FilterAltIcon }, localization, }, refs: { filterInputRefs }, setShowColumnFilters, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const filterValue = column.getFilterValue();\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const isFilterActive = (Array.isArray(filterValue) && filterValue.some(Boolean)) ||\n        (!!filterValue && !Array.isArray(filterValue));\n    const isRangeFilter = ((_b = columnDef.filterVariant) === null || _b === void 0 ? void 0 : _b.includes('range')) ||\n        ['between', 'betweenInclusive', 'inNumberRange'].includes(columnDef._filterFn);\n    const currentFilterOption = columnDef._filterFn;\n    const filterTooltip = columnFilterDisplayMode === 'popover' && !isFilterActive\n        ? (_c = localization.filterByColumn) === null || _c === void 0 ? void 0 : _c.replace('{column}', String(columnDef.header))\n        : localization.filteringByColumn\n            .replace('{column}', String(columnDef.header))\n            .replace('{filterType}', currentFilterOption\n            ? // @ts-ignore\n                localization[`filter${((_d = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _d === void 0 ? void 0 : _d.toUpperCase()) +\n                    (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]\n            : '')\n            .replace('{filterValue}', `\"${Array.isArray(filterValue)\n            ? filterValue.join(`\" ${isRangeFilter ? localization.and : localization.or} \"`)\n            : filterValue}\"`)\n            .replace('\" \"', '');\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Grow__WEBPACK_IMPORTED_MODULE_34__[\"default\"], { in: columnFilterDisplayMode === 'popover' ||\n                    (!!filterValue && !isRangeFilter) ||\n                    (isRangeFilter && // @ts-ignore\n                        (!!(filterValue === null || filterValue === void 0 ? void 0 : filterValue[0]) || !!(filterValue === null || filterValue === void 0 ? void 0 : filterValue[1]))), unmountOnExit: true, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { component: \"span\", sx: { flex: '0 0' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { placement: \"top\", title: filterTooltip, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ disableRipple: true, onClick: (event) => {\n                                if (columnFilterDisplayMode === 'popover') {\n                                    setAnchorEl(event.currentTarget);\n                                }\n                                else {\n                                    setShowColumnFilters(true);\n                                }\n                                queueMicrotask(() => {\n                                    var _a, _b;\n                                    (_a = filterInputRefs.current[`${column.id}-0`]) === null || _a === void 0 ? void 0 : _a.focus();\n                                    (_b = filterInputRefs.current[`${column.id}-0`]) === null || _b === void 0 ? void 0 : _b.select();\n                                });\n                                event.stopPropagation();\n                            }, size: \"small\" }, rest, { sx: (theme) => (Object.assign({ height: '16px', ml: '4px', opacity: isFilterActive ? 1 : 0.3, p: '8px', transform: 'scale(0.75)', transition: 'all 150ms ease-in-out', width: '16px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterAltIcon, {}) })) }) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Popover__WEBPACK_IMPORTED_MODULE_35___default()), { anchorEl: anchorEl, anchorOrigin: {\n                    horizontal: 'center',\n                    vertical: 'top',\n                }, onClick: (event) => event.stopPropagation(), onClose: (event) => {\n                    //@ts-ignore\n                    event.stopPropagation();\n                    setAnchorEl(null);\n                }, onKeyDown: (event) => event.key === 'Enter' && setAnchorEl(null), open: !!anchorEl, transformOrigin: {\n                    horizontal: 'center',\n                    vertical: 'bottom',\n                }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { p: '1rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellFilterContainer, { header: header, table: table }) }) })] }));\n};\n\nconst MRT_TableHeadCellGrabHandle = (_a) => {\n    var { column, table, tableHeadCellRef } = _a, rest = __rest(_a, [\"column\", \"table\", \"tableHeadCellRef\"]);\n    const { getState, options: { enableColumnOrdering, muiColumnDragHandleProps }, setColumnOrder, setDraggingColumn, setHoveredColumn, } = table;\n    const { columnDef } = column;\n    const { columnOrder, draggingColumn, hoveredColumn } = getState();\n    const iconButtonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiColumnDragHandleProps, { column, table })), parseFromValuesOrFunc(columnDef.muiColumnDragHandleProps, {\n        column,\n        table,\n    })), rest);\n    const handleDragStart = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragStart) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        setDraggingColumn(column);\n        event.dataTransfer.setDragImage(tableHeadCellRef.current, 0, 0);\n    };\n    const handleDragEnd = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragEnd) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        if ((hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            column.toggleGrouping();\n        }\n        else if (enableColumnOrdering &&\n            hoveredColumn &&\n            (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) !== (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id)) {\n            setColumnOrder(reorderColumn(column, hoveredColumn, columnOrder));\n        }\n        setDraggingColumn(null);\n        setHoveredColumn(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GrabHandleButton, { iconButtonProps: iconButtonProps, onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table }));\n};\n\nconst MRT_TableHeadCellResizeHandle = (_a) => {\n    var _b;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { columnResizeMode }, setColumnSizingInfo, } = table;\n    const { density } = getState();\n    const { column } = header;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { className: \"Mui-TableHeadCell-ResizeHandle-Wrapper\", onDoubleClick: () => {\n            setColumnSizingInfo((old) => (Object.assign(Object.assign({}, old), { isResizingColumn: false })));\n            column.resetSize();\n        }, onMouseDown: header.getResizeHandler(), onTouchStart: header.getResizeHandler(), style: {\n            transform: column.getIsResizing() && columnResizeMode === 'onEnd'\n                ? `translateX(${(_b = getState().columnSizingInfo.deltaOffset) !== null && _b !== void 0 ? _b : 0}px)`\n                : undefined,\n        }, sx: (theme) => ({\n            '&:active > hr': {\n                backgroundColor: theme.palette.info.main,\n                opacity: header.subHeaders.length || columnResizeMode === 'onEnd' ? 1 : 0,\n            },\n            cursor: 'col-resize',\n            mr: density === 'compact'\n                ? '-12px'\n                : density === 'comfortable'\n                    ? '-20px'\n                    : '-28px',\n            position: 'absolute',\n            px: '4px',\n            right: column.columnDef.columnDefType === 'display' ? '4px' : '0',\n        }), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Divider__WEBPACK_IMPORTED_MODULE_36___default()), { className: \"Mui-TableHeadCell-ResizeHandle-Divider\", flexItem: true, orientation: \"vertical\", sx: (theme) => (Object.assign({ borderRadius: '2px', borderWidth: '2px', height: '24px', touchAction: 'none', transition: column.getIsResizing()\n                    ? undefined\n                    : 'all 150ms ease-in-out', userSelect: 'none', zIndex: 4 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))) }) }));\n};\n\nconst MRT_TableHeadCellSortLabel = (_a) => {\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { icons: { ArrowDownwardIcon, SyncAltIcon }, localization, }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { isLoading, showSkeletons, sorting } = getState();\n    const isSorted = !!column.getIsSorted();\n    const sortTooltip = isLoading || showSkeletons\n        ? ''\n        : column.getIsSorted()\n            ? column.getIsSorted() === 'desc'\n                ? localization.sortedByColumnDesc.replace('{column}', columnDef.header)\n                : localization.sortedByColumnAsc.replace('{column}', columnDef.header)\n            : column.getNextSortingOrder() === 'desc'\n                ? localization.sortByColumnDesc.replace('{column}', columnDef.header)\n                : localization.sortByColumnAsc.replace('{column}', columnDef.header);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { placement: \"top\", title: sortTooltip, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Badge__WEBPACK_IMPORTED_MODULE_37___default()), { badgeContent: sorting.length > 1 ? column.getSortIndex() + 1 : 0, overlap: \"circular\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_38___default()), Object.assign({ IconComponent: !isSorted\n                    ? (props) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SyncAltIcon, Object.assign({}, props, { style: {\n                            transform: 'rotate(-90deg) scaleX(0.9) translateX(-1px)',\n                        } })))\n                    : ArrowDownwardIcon, active: true, \"aria-label\": sortTooltip, direction: isSorted ? column.getIsSorted() : undefined, onClick: (e) => {\n                    var _a;\n                    e.stopPropagation();\n                    (_a = header.column.getToggleSortingHandler()) === null || _a === void 0 ? void 0 : _a(e);\n                } }, rest, { sx: (theme) => (Object.assign({ '.MuiTableSortLabel-icon': {\n                        color: `${theme.palette.mode === 'dark'\n                            ? theme.palette.text.primary\n                            : theme.palette.text.secondary} !important`,\n                    }, flex: '0 0', opacity: isSorted ? 1 : 0.3, transition: 'all 150ms ease-in-out', width: '3ch' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))) })) }) }));\n};\n\nconst MRT_TableHeadCell = (_a) => {\n    var _b, _c, _d, _f, _g, _h;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.useTheme)();\n    const { getState, options: { columnFilterDisplayMode, columnResizeMode, enableColumnActions, enableColumnDragging, enableColumnOrdering, enableGrouping, enableMultiSort, layoutMode, muiTableHeadCellProps, }, refs: { tableHeadCellRefs }, setHoveredColumn, } = table;\n    const { columnSizingInfo, density, draggingColumn, grouping, hoveredColumn, showColumnFilters, } = getState();\n    const { column } = header;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadCellProps, { column, table })), parseFromValuesOrFunc(columnDef.muiTableHeadCellProps, {\n        column,\n        table,\n    })), rest);\n    const { draggingBorderColor } = getMRTTheme(table, theme);\n    const showColumnActions = (enableColumnActions || columnDef.enableColumnActions) &&\n        columnDef.enableColumnActions !== false;\n    const showDragHandle = enableColumnDragging !== false &&\n        columnDef.enableColumnDragging !== false &&\n        (enableColumnDragging ||\n            (enableColumnOrdering && columnDef.enableColumnOrdering !== false) ||\n            (enableGrouping &&\n                columnDef.enableGrouping !== false &&\n                !grouping.includes(column.id)));\n    const headerPL = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        let pl = 0;\n        if (column.getCanSort())\n            pl += 1;\n        if (showColumnActions)\n            pl += 1.75;\n        if (showDragHandle)\n            pl += 1.5;\n        return pl;\n    }, [showColumnActions, showDragHandle]);\n    const draggingBorders = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        const showResizeBorder = columnSizingInfo.isResizingColumn === column.id &&\n            columnResizeMode === 'onChange' &&\n            !header.subHeaders.length;\n        const borderStyle = showResizeBorder\n            ? `2px solid ${draggingBorderColor} !important`\n            : (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id\n                ? `1px dashed ${theme.palette.grey[500]}`\n                : (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id\n                    ? `2px dashed ${draggingBorderColor}`\n                    : undefined;\n        if (showResizeBorder) {\n            return { borderRight: borderStyle };\n        }\n        const draggingBorders = borderStyle\n            ? {\n                borderLeft: borderStyle,\n                borderRight: borderStyle,\n                borderTop: borderStyle,\n            }\n            : undefined;\n        return draggingBorders;\n    }, [draggingColumn, hoveredColumn, columnSizingInfo.isResizingColumn]);\n    const handleDragEnter = (_e) => {\n        if (enableGrouping && (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            setHoveredColumn(null);\n        }\n        if (enableColumnOrdering && draggingColumn && columnDefType !== 'group') {\n            setHoveredColumn(columnDef.enableColumnOrdering !== false ? column : null);\n        }\n    };\n    const headerElement = (_b = parseFromValuesOrFunc(columnDef.Header, {\n        column,\n        header,\n        table,\n    })) !== null && _b !== void 0 ? _b : columnDef.header;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_13___default()), Object.assign({ align: columnDefType === 'group' ? 'center' : 'left', colSpan: header.colSpan, onDragEnter: handleDragEnter, ref: (node) => {\n            if (node) {\n                tableHeadCellRefs.current[column.id] = node;\n            }\n        } }, tableCellProps, { sx: (theme) => (Object.assign(Object.assign({ '& :hover': {\n                '.MuiButtonBase-root': {\n                    opacity: 1,\n                },\n            }, flexDirection: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'column' : undefined, fontWeight: 'bold', overflow: 'visible', p: density === 'compact'\n                ? '0.5rem'\n                : density === 'comfortable'\n                    ? columnDefType === 'display'\n                        ? '0.75rem'\n                        : '1rem'\n                    : columnDefType === 'display'\n                        ? '1rem 1.25rem'\n                        : '1.5rem', pb: columnDefType === 'display'\n                ? 0\n                : showColumnFilters || density === 'compact'\n                    ? '0.4rem'\n                    : '0.6rem', pt: columnDefType === 'group' || density === 'compact'\n                ? '0.25rem'\n                : density === 'comfortable'\n                    ? '.75rem'\n                    : '1.25rem', userSelect: enableMultiSort && column.getCanSort() ? 'none' : undefined, verticalAlign: 'top', zIndex: column.getIsResizing() || (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id\n                ? 3\n                : column.getIsPinned() && columnDefType !== 'group'\n                    ? 2\n                    : 1 }, getCommonMRTCellStyles({\n            column,\n            header,\n            table,\n            tableCellProps,\n            theme,\n        })), draggingBorders)), children: [header.isPlaceholder\n                ? null\n                : (_c = tableCellProps.children) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { className: \"Mui-TableHeadCell-Content\", sx: {\n                        alignItems: 'center',\n                        display: 'flex',\n                        flexDirection: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'right' ? 'row-reverse' : 'row',\n                        justifyContent: columnDefType === 'group' ||\n                            (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'center'\n                            ? 'center'\n                            : column.getCanResize()\n                                ? 'space-between'\n                                : 'flex-start',\n                        position: 'relative',\n                        width: '100%',\n                    }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { className: \"Mui-TableHeadCell-Content-Labels\", onClick: column.getToggleSortingHandler(), sx: {\n                                alignItems: 'center',\n                                cursor: column.getCanSort() && columnDefType !== 'group'\n                                    ? 'pointer'\n                                    : undefined,\n                                display: 'flex',\n                                flexDirection: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'right' ? 'row-reverse' : 'row',\n                                overflow: columnDefType === 'data' ? 'hidden' : undefined,\n                                pl: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'center'\n                                    ? `${headerPL}rem`\n                                    : undefined,\n                            }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { className: \"Mui-TableHeadCell-Content-Wrapper\", sx: {\n                                        '&:hover': {\n                                            textOverflow: 'clip',\n                                        },\n                                        minWidth: `${Math.min((_f = (_d = columnDef.header) === null || _d === void 0 ? void 0 : _d.length) !== null && _f !== void 0 ? _f : 0, 4)}ch`,\n                                        overflow: columnDefType === 'data' ? 'hidden' : undefined,\n                                        textOverflow: 'ellipsis',\n                                        whiteSpace: ((_h = (_g = columnDef.header) === null || _g === void 0 ? void 0 : _g.length) !== null && _h !== void 0 ? _h : 0) < 20\n                                            ? 'nowrap'\n                                            : 'normal',\n                                    }, title: columnDefType === 'data' ? columnDef.header : undefined, children: headerElement }), column.getCanFilter() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellFilterLabel, { header: header, table: table })), column.getCanSort() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellSortLabel, { header: header, table: table }))] }), columnDefType !== 'group' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { className: \"Mui-TableHeadCell-Content-Actions\", sx: { whiteSpace: 'nowrap' }, children: [showDragHandle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellGrabHandle, { column: column, table: table, tableHeadCellRef: {\n                                        current: tableHeadCellRefs.current[column.id],\n                                    } })), showColumnActions && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellColumnActionsButton, { header: header, table: table }))] })), column.getCanResize() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellResizeHandle, { header: header, table: table }))] })), columnFilterDisplayMode === 'subheader' && column.getCanFilter() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCellFilterContainer, { header: header, table: table }))] })));\n};\n\nconst MRT_TableHeadRow = (_a) => {\n    var { headerGroup, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight } = _a, rest = __rest(_a, [\"headerGroup\", \"table\", \"virtualColumns\", \"virtualPaddingLeft\", \"virtualPaddingRight\"]);\n    const { options: { layoutMode, muiTableHeadRowProps }, } = table;\n    const tableRowProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadRowProps, {\n        headerGroup,\n        table,\n    })), { rest });\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_15___default()), Object.assign({}, tableRowProps, { sx: (theme) => (Object.assign({ backgroundColor: getMRTTheme(table, theme).baseBackgroundColor, boxShadow: `4px 0 8px ${(0,_mui_material__WEBPACK_IMPORTED_MODULE_39__.alpha)(theme.palette.common.black, 0.1)}`, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, top: 0 }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme))), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : headerGroup.headers).map((headerOrVirtualHeader) => {\n                const header = virtualColumns\n                    ? headerGroup.headers[headerOrVirtualHeader.index]\n                    : headerOrVirtualHeader;\n                return header ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadCell, { header: header, table: table }, header.id)) : null;\n            }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })));\n};\n\nconst MRT_LinearProgressBar = (_a) => {\n    var { isTopToolbar, table } = _a, rest = __rest(_a, [\"isTopToolbar\", \"table\"]);\n    const { getState, options: { muiLinearProgressProps }, } = table;\n    const { isSaving, showProgressBars } = getState();\n    const linearProgressProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiLinearProgressProps, {\n        isTopToolbar,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default()), { in: showProgressBars !== false && (showProgressBars || isSaving), mountOnEnter: true, sx: {\n            bottom: isTopToolbar ? 0 : undefined,\n            position: 'absolute',\n            top: !isTopToolbar ? 0 : undefined,\n            width: '100%',\n        }, unmountOnExit: true, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_40___default()), Object.assign({ \"aria-busy\": \"true\", \"aria-label\": \"Loading\", sx: { position: 'relative' } }, linearProgressProps)) }));\n};\n\nconst defaultRowsPerPage = [5, 10, 15, 20, 25, 30, 50, 100];\nconst MRT_TablePagination = (_a) => {\n    var { position = 'bottom', table } = _a, rest = __rest(_a, [\"position\", \"table\"]);\n    const { getPrePaginationRowModel, getState, options: { enableToolbarInternalActions, icons: { ChevronLeftIcon, ChevronRightIcon, FirstPageIcon, LastPageIcon }, localization, muiPaginationProps, paginationDisplayMode, rowCount, }, setPageIndex, setPageSize, } = table;\n    const { pagination: { pageIndex = 0, pageSize = 10 }, showGlobalFilter, } = getState();\n    const paginationProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiPaginationProps, {\n        table,\n    })), rest);\n    const totalRowCount = rowCount !== null && rowCount !== void 0 ? rowCount : getPrePaginationRowModel().rows.length;\n    const numberOfPages = Math.ceil(totalRowCount / pageSize);\n    const showFirstLastPageButtons = numberOfPages > 2;\n    const firstRowIndex = pageIndex * pageSize;\n    const lastRowIndex = Math.min(pageIndex * pageSize + pageSize, totalRowCount);\n    const _b = paginationProps !== null && paginationProps !== void 0 ? paginationProps : {}, { rowsPerPageOptions = defaultRowsPerPage, showFirstButton = showFirstLastPageButtons, showLastButton = showFirstLastPageButtons, showRowsPerPage = true } = _b, _rest = __rest(_b, [\"rowsPerPageOptions\", \"showFirstButton\", \"showLastButton\", \"showRowsPerPage\"]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n            alignItems: 'center',\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '8px',\n            justifyContent: { md: 'space-between', sm: 'center' },\n            justifySelf: 'flex-end',\n            mt: position === 'top' &&\n                enableToolbarInternalActions &&\n                !showGlobalFilter\n                ? '3rem'\n                : undefined,\n            position: 'relative',\n            px: '8px',\n            py: '12px',\n            zIndex: 2,\n        }, children: [showRowsPerPage && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { alignItems: 'center', display: 'flex', gap: '8px' }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_41___default()), { htmlFor: \"mrt-rows-per-page\", sx: { mb: 0 }, children: localization.rowsPerPage }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Select__WEBPACK_IMPORTED_MODULE_42___default()), { disableUnderline: true, id: \"mrt-rows-per-page\", inputProps: { 'aria-label': localization.rowsPerPage }, label: localization.rowsPerPage, onChange: (event) => setPageSize(+event.target.value), sx: { mb: 0 }, value: pageSize, variant: \"standard\", children: rowsPerPageOptions.map((value) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { sx: { m: 0 }, value: value, children: value }, value))) })] })), paginationDisplayMode === 'pages' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Pagination__WEBPACK_IMPORTED_MODULE_43___default()), Object.assign({ count: numberOfPages, onChange: (_e, newPageIndex) => setPageIndex(newPageIndex - 1), page: pageIndex + 1, renderItem: (item) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_44___default()), Object.assign({ slots: {\n                        first: FirstPageIcon,\n                        last: LastPageIcon,\n                        next: ChevronRightIcon,\n                        previous: ChevronLeftIcon,\n                    } }, item))), showFirstButton: showFirstButton, showLastButton: showLastButton }, _rest))) : paginationDisplayMode === 'default' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20___default()), { align: \"center\", sx: { mb: 0, minWidth: '8ch', mx: '4px' }, variant: \"body2\", children: `${lastRowIndex === 0 ? 0 : (firstRowIndex + 1).toLocaleString()}-${lastRowIndex.toLocaleString()} ${localization.of} ${totalRowCount.toLocaleString()}` }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { gap: \"xs\", children: [showFirstButton && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.goToFirstPage, disabled: pageIndex <= 0, onClick: () => setPageIndex(0), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FirstPageIcon, {}) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.goToPreviousPage, disabled: pageIndex <= 0, onClick: () => setPageIndex(pageIndex - 1), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ChevronLeftIcon, {}) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.goToNextPage, disabled: lastRowIndex >= totalRowCount, onClick: () => setPageIndex(pageIndex + 1), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ChevronRightIcon, {}) }), showLastButton && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.goToLastPage, disabled: lastRowIndex >= totalRowCount, onClick: () => setPageIndex(numberOfPages - 1), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LastPageIcon, {}) }))] })] })) : null] }));\n};\n\nconst MRT_GlobalFilterTextField = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableGlobalFilterModes, icons: { CloseIcon, SearchIcon }, localization, manualFiltering, muiSearchTextFieldProps, }, refs: { searchInputRef }, setGlobalFilter, } = table;\n    const { globalFilter, showGlobalFilter } = getState();\n    const textFieldProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiSearchTextFieldProps, {\n        table,\n    })), rest);\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [searchValue, setSearchValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(globalFilter !== null && globalFilter !== void 0 ? globalFilter : '');\n    const handleChangeDebounced = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_26__.debounce)((event) => {\n        var _a;\n        setGlobalFilter((_a = event.target.value) !== null && _a !== void 0 ? _a : undefined);\n    }, manualFiltering ? 500 : 250), []);\n    const handleChange = (event) => {\n        setSearchValue(event.target.value);\n        handleChangeDebounced(event);\n    };\n    const handleGlobalFilterMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClear = () => {\n        setSearchValue('');\n        setGlobalFilter(undefined);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (isMounted.current) {\n            if (globalFilter === undefined) {\n                handleClear();\n            }\n            else {\n                setSearchValue(globalFilter);\n            }\n        }\n        isMounted.current = true;\n    }, [globalFilter]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default()), { in: showGlobalFilter, mountOnEnter: true, orientation: \"horizontal\", unmountOnExit: true, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TextField__WEBPACK_IMPORTED_MODULE_11___default()), Object.assign({ InputProps: Object.assign(Object.assign({ endAdornment: ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27___default()), { position: \"end\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: (_b = localization.clearSearch) !== null && _b !== void 0 ? _b : '', children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.clearSearch, disabled: !(searchValue === null || searchValue === void 0 ? void 0 : searchValue.length), onClick: handleClear, size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloseIcon, {}) }) }) }) })), startAdornment: enableGlobalFilterModes ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_27___default()), { position: \"start\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.changeSearchMode, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.changeSearchMode, onClick: handleGlobalFilterMenuOpen, size: \"small\", sx: { height: '1.75rem', width: '1.75rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SearchIcon, {}) }) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SearchIcon, { style: { marginRight: '4px' } })) }, textFieldProps.InputProps), { sx: (theme) => {\n                        var _a;\n                        return (Object.assign({ mb: 0 }, parseFromValuesOrFunc((_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.sx, theme)));\n                    } }), inputProps: Object.assign({ autoComplete: 'new-password' }, textFieldProps.inputProps), onChange: handleChange, placeholder: localization.search, size: \"small\", value: searchValue !== null && searchValue !== void 0 ? searchValue : '', variant: \"outlined\" }, textFieldProps, { inputRef: (inputRef) => {\n                    searchInputRef.current = inputRef;\n                    if (textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.inputRef) {\n                        textFieldProps.inputRef = inputRef;\n                    }\n                } })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_FilterOptionMenu, { anchorEl: anchorEl, onSelect: handleClear, setAnchorEl: setAnchorEl, table: table })] }));\n};\n\nconst MRT_SelectCheckbox = (_a) => {\n    var _b;\n    var { row, selectAll, table } = _a, rest = __rest(_a, [\"row\", \"selectAll\", \"table\"]);\n    const { getState, options: { enableMultiRowSelection, enableRowPinning, localization, muiSelectAllCheckboxProps, muiSelectCheckboxProps, rowPinningDisplayMode, selectAllMode, }, } = table;\n    const { density, isLoading } = getState();\n    const checkboxProps = Object.assign(Object.assign({}, (!row\n        ? parseFromValuesOrFunc(muiSelectAllCheckboxProps, { table })\n        : parseFromValuesOrFunc(muiSelectCheckboxProps, { row, table }))), rest);\n    const allRowsSelected = selectAll\n        ? selectAllMode === 'page'\n            ? table.getIsAllPageRowsSelected()\n            : table.getIsAllRowsSelected()\n        : undefined;\n    const commonProps = Object.assign(Object.assign({ checked: selectAll ? allRowsSelected : row === null || row === void 0 ? void 0 : row.getIsSelected(), disabled: isLoading || (row && !row.getCanSelect()), inputProps: {\n            'aria-label': selectAll\n                ? localization.toggleSelectAll\n                : localization.toggleSelectRow,\n        }, onChange: (event) => {\n            event.stopPropagation();\n            row\n                ? row.getToggleSelectedHandler()(event)\n                : selectAllMode === 'all'\n                    ? table.getToggleAllRowsSelectedHandler()(event)\n                    : table.getToggleAllPageRowsSelectedHandler()(event);\n            if (enableRowPinning && (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('select'))) {\n                if (row) {\n                    row.pin(!row.getIsPinned() && event.target.checked\n                        ? (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('bottom'))\n                            ? 'bottom'\n                            : 'top'\n                        : false);\n                }\n                else {\n                    table.setRowPinning({ bottom: [], top: [] });\n                }\n            }\n        }, size: (density === 'compact' ? 'small' : 'medium') }, checkboxProps), { onClick: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onClick) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e);\n        }, sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.5rem', m: density !== 'compact' ? '-0.4rem' : undefined, width: density === 'compact' ? '1.75rem' : '2.5rem', zIndex: 0 }, parseFromValuesOrFunc(checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.sx, theme))), title: undefined });\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, title: (_b = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.title) !== null && _b !== void 0 ? _b : (selectAll\n            ? localization.toggleSelectAll\n            : localization.toggleSelectRow), children: enableMultiRowSelection === false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Radio__WEBPACK_IMPORTED_MODULE_45___default()), Object.assign({}, commonProps))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_25___default()), Object.assign({ indeterminate: selectAll\n                ? table.getIsSomeRowsSelected() && !allRowsSelected\n                : row === null || row === void 0 ? void 0 : row.getIsSomeSelected() }, commonProps))) }));\n};\n\nconst MRT_ToolbarAlertBanner = (_a) => {\n    var _b, _c, _d;\n    var { stackAlertBanner, table } = _a, rest = __rest(_a, [\"stackAlertBanner\", \"table\"]);\n    const { getPrePaginationRowModel, getSelectedRowModel, getState, options: { enableRowSelection, enableSelectAll, localization, muiToolbarAlertBannerChipProps, muiToolbarAlertBannerProps, positionToolbarAlertBanner, renderToolbarAlertBannerContent, rowCount, }, refs: { tablePaperRef }, } = table;\n    const { density, grouping, showAlertBanner } = getState();\n    const alertProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiToolbarAlertBannerProps, {\n        table,\n    })), rest);\n    const chipProps = parseFromValuesOrFunc(muiToolbarAlertBannerChipProps, {\n        table,\n    });\n    const selectedAlert = getSelectedRowModel().rows.length > 0\n        ? (_c = (_b = localization.selectedCountOfRowCountRowsSelected) === null || _b === void 0 ? void 0 : _b.replace('{selectedCount}', getSelectedRowModel().rows.length.toString())) === null || _c === void 0 ? void 0 : _c.replace('{rowCount}', (rowCount !== null && rowCount !== void 0 ? rowCount : getPrePaginationRowModel().rows.length).toString())\n        : null;\n    const groupedAlert = grouping.length > 0 ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", { children: [localization.groupedBy, ' ', grouping.map((columnId, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [index > 0 ? localization.thenBy : '', (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Chip__WEBPACK_IMPORTED_MODULE_28___default()), Object.assign({ label: table.getColumn(columnId).columnDef.header, onDelete: () => table.getColumn(columnId).toggleGrouping() }, chipProps))] }, `${index}-${columnId}`)))] })) : null;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_16___default()), { in: showAlertBanner || !!selectedAlert || !!groupedAlert, timeout: stackAlertBanner ? 200 : 0, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Alert__WEBPACK_IMPORTED_MODULE_46___default()), Object.assign({ color: \"info\", icon: false }, alertProps, { sx: (theme) => {\n                var _a, _b;\n                return (Object.assign({ '& .MuiAlert-message': {\n                        maxWidth: `calc(${(_b = (_a = tablePaperRef.current) === null || _a === void 0 ? void 0 : _a.clientWidth) !== null && _b !== void 0 ? _b : 360}px - 1rem)`,\n                        width: '100%',\n                    }, borderRadius: 0, fontSize: '1rem', left: 0, mb: stackAlertBanner\n                        ? 0\n                        : positionToolbarAlertBanner === 'bottom'\n                            ? '-1rem'\n                            : undefined, p: 0, position: 'relative', right: 0, top: 0, width: '100%', zIndex: 2 }, parseFromValuesOrFunc(alertProps === null || alertProps === void 0 ? void 0 : alertProps.sx, theme)));\n            }, children: (_d = renderToolbarAlertBannerContent === null || renderToolbarAlertBannerContent === void 0 ? void 0 : renderToolbarAlertBannerContent({\n                groupedAlert,\n                selectedAlert,\n                table,\n            })) !== null && _d !== void 0 ? _d : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(alertProps === null || alertProps === void 0 ? void 0 : alertProps.title) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_47___default()), { children: alertProps.title }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_31__[\"default\"], { sx: {\n                            p: positionToolbarAlertBanner !== 'head-overlay'\n                                ? '0.5rem 1rem'\n                                : density === 'spacious'\n                                    ? '0.75rem 1.25rem'\n                                    : density === 'comfortable'\n                                        ? '0.5rem 0.75rem'\n                                        : '0.25rem 0.5rem',\n                        }, children: [alertProps === null || alertProps === void 0 ? void 0 : alertProps.children, (alertProps === null || alertProps === void 0 ? void 0 : alertProps.children) && (selectedAlert || groupedAlert) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"br\", {})), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { display: 'flex' }, children: [enableRowSelection &&\n                                        enableSelectAll &&\n                                        positionToolbarAlertBanner === 'head-overlay' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_SelectCheckbox, { selectAll: true, table: table })), ' ', selectedAlert] }), selectedAlert && groupedAlert && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"br\", {}), groupedAlert] })] })) })) }));\n};\n\nconst MRT_ToolbarDropZone = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableGrouping, localization }, setHoveredColumn, setShowToolbarDropZone, } = table;\n    const { draggingColumn, grouping, hoveredColumn, showToolbarDropZone } = getState();\n    const handleDragEnter = (_event) => {\n        setHoveredColumn({ id: 'drop-zone' });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        var _a;\n        if (((_a = table.options.state) === null || _a === void 0 ? void 0 : _a.showToolbarDropZone) !== undefined) {\n            setShowToolbarDropZone(!!enableGrouping &&\n                !!draggingColumn &&\n                draggingColumn.columnDef.enableGrouping !== false &&\n                !grouping.includes(draggingColumn.id));\n        }\n    }, [enableGrouping, draggingColumn, grouping]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Fade__WEBPACK_IMPORTED_MODULE_48__[\"default\"], { in: showToolbarDropZone, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({ className: \"Mui-ToolbarDropZone\", onDragEnter: handleDragEnter }, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', backdropFilter: 'blur(4px)', backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(theme.palette.info.main, (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone' ? 0.2 : 0.1), border: `dashed ${theme.palette.info.main} 2px`, boxSizing: 'border-box', display: 'flex', height: '100%', justifyContent: 'center', position: 'absolute', width: '100%', zIndex: 4 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20___default()), { fontStyle: \"italic\", children: localization.dropToGroupBy.replace('{column}', (_c = (_b = draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.columnDef) === null || _b === void 0 ? void 0 : _b.header) !== null && _c !== void 0 ? _c : '') }) })) }));\n};\n\nconst MRT_BottomToolbar = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enablePagination, muiBottomToolbarProps, positionPagination, positionToolbarAlertBanner, positionToolbarDropZone, renderBottomToolbarCustomActions, }, refs: { bottomToolbarRef }, } = table;\n    const { isFullScreen } = getState();\n    const isMobile = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_49__[\"default\"])('(max-width:720px)');\n    const toolbarProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiBottomToolbarProps, { table })), rest);\n    const stackAlertBanner = isMobile || !!renderBottomToolbarCustomActions;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, toolbarProps, { ref: (node) => {\n            if (node) {\n                bottomToolbarRef.current = node;\n                if (toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.ref) {\n                    // @ts-ignore\n                    toolbarProps.ref.current = node;\n                }\n            }\n        }, sx: (theme) => (Object.assign(Object.assign(Object.assign({}, getCommonToolbarStyles({ table, theme })), { bottom: isFullScreen ? '0' : undefined, boxShadow: `0 1px 2px -1px ${(0,_mui_material__WEBPACK_IMPORTED_MODULE_39__.alpha)(theme.palette.grey[700], 0.5)} inset`, left: 0, position: isFullScreen ? 'fixed' : 'relative', right: 0 }), parseFromValuesOrFunc(toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.sx, theme))), children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_LinearProgressBar, { isTopToolbar: false, table: table }), positionToolbarAlertBanner === 'bottom' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarAlertBanner, { stackAlertBanner: stackAlertBanner, table: table })), ['both', 'bottom'].includes(positionToolbarDropZone !== null && positionToolbarDropZone !== void 0 ? positionToolbarDropZone : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarDropZone, { table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                    alignItems: 'center',\n                    boxSizing: 'border-box',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    width: '100%',\n                }, children: [renderBottomToolbarCustomActions ? (renderBottomToolbarCustomActions({ table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {})), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            position: stackAlertBanner ? 'relative' : 'absolute',\n                            right: 0,\n                            top: 0,\n                        }, children: enablePagination &&\n                            ['both', 'bottom'].includes(positionPagination !== null && positionPagination !== void 0 ? positionPagination : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TablePagination, { position: \"bottom\", table: table })) })] })] })));\n};\n\nconst MRT_ColumnPinningButtons = (_a) => {\n    var { column, table } = _a, rest = __rest(_a, [\"column\", \"table\"]);\n    const { options: { icons: { PushPinIcon }, localization, }, } = table;\n    const handlePinColumn = (pinDirection) => {\n        column.pin(pinDirection);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ minWidth: '70px', textAlign: 'center' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: column.getIsPinned() ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.unpin, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { onClick: () => handlePinColumn(false), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, {}) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.pinToLeft, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { onClick: () => handlePinColumn('left'), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, { style: {\n                                transform: 'rotate(90deg)',\n                            } }) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.pinToRight, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { onClick: () => handlePinColumn('right'), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, { style: {\n                                transform: 'rotate(-90deg)',\n                            } }) }) })] })) })));\n};\n\nconst MRT_ShowHideColumnsMenuItems = (_a) => {\n    var _b;\n    var { allColumns, column, hoveredColumn, setHoveredColumn, table } = _a, rest = __rest(_a, [\"allColumns\", \"column\", \"hoveredColumn\", \"setHoveredColumn\", \"table\"]);\n    const { getState, options: { enableColumnOrdering, enableColumnPinning, enableHiding, localization, }, setColumnOrder, } = table;\n    const { columnOrder } = getState();\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const switchChecked = (columnDefType !== 'group' && column.getIsVisible()) ||\n        (columnDefType === 'group' &&\n            column.getLeafColumns().some((col) => col.getIsVisible()));\n    const handleToggleColumnHidden = (column) => {\n        var _a, _b;\n        if (columnDefType === 'group') {\n            (_b = (_a = column === null || column === void 0 ? void 0 : column.columns) === null || _a === void 0 ? void 0 : _a.forEach) === null || _b === void 0 ? void 0 : _b.call(_a, (childColumn) => {\n                childColumn.toggleVisibility(!switchChecked);\n            });\n        }\n        else {\n            column.toggleVisibility();\n        }\n    };\n    const menuItemRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleDragStart = (e) => {\n        setIsDragging(true);\n        e.dataTransfer.setDragImage(menuItemRef.current, 0, 0);\n    };\n    const handleDragEnd = (_e) => {\n        setIsDragging(false);\n        setHoveredColumn(null);\n        if (hoveredColumn) {\n            setColumnOrder(reorderColumn(column, hoveredColumn, columnOrder));\n        }\n    };\n    const handleDragEnter = (_e) => {\n        if (!isDragging && columnDef.enableColumnOrdering !== false) {\n            setHoveredColumn(column);\n        }\n    };\n    if (!columnDef.header)\n        return null;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), Object.assign({ disableRipple: true, onDragEnter: handleDragEnter, ref: menuItemRef }, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', justifyContent: 'flex-start', my: 0, opacity: isDragging ? 0.5 : 1, outline: isDragging\n                        ? `2px dashed ${theme.palette.grey[500]}`\n                        : (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id\n                            ? `2px dashed ${getMRTTheme(table, theme).draggingBorderColor}`\n                            : 'none', outlineOffset: '-2px', pl: `${(column.depth + 0.5) * 2}rem`, py: '6px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                        display: 'flex',\n                        flexWrap: 'nowrap',\n                        gap: '8px',\n                    }, children: [columnDefType !== 'group' &&\n                            enableColumnOrdering &&\n                            !allColumns.some((col) => col.columnDef.columnDefType === 'group') &&\n                            (columnDef.enableColumnOrdering !== false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GrabHandleButton, { onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { width: '28px' } }))), enableColumnPinning &&\n                            (column.getCanPin() ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ColumnPinningButtons, { column: column, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: { width: '70px' } }))), enableHiding ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_24___default()), { checked: switchChecked, componentsProps: {\n                                typography: {\n                                    sx: {\n                                        mb: 0,\n                                        opacity: columnDefType !== 'display' ? 1 : 0.5,\n                                    },\n                                },\n                            }, control: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, title: localization.toggleVisibility, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Switch__WEBPACK_IMPORTED_MODULE_50___default()), {}) }), disabled: !column.getCanHide(), label: columnDef.header, onChange: () => handleToggleColumnHidden(column) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Typography__WEBPACK_IMPORTED_MODULE_20___default()), { sx: { alignSelf: 'center' }, children: columnDef.header }))] }) })), (_b = column.columns) === null || _b === void 0 ? void 0 : _b.map((c, i) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ShowHideColumnsMenuItems, { allColumns: allColumns, column: c, hoveredColumn: hoveredColumn, setHoveredColumn: setHoveredColumn, table: table }, `${i}-${c.id}`)))] }));\n};\n\nconst MRT_ShowHideColumnsMenu = (_a) => {\n    var { anchorEl, setAnchorEl, table } = _a, rest = __rest(_a, [\"anchorEl\", \"setAnchorEl\", \"table\"]);\n    const { getAllColumns, getAllLeafColumns, getCenterLeafColumns, getIsAllColumnsVisible, getIsSomeColumnsPinned, getIsSomeColumnsVisible, getLeftLeafColumns, getRightLeafColumns, getState, options: { enableColumnOrdering, enableColumnPinning, enableHiding, localization, }, toggleAllColumnsVisible, } = table;\n    const { columnOrder, columnPinning, density } = getState();\n    const hideAllColumns = () => {\n        getAllLeafColumns()\n            .filter((col) => col.columnDef.enableHiding !== false)\n            .forEach((col) => col.toggleVisibility(false));\n    };\n    const allColumns = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        const columns = getAllColumns();\n        if (columnOrder.length > 0 &&\n            !columns.some((col) => col.columnDef.columnDefType === 'group')) {\n            return [\n                ...getLeftLeafColumns(),\n                ...Array.from(new Set(columnOrder)).map((colId) => getCenterLeafColumns().find((col) => (col === null || col === void 0 ? void 0 : col.id) === colId)),\n                ...getRightLeafColumns(),\n            ].filter(Boolean);\n        }\n        return columns;\n    }, [\n        columnOrder,\n        columnPinning,\n        getAllColumns(),\n        getCenterLeafColumns(),\n        getLeftLeafColumns(),\n        getRightLeafColumns(),\n    ]);\n    const [hoveredColumn, setHoveredColumn] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Menu__WEBPACK_IMPORTED_MODULE_22___default()), Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n        }, anchorEl: anchorEl, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    pt: 0,\n                }, children: [enableHiding && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { disabled: !getIsSomeColumnsVisible(), onClick: hideAllColumns, children: localization.hideAll })), enableColumnOrdering && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { onClick: () => table.setColumnOrder(getDefaultColumnOrderIds(table.options)), children: localization.resetOrder })), enableColumnPinning && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { disabled: !getIsSomeColumnsPinned(), onClick: () => table.resetColumnPinning(true), children: localization.unpinAll })), enableHiding && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { disabled: getIsAllColumnsVisible(), onClick: () => toggleAllColumnsVisible(true), children: localization.showAll }))] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Divider__WEBPACK_IMPORTED_MODULE_36___default()), {}), allColumns.map((column, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ShowHideColumnsMenuItems, { allColumns: allColumns, column: column, hoveredColumn: hoveredColumn, setHoveredColumn: setHoveredColumn, table: table }, `${index}-${column.id}`)))] })));\n};\n\nconst MRT_ShowHideColumnsButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { icons: { ViewColumnIcon }, localization, }, } = table;\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideColumns, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.showHideColumns, onClick: handleClick }, rest, { title: undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ViewColumnIcon, {}) })) }), anchorEl && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ShowHideColumnsMenu, { anchorEl: anchorEl, setAnchorEl: setAnchorEl, table: table }))] }));\n};\n\nconst MRT_ToggleDensePaddingButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { DensityLargeIcon, DensityMediumIcon, DensitySmallIcon }, localization, }, setDensity, } = table;\n    const { density } = getState();\n    const handleToggleDensePadding = () => {\n        const nextDensity = density === 'comfortable'\n            ? 'compact'\n            : density === 'compact'\n                ? 'spacious'\n                : 'comfortable';\n        setDensity(nextDensity);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.toggleDensity, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.toggleDensity, onClick: handleToggleDensePadding }, rest, { title: undefined, children: density === 'compact' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DensitySmallIcon, {})) : density === 'comfortable' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DensityMediumIcon, {})) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DensityLargeIcon, {})) })) }));\n};\n\nconst MRT_ToggleFiltersButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { FilterListIcon, FilterListOffIcon }, localization, }, setShowColumnFilters, } = table;\n    const { showColumnFilters } = getState();\n    const handleToggleShowFilters = () => {\n        setShowColumnFilters(!showColumnFilters);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideFilters, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.showHideFilters, onClick: handleToggleShowFilters }, rest, { title: undefined, children: showColumnFilters ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterListOffIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FilterListIcon, {}) })) }));\n};\n\nconst MRT_ToggleFullScreenButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { FullscreenExitIcon, FullscreenIcon }, localization, }, setIsFullScreen, } = table;\n    const { isFullScreen } = getState();\n    const [tooltipOpened, setTooltipOpened] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleToggleFullScreen = () => {\n        setTooltipOpened(false);\n        setIsFullScreen(!isFullScreen);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { open: tooltipOpened, title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.toggleFullScreen, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.toggleFullScreen, onClick: handleToggleFullScreen, onMouseEnter: () => setTooltipOpened(true), onMouseLeave: () => setTooltipOpened(false) }, rest, { title: undefined, children: isFullScreen ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FullscreenExitIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FullscreenIcon, {}) })) }));\n};\n\nconst MRT_ToggleGlobalFilterButton = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { SearchIcon, SearchOffIcon }, localization, }, refs: { searchInputRef }, setShowGlobalFilter, } = table;\n    const { globalFilter, showGlobalFilter } = getState();\n    const handleToggleSearch = () => {\n        setShowGlobalFilter(!showGlobalFilter);\n        queueMicrotask(() => { var _a; return (_a = searchInputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); });\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideSearch, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": (_c = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _c !== void 0 ? _c : localization.showHideSearch, disabled: !!globalFilter, onClick: handleToggleSearch }, rest, { title: undefined, children: showGlobalFilter ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SearchOffIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SearchIcon, {}) })) }));\n};\n\nconst MRT_ToolbarInternalButtons = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { columnFilterDisplayMode, enableColumnFilters, enableColumnOrdering, enableColumnPinning, enableDensityToggle, enableFilters, enableFullScreenToggle, enableGlobalFilter, enableHiding, initialState, renderToolbarInternalActions, }, } = table;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', display: 'flex', zIndex: 3 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (_b = renderToolbarInternalActions === null || renderToolbarInternalActions === void 0 ? void 0 : renderToolbarInternalActions({\n            table,\n        })) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [enableFilters &&\n                    enableGlobalFilter &&\n                    !(initialState === null || initialState === void 0 ? void 0 : initialState.showGlobalFilter) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToggleGlobalFilterButton, { table: table })), enableFilters &&\n                    enableColumnFilters &&\n                    columnFilterDisplayMode !== 'popover' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToggleFiltersButton, { table: table })), (enableHiding || enableColumnOrdering || enableColumnPinning) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ShowHideColumnsButton, { table: table })), enableDensityToggle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToggleDensePaddingButton, { table: table })), enableFullScreenToggle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToggleFullScreenButton, { table: table }))] })) })));\n};\n\nconst MRT_TopToolbar = ({ table, }) => {\n    var _a;\n    const { getState, options: { enableGlobalFilter, enablePagination, enableToolbarInternalActions, muiTopToolbarProps, positionGlobalFilter, positionPagination, positionToolbarAlertBanner, positionToolbarDropZone, renderTopToolbarCustomActions, }, refs: { topToolbarRef }, } = table;\n    const { isFullScreen, showGlobalFilter } = getState();\n    const isMobile = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_49__[\"default\"])('(max-width:720px)');\n    const toolbarProps = parseFromValuesOrFunc(muiTopToolbarProps, { table });\n    const stackAlertBanner = isMobile || !!renderTopToolbarCustomActions || showGlobalFilter;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, toolbarProps, { ref: (ref) => {\n            topToolbarRef.current = ref;\n            if (toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.ref) {\n                // @ts-ignore\n                toolbarProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign(Object.assign(Object.assign({}, getCommonToolbarStyles({ table, theme })), { position: isFullScreen ? 'sticky' : 'relative', top: isFullScreen ? '0' : undefined }), parseFromValuesOrFunc(toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.sx, theme))), children: [positionToolbarAlertBanner === 'top' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarAlertBanner, { stackAlertBanner: stackAlertBanner, table: table })), ['both', 'top'].includes(positionToolbarDropZone !== null && positionToolbarDropZone !== void 0 ? positionToolbarDropZone : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarDropZone, { table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                    alignItems: 'flex-start',\n                    boxSizing: 'border-box',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    position: stackAlertBanner ? 'relative' : 'absolute',\n                    right: 0,\n                    top: 0,\n                    width: '100%',\n                }, children: [enableGlobalFilter && positionGlobalFilter === 'left' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GlobalFilterTextField, { table: table })), (_a = renderTopToolbarCustomActions === null || renderTopToolbarCustomActions === void 0 ? void 0 : renderTopToolbarCustomActions({ table })) !== null && _a !== void 0 ? _a : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {}), enableToolbarInternalActions ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexWrap: 'wrap-reverse',\n                            gap: '0.5rem',\n                            justifyContent: 'flex-end',\n                        }, children: [enableGlobalFilter && positionGlobalFilter === 'right' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GlobalFilterTextField, { table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarInternalButtons, { table: table })] })) : (enableGlobalFilter &&\n                        positionGlobalFilter === 'right' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_GlobalFilterTextField, { table: table })))] }), enablePagination &&\n                ['both', 'top'].includes(positionPagination !== null && positionPagination !== void 0 ? positionPagination : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TablePagination, { position: \"top\", table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_LinearProgressBar, { isTopToolbar: true, table: table })] })));\n};\n\nconst MRT_TableHead = (_a) => {\n    var { table, virtualColumns, virtualPaddingLeft, virtualPaddingRight } = _a, rest = __rest(_a, [\"table\", \"virtualColumns\", \"virtualPaddingLeft\", \"virtualPaddingRight\"]);\n    const { getHeaderGroups, getSelectedRowModel, getState, options: { enableStickyHeader, layoutMode, muiTableHeadProps, positionToolbarAlertBanner, }, refs: { tableHeadRef }, } = table;\n    const { isFullScreen, showAlertBanner } = getState();\n    const tableHeadProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadProps, { table })), rest);\n    const stickyHeader = enableStickyHeader || isFullScreen;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_TableHead__WEBPACK_IMPORTED_MODULE_51___default()), Object.assign({}, tableHeadProps, { ref: (ref) => {\n            tableHeadRef.current = ref;\n            if (tableHeadProps === null || tableHeadProps === void 0 ? void 0 : tableHeadProps.ref) {\n                // @ts-ignore\n                tableHeadProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, opacity: 0.97, position: stickyHeader ? 'sticky' : 'relative', top: stickyHeader && (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 0 : undefined, zIndex: stickyHeader ? 2 : undefined }, parseFromValuesOrFunc(tableHeadProps === null || tableHeadProps === void 0 ? void 0 : tableHeadProps.sx, theme))), children: positionToolbarAlertBanner === 'head-overlay' &&\n            (showAlertBanner || getSelectedRowModel().rows.length > 0) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", { style: {\n                display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n            }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", { colSpan: table.getVisibleLeafColumns().length, style: {\n                    display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                    padding: 0,\n                }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToolbarAlertBanner, { table: table }) }) })) : (getHeaderGroups().map((headerGroup) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHeadRow, { headerGroup: headerGroup, table: table, virtualColumns: virtualColumns, virtualPaddingLeft: virtualPaddingLeft, virtualPaddingRight: virtualPaddingRight }, headerGroup.id)))) })));\n};\n\nconst MRT_Table = (_a) => {\n    var _b, _c, _d, _e;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getFlatHeaders, getState, options: { columnVirtualizerInstanceRef, columnVirtualizerOptions, columns, enableColumnPinning, enableColumnVirtualization, enableStickyHeader, enableTableFooter, enableTableHead, layoutMode, memoMode, muiTableProps, }, refs: { tableContainerRef }, } = table;\n    const { columnPinning, columnSizing, columnSizingInfo, columnVisibility, draggingColumn, isFullScreen, } = getState();\n    const tableProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableProps, { table })), rest);\n    const columnVirtualizerProps = parseFromValuesOrFunc(columnVirtualizerOptions, { table });\n    const columnSizeVars = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a;\n        const headers = getFlatHeaders();\n        const colSizes = {};\n        for (let i = 0; i < headers.length; i++) {\n            const header = headers[i];\n            let colSize = header.getSize();\n            if ((_a = header.subHeaders) === null || _a === void 0 ? void 0 : _a.length)\n                colSize = colSize * 1.05 + header.subHeaders.length * 2;\n            colSizes[`--header-${parseCSSVarId(header.id)}-size`] = colSize;\n            colSizes[`--col-${parseCSSVarId(header.column.id)}-size`] = colSize;\n        }\n        return colSizes;\n    }, [columns, columnSizing, columnSizingInfo, columnVisibility]);\n    //get first 16 column widths and average them\n    const averageColumnWidth = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a, _b, _c, _d;\n        if (!enableColumnVirtualization)\n            return 0;\n        const columnsWidths = (_d = (_c = (_b = (_a = table\n            .getRowModel()\n            .rows[0]) === null || _a === void 0 ? void 0 : _a.getCenterVisibleCells()) === null || _b === void 0 ? void 0 : _b.slice(0, 16)) === null || _c === void 0 ? void 0 : _c.map((cell) => cell.column.getSize() * 1.2)) !== null && _d !== void 0 ? _d : [];\n        return columnsWidths.reduce((a, b) => a + b, 0) / columnsWidths.length;\n    }, [table.getRowModel().rows, columnPinning, columnVisibility]);\n    const [leftPinnedIndexes, rightPinnedIndexes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => enableColumnVirtualization && enableColumnPinning\n        ? [\n            table.getLeftLeafColumns().map((c) => c.getPinnedIndex()),\n            table\n                .getRightLeafColumns()\n                .map((c) => table.getVisibleLeafColumns().length - c.getPinnedIndex() - 1),\n        ]\n        : [[], []], [columnPinning, enableColumnVirtualization, enableColumnPinning]);\n    const draggingColumnIndex = table\n        .getVisibleLeafColumns()\n        .findIndex((c) => c.id === (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id));\n    const columnVirtualizer = enableColumnVirtualization\n        ? (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_18__.useVirtualizer)(Object.assign({ count: table.getVisibleLeafColumns().length, estimateSize: () => averageColumnWidth, getScrollElement: () => tableContainerRef.current, horizontal: true, overscan: 3, rangeExtractor: (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((range) => {\n                const newIndexs = extraIndexRangeExtractor(range, draggingColumnIndex);\n                return [\n                    ...new Set([\n                        ...leftPinnedIndexes,\n                        ...newIndexs,\n                        ...rightPinnedIndexes,\n                    ]),\n                ];\n            }, [leftPinnedIndexes, rightPinnedIndexes, draggingColumnIndex]) }, columnVirtualizerProps))\n        : undefined;\n    if (columnVirtualizerInstanceRef && columnVirtualizer) {\n        columnVirtualizerInstanceRef.current = columnVirtualizer;\n    }\n    const virtualColumns = columnVirtualizer\n        ? columnVirtualizer.getVirtualItems()\n        : undefined;\n    let virtualPaddingLeft;\n    let virtualPaddingRight;\n    if (columnVirtualizer && (virtualColumns === null || virtualColumns === void 0 ? void 0 : virtualColumns.length)) {\n        virtualPaddingLeft = (_c = (_b = virtualColumns[leftPinnedIndexes.length]) === null || _b === void 0 ? void 0 : _b.start) !== null && _c !== void 0 ? _c : 0;\n        virtualPaddingRight =\n            columnVirtualizer.getTotalSize() -\n                ((_e = (_d = virtualColumns[virtualColumns.length - 1 - rightPinnedIndexes.length]) === null || _d === void 0 ? void 0 : _d.end) !== null && _e !== void 0 ? _e : 0);\n    }\n    const props = {\n        table,\n        virtualColumns,\n        virtualPaddingLeft,\n        virtualPaddingRight,\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Table__WEBPACK_IMPORTED_MODULE_52___default()), Object.assign({ stickyHeader: enableStickyHeader || isFullScreen }, tableProps, { style: Object.assign(Object.assign({}, columnSizeVars), tableProps === null || tableProps === void 0 ? void 0 : tableProps.style), sx: (theme) => (Object.assign({ borderCollapse: 'separate', display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined }, parseFromValuesOrFunc(tableProps === null || tableProps === void 0 ? void 0 : tableProps.sx, theme))), children: [enableTableHead && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableHead, Object.assign({}, props)), memoMode === 'table-body' || columnSizingInfo.isResizingColumn ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Memo_MRT_TableBody, Object.assign({ columnVirtualizer: columnVirtualizer }, props))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBody, Object.assign({ columnVirtualizer: columnVirtualizer }, props))), enableTableFooter && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableFooter, Object.assign({}, props))] })));\n};\n\nconst MRT_TableLoadingOverlay = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { localization, muiCircularProgressProps }, } = table;\n    const circularProgressProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiCircularProgressProps, { table })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: (theme) => ({\n            alignItems: 'center',\n            backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_6__.alpha)(getMRTTheme(table, theme).baseBackgroundColor, 0.5),\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            left: 0,\n            maxHeight: '100vh',\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n            zIndex: 2,\n        }), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53___default()), Object.assign({ \"aria-label\": localization.noRecordsToDisplay, id: \"mrt-progress\" }, circularProgressProps)) }));\n};\n\nconst MRT_EditActionButtons = (_a) => {\n    var { row, table, variant = 'icon' } = _a, rest = __rest(_a, [\"row\", \"table\", \"variant\"]);\n    const { getState, options: { icons: { CancelIcon, SaveIcon }, localization, onCreatingRowCancel, onCreatingRowSave, onEditingRowCancel, onEditingRowSave, }, refs: { editInputRefs }, setCreatingRow, setEditingRow, } = table;\n    const { creatingRow, editingRow, isSaving } = getState();\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const handleCancel = () => {\n        if (isCreating) {\n            onCreatingRowCancel === null || onCreatingRowCancel === void 0 ? void 0 : onCreatingRowCancel({ row, table });\n            setCreatingRow(null);\n        }\n        else if (isEditing) {\n            onEditingRowCancel === null || onEditingRowCancel === void 0 ? void 0 : onEditingRowCancel({ row, table });\n            setEditingRow(null);\n        }\n        row._valuesCache = {}; //reset values cache\n    };\n    const handleSubmitRow = () => {\n        var _a;\n        //look for auto-filled input values\n        (_a = Object.values(editInputRefs === null || editInputRefs === void 0 ? void 0 : editInputRefs.current)\n            .filter((inputRef) => { var _a, _b; return row.id === ((_b = (_a = inputRef === null || inputRef === void 0 ? void 0 : inputRef.name) === null || _a === void 0 ? void 0 : _a.split('_')) === null || _b === void 0 ? void 0 : _b[0]); })) === null || _a === void 0 ? void 0 : _a.forEach((input) => {\n            if (input.value !== undefined &&\n                Object.hasOwn(row === null || row === void 0 ? void 0 : row._valuesCache, input.name)) {\n                // @ts-ignore\n                row._valuesCache[input.name] = input.value;\n            }\n        });\n        if (isCreating)\n            onCreatingRowSave === null || onCreatingRowSave === void 0 ? void 0 : onCreatingRowSave({\n                exitCreatingMode: () => setCreatingRow(null),\n                row,\n                table,\n                values: row._valuesCache,\n            });\n        else if (isEditing) {\n            onEditingRowSave === null || onEditingRowSave === void 0 ? void 0 : onEditingRowSave({\n                exitEditingMode: () => setEditingRow(null),\n                row,\n                table,\n                values: row === null || row === void 0 ? void 0 : row._valuesCache,\n            });\n        }\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { onClick: (e) => e.stopPropagation(), sx: (theme) => (Object.assign({ display: 'flex', gap: '0.75rem' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: variant === 'icon' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.cancel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.cancel, onClick: handleCancel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelIcon, {}) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { title: localization.save, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), { \"aria-label\": localization.save, color: \"info\", onClick: handleSubmitRow, children: isSaving ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53___default()), { size: 18 }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SaveIcon, {}) }) })] })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { onClick: handleCancel, sx: { minWidth: '100px' }, children: localization.cancel }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Button__WEBPACK_IMPORTED_MODULE_10___default()), { onClick: handleSubmitRow, sx: { minWidth: '100px' }, variant: \"contained\", children: [isSaving && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_53___default()), { color: \"inherit\", size: 18 }), localization.save] })] })) }));\n};\n\nconst MRT_EditRowModal = (_a) => {\n    var _b;\n    var { open, table } = _a, rest = __rest(_a, [\"open\", \"table\"]);\n    const { getState, options: { localization, muiCreateRowModalProps, muiEditRowDialogProps, onCreatingRowCancel, onEditingRowCancel, renderCreateRowDialogContent, renderEditRowDialogContent, }, setCreatingRow, setEditingRow, } = table;\n    const { creatingRow, editingRow } = getState();\n    const row = (creatingRow !== null && creatingRow !== void 0 ? creatingRow : editingRow);\n    const dialogProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiEditRowDialogProps, { row, table })), (creatingRow &&\n        parseFromValuesOrFunc(muiCreateRowModalProps, { row, table }))), rest);\n    const internalEditComponents = row\n        .getAllCells()\n        .filter((cell) => cell.column.columnDef.columnDefType === 'data')\n        .map((cell) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_EditCellTextField, { cell: cell, table: table }, cell.id)));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_54___default()), Object.assign({ fullWidth: true, maxWidth: \"xs\", onClose: (event, reason) => {\n            var _a;\n            if (creatingRow) {\n                onCreatingRowCancel === null || onCreatingRowCancel === void 0 ? void 0 : onCreatingRowCancel({ row, table });\n                setCreatingRow(null);\n            }\n            else {\n                onEditingRowCancel === null || onEditingRowCancel === void 0 ? void 0 : onEditingRowCancel({ row, table });\n                setEditingRow(null);\n            }\n            row._valuesCache = {}; //reset values cache\n            (_a = dialogProps.onClose) === null || _a === void 0 ? void 0 : _a.call(dialogProps, event, reason);\n        }, open: open }, dialogProps, { children: (_b = ((creatingRow &&\n            (renderCreateRowDialogContent === null || renderCreateRowDialogContent === void 0 ? void 0 : renderCreateRowDialogContent({\n                internalEditComponents,\n                row,\n                table,\n            }))) ||\n            (renderEditRowDialogContent === null || renderEditRowDialogContent === void 0 ? void 0 : renderEditRowDialogContent({\n                internalEditComponents,\n                row,\n                table,\n            })))) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_55___default()), { sx: { textAlign: 'center' }, children: localization.edit }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_56___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"form\", { onSubmit: (e) => e.preventDefault(), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_31__[\"default\"], { sx: {\n                                gap: '32px',\n                                paddingTop: '16px',\n                                width: '100%',\n                            }, children: internalEditComponents }) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_57___default()), { sx: { p: '1.25rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_EditActionButtons, { row: row, table: table, variant: \"text\" }) })] })) })));\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_1__.useEffect;\nconst MRT_TableContainer = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, enableStickyHeader, muiTableContainerProps, }, refs: { bottomToolbarRef, tableContainerRef, topToolbarRef }, } = table;\n    const { creatingRow, editingRow, isFullScreen, isLoading, showLoadingOverlay, } = getState();\n    const loading = showLoadingOverlay !== false && (isLoading || showLoadingOverlay);\n    const [totalToolbarHeight, setTotalToolbarHeight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const tableContainerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableContainerProps, {\n        table,\n    })), rest);\n    useIsomorphicLayoutEffect(() => {\n        var _a, _b, _c, _d;\n        const topToolbarHeight = typeof document !== 'undefined'\n            ? (_b = (_a = topToolbarRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0\n            : 0;\n        const bottomToolbarHeight = typeof document !== 'undefined'\n            ? (_d = (_c = bottomToolbarRef === null || bottomToolbarRef === void 0 ? void 0 : bottomToolbarRef.current) === null || _c === void 0 ? void 0 : _c.offsetHeight) !== null && _d !== void 0 ? _d : 0\n            : 0;\n        setTotalToolbarHeight(topToolbarHeight + bottomToolbarHeight);\n    });\n    const createModalOpen = createDisplayMode === 'modal' && creatingRow;\n    const editModalOpen = editDisplayMode === 'modal' && editingRow;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_58___default()), Object.assign({ \"aria-busy\": loading, \"aria-describedby\": loading ? 'mrt-progress' : undefined }, tableContainerProps, { ref: (node) => {\n            if (node) {\n                tableContainerRef.current = node;\n                if (tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.ref) {\n                    //@ts-ignore\n                    tableContainerProps.ref.current = node;\n                }\n            }\n        }, style: Object.assign({ maxHeight: isFullScreen\n                ? `calc(100vh - ${totalToolbarHeight}px)`\n                : undefined }, tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.style), sx: (theme) => (Object.assign({ maxHeight: enableStickyHeader\n                ? `clamp(350px, calc(100vh - ${totalToolbarHeight}px), 9999px)`\n                : undefined, maxWidth: '100%', overflow: 'auto', position: 'relative' }, parseFromValuesOrFunc(tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.sx, theme))), children: [loading ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableLoadingOverlay, { table: table }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_Table, { table: table }), (createModalOpen || editModalOpen) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_EditRowModal, { open: true, table: table }))] })));\n};\n\nconst MRT_TablePaper = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableBottomToolbar, enableTopToolbar, muiTablePaperProps, renderBottomToolbar, renderTopToolbar, }, refs: { tablePaperRef }, } = table;\n    const { isFullScreen } = getState();\n    const paperProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTablePaperProps, { table })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Paper__WEBPACK_IMPORTED_MODULE_59___default()), Object.assign({ elevation: 2 }, paperProps, { ref: (ref) => {\n            tablePaperRef.current = ref;\n            if (paperProps === null || paperProps === void 0 ? void 0 : paperProps.ref) {\n                //@ts-ignore\n                paperProps.ref.current = ref;\n            }\n        }, style: Object.assign(Object.assign({}, (isFullScreen\n            ? {\n                bottom: 0,\n                height: '100vh',\n                left: 0,\n                margin: 0,\n                maxHeight: '100vh',\n                maxWidth: '100vw',\n                padding: 0,\n                position: 'fixed',\n                right: 0,\n                top: 0,\n                width: '100vw',\n                zIndex: 999,\n            }\n            : {})), paperProps === null || paperProps === void 0 ? void 0 : paperProps.style), sx: (theme) => (Object.assign({ backgroundColor: getMRTTheme(table, theme).baseBackgroundColor, backgroundImage: 'unset', overflow: 'hidden', transition: 'all 100ms ease-in-out' }, parseFromValuesOrFunc(paperProps === null || paperProps === void 0 ? void 0 : paperProps.sx, theme))), children: [enableTopToolbar &&\n                ((_b = parseFromValuesOrFunc(renderTopToolbar, { table })) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TopToolbar, { table: table }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableContainer, { table: table }), enableBottomToolbar &&\n                ((_c = parseFromValuesOrFunc(renderBottomToolbar, { table })) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_BottomToolbar, { table: table })))] })));\n};\n\nconst MRT_RowPinButton = (_a) => {\n    var { pinningPosition, row, table } = _a, rest = __rest(_a, [\"pinningPosition\", \"row\", \"table\"]);\n    const { options: { icons: { CloseIcon, PushPinIcon }, localization, rowPinningDisplayMode, }, } = table;\n    const isPinned = row.getIsPinned();\n    const [tooltipOpened, setTooltipOpened] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleTogglePin = (event) => {\n        setTooltipOpened(false);\n        event.stopPropagation();\n        row.pin(isPinned ? false : pinningPosition);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, open: tooltipOpened, title: isPinned ? localization.unpin : localization.pin, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.pin, onClick: handleTogglePin, onMouseEnter: () => setTooltipOpened(true), onMouseLeave: () => setTooltipOpened(false), size: \"small\" }, rest, { sx: (theme) => (Object.assign({ height: '24px', width: '24px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: isPinned ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CloseIcon, {})) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PushPinIcon, { fontSize: \"small\", style: {\n                    transform: `rotate(${rowPinningDisplayMode === 'sticky'\n                        ? 135\n                        : pinningPosition === 'top'\n                            ? 180\n                            : 0}deg)`,\n                } })) })) }));\n};\n\nconst MRT_TableBodyRowPinButton = (_a) => {\n    var { row, table } = _a, rest = __rest(_a, [\"row\", \"table\"]);\n    const { getState, options: { enableRowPinning, rowPinningDisplayMode }, } = table;\n    const { density } = getState();\n    const canPin = parseFromValuesOrFunc(enableRowPinning, row);\n    if (!canPin)\n        return null;\n    const rowPinButtonProps = Object.assign({ row,\n        table }, rest);\n    if (rowPinningDisplayMode === 'top-and-bottom' && !row.getIsPinned()) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: {\n                display: 'flex',\n                flexDirection: density === 'compact' ? 'row' : 'column',\n            }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: \"top\" }, rowPinButtonProps)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: \"bottom\" }, rowPinButtonProps))] }));\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: rowPinningDisplayMode === 'bottom' ? 'bottom' : 'top' }, rowPinButtonProps)));\n};\n\nconst MRT_ExpandAllButton = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getCanSomeRowsExpand, getIsAllRowsExpanded, getIsSomeRowsExpanded, getState, options: { icons: { KeyboardDoubleArrowDownIcon }, localization, muiExpandAllButtonProps, renderDetailPanel, }, toggleAllRowsExpanded, } = table;\n    const { density, isLoading } = getState();\n    const iconButtonProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiExpandAllButtonProps, {\n        table,\n    })), rest);\n    const isAllRowsExpanded = getIsAllRowsExpanded();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, title: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _b !== void 0 ? _b : (isAllRowsExpanded ? localization.collapseAll : localization.expandAll), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.expandAll, disabled: isLoading || (!renderDetailPanel && !getCanSomeRowsExpand()), onClick: () => toggleAllRowsExpanded(!isAllRowsExpanded) }, iconButtonProps, { sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.25rem', mt: density !== 'compact' ? '-0.25rem' : undefined, width: density === 'compact' ? '1.75rem' : '2.25rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (_c = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.children) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(KeyboardDoubleArrowDownIcon, { style: {\n                        transform: `rotate(${isAllRowsExpanded ? -180 : getIsSomeRowsExpanded() ? -90 : 0}deg)`,\n                        transition: 'transform 150ms',\n                    } })) })) }) }));\n};\n\nconst MRT_ExpandButton = ({ row, table, }) => {\n    var _a, _b;\n    const { getState, options: { icons: { ExpandMoreIcon }, localization, muiExpandButtonProps, renderDetailPanel, }, } = table;\n    const { density } = getState();\n    const iconButtonProps = parseFromValuesOrFunc(muiExpandButtonProps, {\n        row,\n        table,\n    });\n    const canExpand = row.getCanExpand();\n    const isExpanded = row.getIsExpanded();\n    const handleToggleExpand = (event) => {\n        var _a;\n        event.stopPropagation();\n        row.toggleExpanded();\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onClick) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { disableHoverListener: !canExpand && !renderDetailPanel, enterDelay: 1000, enterNextDelay: 1000, title: (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _a !== void 0 ? _a : (isExpanded ? localization.collapse : localization.expand), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.expand, disabled: !canExpand && !renderDetailPanel }, iconButtonProps, { onClick: handleToggleExpand, sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.25rem', opacity: !canExpand && !renderDetailPanel ? 0.3 : 1, width: density === 'compact' ? '1.75rem' : '2.25rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.children) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ExpandMoreIcon, { style: {\n                        transform: `rotate(${!canExpand && !renderDetailPanel ? -90 : isExpanded ? -180 : 0}deg)`,\n                        transition: 'transform 150ms',\n                    } })) })) }) }));\n};\n\nconst MRT_RowActionMenu = (_a) => {\n    var { anchorEl, handleEdit, row, setAnchorEl, table } = _a, rest = __rest(_a, [\"anchorEl\", \"handleEdit\", \"row\", \"setAnchorEl\", \"table\"]);\n    const { getState, options: { enableEditing, icons: { EditIcon }, localization, renderRowActionMenuItems, }, } = table;\n    const { density } = getState();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)((_mui_material_Menu__WEBPACK_IMPORTED_MODULE_22___default()), Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n        }, anchorEl: anchorEl, onClick: (event) => event.stopPropagation(), onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: [parseFromValuesOrFunc(enableEditing, row) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12___default()), { onClick: handleEdit, sx: commonMenuItemStyles, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { sx: commonListItemStyles, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_23___default()), { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EditIcon, {}) }), localization.edit] }) })), renderRowActionMenuItems === null || renderRowActionMenuItems === void 0 ? void 0 : renderRowActionMenuItems({\n                closeMenu: () => setAnchorEl(null),\n                row,\n                table,\n            })] })));\n};\n\nconst commonIconButtonStyles = {\n    '&:hover': {\n        opacity: 1,\n    },\n    height: '2rem',\n    ml: '10px',\n    opacity: 0.5,\n    transition: 'opacity 150ms',\n    width: '2rem',\n};\nconst MRT_ToggleRowActionMenuButton = (_a) => {\n    var { cell, row, table } = _a, rest = __rest(_a, [\"cell\", \"row\", \"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, enableEditing, icons: { EditIcon, MoreHorizIcon }, localization, renderRowActionMenuItems, renderRowActions, }, setEditingRow, } = table;\n    const { creatingRow, editingRow } = getState();\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const showEditActionButtons = (isCreating && createDisplayMode === 'row') ||\n        (isEditing && editDisplayMode === 'row');\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleOpenRowActionMenu = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n    const handleStartEditMode = (event) => {\n        event.stopPropagation();\n        setEditingRow(Object.assign({}, row));\n        setAnchorEl(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: renderRowActions && !showEditActionButtons ? (renderRowActions({ cell, row, table })) : showEditActionButtons ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_EditActionButtons, { row: row, table: table })) : !renderRowActionMenuItems &&\n            parseFromValuesOrFunc(enableEditing, row) &&\n            ['modal', 'row'].includes(editDisplayMode) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { placement: \"right\", title: localization.edit, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.edit, onClick: handleStartEditMode, sx: commonIconButtonStyles }, rest, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EditIcon, {}) })) })) : renderRowActionMenuItems ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_8___default()), { enterDelay: 1000, enterNextDelay: 1000, title: localization.rowActions, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_9___default()), Object.assign({ \"aria-label\": localization.rowActions, onClick: handleOpenRowActionMenu, size: \"small\", sx: commonIconButtonStyles }, rest, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MoreHorizIcon, {}) })) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_RowActionMenu, { anchorEl: anchorEl, handleEdit: handleStartEditMode, row: row, setAnchorEl: setAnchorEl, table: table })] })) : null }));\n};\n\nconst MRT_AggregationFns = Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.aggregationFns);\n\nconst fuzzy = (row, columnId, filterValue, addMeta) => {\n    const itemRank = (0,_tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_17__.rankItem)(row.getValue(columnId), filterValue, {\n        threshold: _tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_17__.rankings.MATCHES,\n    });\n    addMeta(itemRank);\n    return itemRank.passed;\n};\nfuzzy.autoRemove = (val) => !val;\nconst contains = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .includes(filterValue.toString().toLowerCase().trim());\ncontains.autoRemove = (val) => !val;\nconst startsWith = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .startsWith(filterValue.toString().toLowerCase().trim());\nstartsWith.autoRemove = (val) => !val;\nconst endsWith = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .endsWith(filterValue.toString().toLowerCase().trim());\nendsWith.autoRemove = (val) => !val;\nconst equals = (row, id, filterValue) => row.getValue(id).toString().toLowerCase().trim() ===\n    (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\nequals.autoRemove = (val) => !val;\nconst notEquals = (row, id, filterValue) => row.getValue(id).toString().toLowerCase().trim() !==\n    filterValue.toString().toLowerCase().trim();\nnotEquals.autoRemove = (val) => !val;\nconst greaterThan = (row, id, filterValue) => !isNaN(+filterValue) && !isNaN(+row.getValue(id))\n    ? +row.getValue(id) > +filterValue\n    : row.getValue(id).toString().toLowerCase().trim() >\n        (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\ngreaterThan.autoRemove = (val) => !val;\nconst greaterThanOrEqualTo = (row, id, filterValue) => equals(row, id, filterValue) || greaterThan(row, id, filterValue);\ngreaterThanOrEqualTo.autoRemove = (val) => !val;\nconst lessThan = (row, id, filterValue) => !isNaN(+filterValue) && !isNaN(+row.getValue(id))\n    ? +row.getValue(id) < +filterValue\n    : row.getValue(id).toString().toLowerCase().trim() <\n        (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\nlessThan.autoRemove = (val) => !val;\nconst lessThanOrEqualTo = (row, id, filterValue) => equals(row, id, filterValue) || lessThan(row, id, filterValue);\nlessThanOrEqualTo.autoRemove = (val) => !val;\nconst between = (row, id, filterValues) => (['', undefined].includes(filterValues[0]) ||\n    greaterThan(row, id, filterValues[0])) &&\n    ((!isNaN(+filterValues[0]) &&\n        !isNaN(+filterValues[1]) &&\n        +filterValues[0] > +filterValues[1]) ||\n        ['', undefined].includes(filterValues[1]) ||\n        lessThan(row, id, filterValues[1]));\nbetween.autoRemove = (val) => !val;\nconst betweenInclusive = (row, id, filterValues) => (['', undefined].includes(filterValues[0]) ||\n    greaterThanOrEqualTo(row, id, filterValues[0])) &&\n    ((!isNaN(+filterValues[0]) &&\n        !isNaN(+filterValues[1]) &&\n        +filterValues[0] > +filterValues[1]) ||\n        ['', undefined].includes(filterValues[1]) ||\n        lessThanOrEqualTo(row, id, filterValues[1]));\nbetweenInclusive.autoRemove = (val) => !val;\nconst empty = (row, id, _filterValue) => !row.getValue(id).toString().trim();\nempty.autoRemove = (val) => !val;\nconst notEmpty = (row, id, _filterValue) => !!row.getValue(id).toString().trim();\nnotEmpty.autoRemove = (val) => !val;\nconst MRT_FilterFns = Object.assign(Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.filterFns), { between,\n    betweenInclusive,\n    contains,\n    empty,\n    endsWith,\n    equals,\n    fuzzy,\n    greaterThan,\n    greaterThanOrEqualTo,\n    lessThan,\n    lessThanOrEqualTo,\n    notEmpty,\n    notEquals,\n    startsWith });\n\nconst MRT_Default_Icons = {\n    ArrowDownwardIcon: _mui_icons_material_ArrowDownward__WEBPACK_IMPORTED_MODULE_60__[\"default\"],\n    ArrowRightIcon: _mui_icons_material_ArrowRight__WEBPACK_IMPORTED_MODULE_61__[\"default\"],\n    CancelIcon: _mui_icons_material_Cancel__WEBPACK_IMPORTED_MODULE_62__[\"default\"],\n    ChevronLeftIcon: _mui_icons_material_ChevronLeft__WEBPACK_IMPORTED_MODULE_63__[\"default\"],\n    ChevronRightIcon: _mui_icons_material_ChevronRight__WEBPACK_IMPORTED_MODULE_64__[\"default\"],\n    ClearAllIcon: _mui_icons_material_ClearAll__WEBPACK_IMPORTED_MODULE_65__[\"default\"],\n    CloseIcon: _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_66__[\"default\"],\n    DensityLargeIcon: _mui_icons_material_DensityLarge__WEBPACK_IMPORTED_MODULE_67__[\"default\"],\n    DensityMediumIcon: _mui_icons_material_DensityMedium__WEBPACK_IMPORTED_MODULE_68__[\"default\"],\n    DensitySmallIcon: _mui_icons_material_DensitySmall__WEBPACK_IMPORTED_MODULE_69__[\"default\"],\n    DragHandleIcon: _mui_icons_material_DragHandle__WEBPACK_IMPORTED_MODULE_70__[\"default\"],\n    DynamicFeedIcon: _mui_icons_material_DynamicFeed__WEBPACK_IMPORTED_MODULE_71__[\"default\"],\n    EditIcon: _mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_72__[\"default\"],\n    ExpandMoreIcon: _mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_73__[\"default\"],\n    FilterAltIcon: _mui_icons_material_FilterAlt__WEBPACK_IMPORTED_MODULE_74__[\"default\"],\n    FilterListIcon: _mui_icons_material_FilterList__WEBPACK_IMPORTED_MODULE_75__[\"default\"],\n    FilterListOffIcon: _mui_icons_material_FilterListOff__WEBPACK_IMPORTED_MODULE_76__[\"default\"],\n    FirstPageIcon: _mui_icons_material_FirstPage__WEBPACK_IMPORTED_MODULE_77__[\"default\"],\n    FullscreenExitIcon: _mui_icons_material_FullscreenExit__WEBPACK_IMPORTED_MODULE_78__[\"default\"],\n    FullscreenIcon: _mui_icons_material_Fullscreen__WEBPACK_IMPORTED_MODULE_79__[\"default\"],\n    KeyboardDoubleArrowDownIcon: _mui_icons_material_KeyboardDoubleArrowDown__WEBPACK_IMPORTED_MODULE_80__[\"default\"],\n    LastPageIcon: _mui_icons_material_LastPage__WEBPACK_IMPORTED_MODULE_81__[\"default\"],\n    MoreHorizIcon: _mui_icons_material_MoreHoriz__WEBPACK_IMPORTED_MODULE_82__[\"default\"],\n    MoreVertIcon: _mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_83__[\"default\"],\n    PushPinIcon: _mui_icons_material_PushPin__WEBPACK_IMPORTED_MODULE_84__[\"default\"],\n    RestartAltIcon: _mui_icons_material_RestartAlt__WEBPACK_IMPORTED_MODULE_85__[\"default\"],\n    SaveIcon: _mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_86__[\"default\"],\n    SearchIcon: _mui_icons_material_Search__WEBPACK_IMPORTED_MODULE_87__[\"default\"],\n    SearchOffIcon: _mui_icons_material_SearchOff__WEBPACK_IMPORTED_MODULE_88__[\"default\"],\n    SortIcon: _mui_icons_material_Sort__WEBPACK_IMPORTED_MODULE_89__[\"default\"],\n    SyncAltIcon: _mui_icons_material_SyncAlt__WEBPACK_IMPORTED_MODULE_90__[\"default\"],\n    ViewColumnIcon: _mui_icons_material_ViewColumn__WEBPACK_IMPORTED_MODULE_91__[\"default\"],\n    VisibilityOffIcon: _mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_92__[\"default\"],\n};\n\nconst MRT_Localization_EN = {\n    actions: 'Actions',\n    and: 'and',\n    cancel: 'Cancel',\n    changeFilterMode: 'Change filter mode',\n    changeSearchMode: 'Change search mode',\n    clearFilter: 'Clear filter',\n    clearSearch: 'Clear search',\n    clearSort: 'Clear sort',\n    clickToCopy: 'Click to copy',\n    collapse: 'Collapse',\n    collapseAll: 'Collapse all',\n    columnActions: 'Column Actions',\n    copiedToClipboard: 'Copied to clipboard',\n    dropToGroupBy: 'Drop to group by {column}',\n    edit: 'Edit',\n    expand: 'Expand',\n    expandAll: 'Expand all',\n    filterArrIncludes: 'Includes',\n    filterArrIncludesAll: 'Includes all',\n    filterArrIncludesSome: 'Includes',\n    filterBetween: 'Between',\n    filterBetweenInclusive: 'Between Inclusive',\n    filterByColumn: 'Filter by {column}',\n    filterContains: 'Contains',\n    filterEmpty: 'Empty',\n    filterEndsWith: 'Ends With',\n    filterEquals: 'Equals',\n    filterEqualsString: 'Equals',\n    filterFuzzy: 'Fuzzy',\n    filterGreaterThan: 'Greater Than',\n    filterGreaterThanOrEqualTo: 'Greater Than Or Equal To',\n    filterInNumberRange: 'Between',\n    filterIncludesString: 'Contains',\n    filterIncludesStringSensitive: 'Contains',\n    filterLessThan: 'Less Than',\n    filterLessThanOrEqualTo: 'Less Than Or Equal To',\n    filterMode: 'Filter Mode: {filterType}',\n    filterNotEmpty: 'Not Empty',\n    filterNotEquals: 'Not Equals',\n    filterStartsWith: 'Starts With',\n    filterWeakEquals: 'Equals',\n    filteringByColumn: 'Filtering by {column} - {filterType} {filterValue}',\n    goToFirstPage: 'Go to first page',\n    goToLastPage: 'Go to last page',\n    goToNextPage: 'Go to next page',\n    goToPreviousPage: 'Go to previous page',\n    grab: 'Grab',\n    groupByColumn: 'Group by {column}',\n    groupedBy: 'Grouped by ',\n    hideAll: 'Hide all',\n    hideColumn: 'Hide {column} column',\n    max: 'Max',\n    min: 'Min',\n    move: 'Move',\n    noRecordsToDisplay: 'No records to display',\n    noResultsFound: 'No results found',\n    of: 'of',\n    or: 'or',\n    pin: 'Pin',\n    pinToLeft: 'Pin to left',\n    pinToRight: 'Pin to right',\n    resetColumnSize: 'Reset column size',\n    resetOrder: 'Reset order',\n    rowActions: 'Row Actions',\n    rowNumber: '#',\n    rowNumbers: 'Row Numbers',\n    rowsPerPage: 'Rows per page',\n    save: 'Save',\n    search: 'Search',\n    selectedCountOfRowCountRowsSelected: '{selectedCount} of {rowCount} row(s) selected',\n    select: 'Select',\n    showAll: 'Show all',\n    showAllColumns: 'Show all columns',\n    showHideColumns: 'Show/Hide columns',\n    showHideFilters: 'Show/Hide filters',\n    showHideSearch: 'Show/Hide search',\n    sortByColumnAsc: 'Sort by {column} ascending',\n    sortByColumnDesc: 'Sort by {column} descending',\n    sortedByColumnAsc: 'Sorted by {column} ascending',\n    sortedByColumnDesc: 'Sorted by {column} descending',\n    thenBy: ', then by ',\n    toggleDensity: 'Toggle density',\n    toggleFullScreen: 'Toggle full screen',\n    toggleSelectAll: 'Toggle select all',\n    toggleSelectRow: 'Toggle select row',\n    toggleVisibility: 'Toggle visibility',\n    ungroupByColumn: 'Ungroup by {column}',\n    unpin: 'Unpin',\n    unpinAll: 'Unpin all',\n};\n\nconst MRT_DefaultColumn = {\n    filterVariant: 'text',\n    maxSize: 1000,\n    minSize: 40,\n    size: 180,\n};\nconst MRT_DefaultDisplayColumn = {\n    columnDefType: 'display',\n    enableClickToCopy: false,\n    enableColumnActions: false,\n    enableColumnDragging: false,\n    enableColumnFilter: false,\n    enableColumnOrdering: false,\n    enableEditing: false,\n    enableGlobalFilter: false,\n    enableGrouping: false,\n    enableHiding: false,\n    enableResizing: false,\n    enableSorting: false,\n};\nconst useMRT_TableOptions = (_a) => {\n    var _b;\n    var { aggregationFns, autoResetExpanded = false, columnFilterDisplayMode = 'subheader', columnResizeMode = 'onChange', createDisplayMode = 'modal', defaultColumn, defaultDisplayColumn, editDisplayMode = 'modal', enableBottomToolbar = true, enableColumnActions = true, enableColumnFilters = true, enableColumnOrdering = false, enableColumnPinning = false, enableColumnResizing = false, enableDensityToggle = true, enableExpandAll = true, enableExpanding, enableFilterMatchHighlighting = true, enableFilters = true, enableFullScreenToggle = true, enableGlobalFilter = true, enableGlobalFilterRankedResults = true, enableGrouping = false, enableHiding = true, enableMultiRowSelection = true, enableMultiSort = true, enablePagination = true, enableRowPinning = false, enableRowSelection = false, enableSelectAll = true, enableSorting = true, enableStickyHeader = false, enableTableFooter = true, enableTableHead = true, enableToolbarInternalActions = true, enableTopToolbar = true, filterFns, icons, layoutMode, localization, manualFiltering, manualGrouping, manualPagination, manualSorting, paginationDisplayMode = 'default', positionActionsColumn = 'first', positionExpandColumn = 'first', positionGlobalFilter = 'right', positionPagination = 'bottom', positionToolbarAlertBanner = 'top', positionToolbarDropZone = 'top', rowNumberDisplayMode = 'static', rowPinningDisplayMode = 'sticky', selectAllMode = 'page', sortingFns } = _a, rest = __rest(_a, [\"aggregationFns\", \"autoResetExpanded\", \"columnFilterDisplayMode\", \"columnResizeMode\", \"createDisplayMode\", \"defaultColumn\", \"defaultDisplayColumn\", \"editDisplayMode\", \"enableBottomToolbar\", \"enableColumnActions\", \"enableColumnFilters\", \"enableColumnOrdering\", \"enableColumnPinning\", \"enableColumnResizing\", \"enableDensityToggle\", \"enableExpandAll\", \"enableExpanding\", \"enableFilterMatchHighlighting\", \"enableFilters\", \"enableFullScreenToggle\", \"enableGlobalFilter\", \"enableGlobalFilterRankedResults\", \"enableGrouping\", \"enableHiding\", \"enableMultiRowSelection\", \"enableMultiSort\", \"enablePagination\", \"enableRowPinning\", \"enableRowSelection\", \"enableSelectAll\", \"enableSorting\", \"enableStickyHeader\", \"enableTableFooter\", \"enableTableHead\", \"enableToolbarInternalActions\", \"enableTopToolbar\", \"filterFns\", \"icons\", \"layoutMode\", \"localization\", \"manualFiltering\", \"manualGrouping\", \"manualPagination\", \"manualSorting\", \"paginationDisplayMode\", \"positionActionsColumn\", \"positionExpandColumn\", \"positionGlobalFilter\", \"positionPagination\", \"positionToolbarAlertBanner\", \"positionToolbarDropZone\", \"rowNumberDisplayMode\", \"rowPinningDisplayMode\", \"selectAllMode\", \"sortingFns\"]);\n    const _icons = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_Default_Icons), icons)), [icons]);\n    const _localization = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_Localization_EN), localization)), [localization]);\n    const _aggregationFns = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_AggregationFns), aggregationFns)), []);\n    const _filterFns = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_FilterFns), filterFns)), []);\n    const _sortingFns = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_SortingFns), sortingFns)), []);\n    const _defaultColumn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_DefaultColumn), defaultColumn)), [defaultColumn]);\n    const _defaultDisplayColumn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (Object.assign(Object.assign({}, MRT_DefaultDisplayColumn), defaultDisplayColumn)), [defaultDisplayColumn]);\n    layoutMode =\n        layoutMode || (enableColumnResizing ? 'grid-no-grow' : 'semantic');\n    if (layoutMode === 'semantic' &&\n        (rest.enableRowVirtualization || rest.enableColumnVirtualization)) {\n        layoutMode = 'grid';\n    }\n    if (rest.enableRowVirtualization) {\n        enableStickyHeader = true;\n    }\n    if (enablePagination === false && manualPagination === undefined) {\n        manualPagination = true;\n    }\n    if (!((_b = rest.data) === null || _b === void 0 ? void 0 : _b.length)) {\n        manualFiltering = true;\n        manualGrouping = true;\n        manualPagination = true;\n        manualSorting = true;\n    }\n    return Object.assign({ aggregationFns: _aggregationFns, autoResetExpanded,\n        columnFilterDisplayMode,\n        columnResizeMode,\n        createDisplayMode, defaultColumn: _defaultColumn, defaultDisplayColumn: _defaultDisplayColumn, editDisplayMode,\n        enableBottomToolbar,\n        enableColumnActions,\n        enableColumnFilters,\n        enableColumnOrdering,\n        enableColumnPinning,\n        enableColumnResizing,\n        enableDensityToggle,\n        enableExpandAll,\n        enableExpanding,\n        enableFilterMatchHighlighting,\n        enableFilters,\n        enableFullScreenToggle,\n        enableGlobalFilter,\n        enableGlobalFilterRankedResults,\n        enableGrouping,\n        enableHiding,\n        enableMultiRowSelection,\n        enableMultiSort,\n        enablePagination,\n        enableRowPinning,\n        enableRowSelection,\n        enableSelectAll,\n        enableSorting,\n        enableStickyHeader,\n        enableTableFooter,\n        enableTableHead,\n        enableToolbarInternalActions,\n        enableTopToolbar, filterFns: _filterFns, icons: _icons, layoutMode, localization: _localization, manualFiltering,\n        manualGrouping,\n        manualPagination,\n        manualSorting,\n        paginationDisplayMode,\n        positionActionsColumn,\n        positionExpandColumn,\n        positionGlobalFilter,\n        positionPagination,\n        positionToolbarAlertBanner,\n        positionToolbarDropZone,\n        rowNumberDisplayMode,\n        rowPinningDisplayMode,\n        selectAllMode, sortingFns: _sortingFns }, rest);\n};\n\nconst blankColProps = {\n    children: null,\n    sx: {\n        flex: '1 0 auto',\n        minWidth: 0,\n        p: 0,\n        width: 0,\n    },\n};\nconst useMRT_DisplayColumns = ({ columnOrder, creatingRow, grouping, tableOptions, }) => {\n    var _a, _b;\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y;\n        return [\n            ((_b = (_a = tableOptions.state) === null || _a === void 0 ? void 0 : _a.columnOrder) !== null && _b !== void 0 ? _b : columnOrder).includes('mrt-row-pin') && Object.assign(Object.assign({ Cell: ({ row, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRowPinButton, { row: row, table: table })), header: tableOptions.localization.pin, size: 60 }, (_c = tableOptions.displayColumnDefOptions) === null || _c === void 0 ? void 0 : _c['mrt-row-pin']), { columnDefType: 'display', id: 'mrt-row-pin' }),\n            ((_e = (_d = tableOptions.state) === null || _d === void 0 ? void 0 : _d.columnOrder) !== null && _e !== void 0 ? _e : columnOrder).includes('mrt-row-drag') && Object.assign(Object.assign({ Cell: ({ row, rowRef, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TableBodyRowGrabHandle, { row: row, rowRef: rowRef, table: table })), header: tableOptions.localization.move, size: 60 }, (_f = tableOptions.displayColumnDefOptions) === null || _f === void 0 ? void 0 : _f['mrt-row-drag']), { columnDefType: 'display', id: 'mrt-row-drag' }),\n            (((_h = (_g = tableOptions.state) === null || _g === void 0 ? void 0 : _g.columnOrder) !== null && _h !== void 0 ? _h : columnOrder).includes('mrt-row-actions') ||\n                (creatingRow && tableOptions.createDisplayMode === 'row')) && Object.assign(Object.assign({ Cell: ({ cell, row, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ToggleRowActionMenuButton, { cell: cell, row: row, table: table })), header: tableOptions.localization.actions, size: 70 }, (_j = tableOptions.displayColumnDefOptions) === null || _j === void 0 ? void 0 : _j['mrt-row-actions']), { columnDefType: 'display', id: 'mrt-row-actions' }),\n            ((_l = (_k = tableOptions.state) === null || _k === void 0 ? void 0 : _k.columnOrder) !== null && _l !== void 0 ? _l : columnOrder).includes('mrt-row-expand') &&\n                showExpandColumn(tableOptions, (_o = (_m = tableOptions.state) === null || _m === void 0 ? void 0 : _m.grouping) !== null && _o !== void 0 ? _o : grouping) && Object.assign(Object.assign({ Cell: ({ row, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ExpandButton, { row: row, table: table })), Header: tableOptions.enableExpandAll\n                    ? ({ table }) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_ExpandAllButton, { table: table })\n                    : null, header: tableOptions.localization.expand, size: 60 }, (_p = tableOptions.displayColumnDefOptions) === null || _p === void 0 ? void 0 : _p['mrt-row-expand']), { columnDefType: 'display', id: 'mrt-row-expand' }),\n            ((_r = (_q = tableOptions.state) === null || _q === void 0 ? void 0 : _q.columnOrder) !== null && _r !== void 0 ? _r : columnOrder).includes('mrt-row-select') && Object.assign(Object.assign({ Cell: ({ row, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_SelectCheckbox, { row: row, table: table })), Header: tableOptions.enableSelectAll &&\n                    tableOptions.enableMultiRowSelection\n                    ? ({ table }) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_SelectCheckbox, { selectAll: true, table: table })\n                    : null, header: tableOptions.localization.select, size: 60 }, (_s = tableOptions.displayColumnDefOptions) === null || _s === void 0 ? void 0 : _s['mrt-row-select']), { columnDefType: 'display', id: 'mrt-row-select' }),\n            ((_u = (_t = tableOptions.state) === null || _t === void 0 ? void 0 : _t.columnOrder) !== null && _u !== void 0 ? _u : columnOrder).includes('mrt-row-numbers') && Object.assign(Object.assign({ Cell: ({ row }) => row.index + 1, Header: () => tableOptions.localization.rowNumber, header: tableOptions.localization.rowNumbers, size: 60 }, (_v = tableOptions.displayColumnDefOptions) === null || _v === void 0 ? void 0 : _v['mrt-row-numbers']), { columnDefType: 'display', id: 'mrt-row-numbers' }),\n            ((_x = (_w = tableOptions.state) === null || _w === void 0 ? void 0 : _w.columnOrder) !== null && _x !== void 0 ? _x : columnOrder).includes('mrt-row-spacer') && Object.assign(Object.assign(Object.assign({}, (_y = tableOptions.displayColumnDefOptions) === null || _y === void 0 ? void 0 : _y['mrt-row-spacer']), MRT_DefaultDisplayColumn), { columnDefType: 'display', header: '', id: 'mrt-row-spacer', muiTableBodyCellProps: blankColProps, muiTableFooterCellProps: blankColProps, muiTableHeadCellProps: blankColProps }),\n        ].filter(Boolean);\n    }, [\n        columnOrder,\n        grouping,\n        tableOptions.displayColumnDefOptions,\n        tableOptions.editDisplayMode,\n        tableOptions.enableColumnDragging,\n        tableOptions.enableColumnFilterModes,\n        tableOptions.enableColumnOrdering,\n        tableOptions.enableEditing,\n        tableOptions.enableExpandAll,\n        tableOptions.enableExpanding,\n        tableOptions.enableGrouping,\n        tableOptions.enableRowActions,\n        tableOptions.enableRowDragging,\n        tableOptions.enableRowNumbers,\n        tableOptions.enableRowOrdering,\n        tableOptions.enableRowSelection,\n        tableOptions.enableSelectAll,\n        tableOptions.localization,\n        tableOptions.positionActionsColumn,\n        tableOptions.renderDetailPanel,\n        tableOptions.renderRowActionMenuItems,\n        tableOptions.renderRowActions,\n        (_a = tableOptions.state) === null || _a === void 0 ? void 0 : _a.columnOrder,\n        (_b = tableOptions.state) === null || _b === void 0 ? void 0 : _b.grouping,\n    ]);\n};\n\nconst useMRT_Effects = (table) => {\n    const { getIsSomeRowsPinned, getState, options: { enablePagination, enableRowPinning, rowCount }, } = table;\n    const { density, globalFilter, isFullScreen, isLoading, pagination, showSkeletons, sorting, } = getState();\n    const rerender = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(() => ({}), {})[1];\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const initialBodyHeight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const previousTop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (typeof window !== 'undefined') {\n            initialBodyHeight.current = document.body.style.height;\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (isMounted && typeof window !== 'undefined') {\n            if (isFullScreen) {\n                previousTop.current = document.body.getBoundingClientRect().top; //save scroll position\n                document.body.style.height = '100vh'; //hide page scrollbars when table is in full screen mode\n            }\n            else {\n                document.body.style.height = initialBodyHeight.current;\n                if (!previousTop.current)\n                    return;\n                //restore scroll position\n                window.scrollTo({\n                    behavior: 'instant',\n                    top: -1 * previousTop.current,\n                });\n            }\n        }\n        isMounted.current = true;\n    }, [isFullScreen]);\n    //if page index is out of bounds, set it to the last page\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (!enablePagination || isLoading || showSkeletons)\n            return;\n        const { pageIndex, pageSize } = pagination;\n        const totalRowCount = rowCount !== null && rowCount !== void 0 ? rowCount : table.getPrePaginationRowModel().rows.length;\n        const firstVisibleRowIndex = pageIndex * pageSize;\n        if (firstVisibleRowIndex > totalRowCount) {\n            table.setPageIndex(Math.floor(totalRowCount / pageSize));\n        }\n    }, [rowCount, table.getPrePaginationRowModel().rows.length]);\n    //turn off sort when global filter is looking for ranked results\n    const appliedSort = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(sorting);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (sorting.length) {\n            appliedSort.current = sorting;\n        }\n    }, [sorting]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (!getCanRankRows(table))\n            return;\n        if (globalFilter) {\n            table.setSorting([]);\n        }\n        else {\n            table.setSorting(() => appliedSort.current || []);\n        }\n    }, [globalFilter]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        if (enableRowPinning && getIsSomeRowsPinned()) {\n            setTimeout(() => {\n                rerender();\n            }, 150);\n        }\n    }, [density]);\n};\n\nconst useMRT_TableInstance = (tableOptions) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10;\n    const bottomToolbarRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const editInputRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    const filterInputRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    const searchInputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const tableContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const tableHeadCellRefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    const tablePaperRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const topToolbarRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const tableHeadRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const tableFooterRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const initialState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a, _b, _c;\n        const initState = (_a = tableOptions.initialState) !== null && _a !== void 0 ? _a : {};\n        initState.columnOrder =\n            (_b = initState.columnOrder) !== null && _b !== void 0 ? _b : getDefaultColumnOrderIds(tableOptions);\n        initState.globalFilterFn = (_c = tableOptions.globalFilterFn) !== null && _c !== void 0 ? _c : 'fuzzy';\n        return initState;\n    }, []);\n    const [creatingRow, _setCreatingRow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_a = initialState.creatingRow) !== null && _a !== void 0 ? _a : null);\n    const [columnFilterFns, setColumnFilterFns] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => Object.assign({}, ...getAllLeafColumnDefs(tableOptions.columns).map((col) => {\n        var _a, _b, _c, _d;\n        return ({\n            [getColumnId(col)]: col.filterFn instanceof Function\n                ? (_a = col.filterFn.name) !== null && _a !== void 0 ? _a : 'custom'\n                : (_d = (_b = col.filterFn) !== null && _b !== void 0 ? _b : (_c = initialState === null || initialState === void 0 ? void 0 : initialState.columnFilterFns) === null || _c === void 0 ? void 0 : _c[getColumnId(col)]) !== null && _d !== void 0 ? _d : getDefaultColumnFilterFn(col),\n        });\n    })));\n    const [columnOrder, setColumnOrder] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_b = initialState.columnOrder) !== null && _b !== void 0 ? _b : []);\n    const [density, setDensity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_c = initialState === null || initialState === void 0 ? void 0 : initialState.density) !== null && _c !== void 0 ? _c : 'comfortable');\n    const [draggingColumn, setDraggingColumn] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_d = initialState.draggingColumn) !== null && _d !== void 0 ? _d : null);\n    const [draggingRow, setDraggingRow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_e = initialState.draggingRow) !== null && _e !== void 0 ? _e : null);\n    const [editingCell, setEditingCell] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_f = initialState.editingCell) !== null && _f !== void 0 ? _f : null);\n    const [editingRow, setEditingRow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_g = initialState.editingRow) !== null && _g !== void 0 ? _g : null);\n    const [globalFilterFn, setGlobalFilterFn] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_h = initialState.globalFilterFn) !== null && _h !== void 0 ? _h : 'fuzzy');\n    const [grouping, setGrouping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_j = initialState.grouping) !== null && _j !== void 0 ? _j : []);\n    const [hoveredColumn, setHoveredColumn] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_k = initialState.hoveredColumn) !== null && _k !== void 0 ? _k : null);\n    const [hoveredRow, setHoveredRow] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_l = initialState.hoveredRow) !== null && _l !== void 0 ? _l : null);\n    const [isFullScreen, setIsFullScreen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_m = initialState === null || initialState === void 0 ? void 0 : initialState.isFullScreen) !== null && _m !== void 0 ? _m : false);\n    const [showAlertBanner, setShowAlertBanner] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_p = (_o = tableOptions.initialState) === null || _o === void 0 ? void 0 : _o.showAlertBanner) !== null && _p !== void 0 ? _p : false);\n    const [showColumnFilters, setShowColumnFilters] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_q = initialState === null || initialState === void 0 ? void 0 : initialState.showColumnFilters) !== null && _q !== void 0 ? _q : false);\n    const [showGlobalFilter, setShowGlobalFilter] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_r = initialState === null || initialState === void 0 ? void 0 : initialState.showGlobalFilter) !== null && _r !== void 0 ? _r : false);\n    const [showToolbarDropZone, setShowToolbarDropZone] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((_s = initialState === null || initialState === void 0 ? void 0 : initialState.showToolbarDropZone) !== null && _s !== void 0 ? _s : false);\n    const displayColumns = useMRT_DisplayColumns({\n        columnOrder,\n        creatingRow,\n        grouping,\n        tableOptions,\n    });\n    const columnDefs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a, _b, _c;\n        return prepareColumns({\n            aggregationFns: tableOptions.aggregationFns,\n            columnDefs: [...displayColumns, ...tableOptions.columns],\n            columnFilterFns: (_b = (_a = tableOptions.state) === null || _a === void 0 ? void 0 : _a.columnFilterFns) !== null && _b !== void 0 ? _b : columnFilterFns,\n            defaultDisplayColumn: (_c = tableOptions.defaultDisplayColumn) !== null && _c !== void 0 ? _c : {},\n            filterFns: tableOptions.filterFns,\n            sortingFns: tableOptions.sortingFns,\n        });\n    }, [\n        columnFilterFns,\n        displayColumns,\n        tableOptions.columns,\n        (_t = tableOptions.state) === null || _t === void 0 ? void 0 : _t.columnFilterFns,\n    ]);\n    const data = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n        var _a, _b, _c, _d, _e;\n        return (((_a = tableOptions.state) === null || _a === void 0 ? void 0 : _a.isLoading) || ((_b = tableOptions.state) === null || _b === void 0 ? void 0 : _b.showSkeletons)) &&\n            !tableOptions.data.length\n            ? [\n                ...Array(((_d = (_c = tableOptions.state) === null || _c === void 0 ? void 0 : _c.pagination) === null || _d === void 0 ? void 0 : _d.pageSize) ||\n                    ((_e = initialState === null || initialState === void 0 ? void 0 : initialState.pagination) === null || _e === void 0 ? void 0 : _e.pageSize) ||\n                    10).fill(null),\n            ].map(() => Object.assign({}, ...getAllLeafColumnDefs(tableOptions.columns).map((col) => ({\n                [getColumnId(col)]: null,\n            }))))\n            : tableOptions.data;\n    }, [\n        tableOptions.data,\n        (_u = tableOptions.state) === null || _u === void 0 ? void 0 : _u.isLoading,\n        (_v = tableOptions.state) === null || _v === void 0 ? void 0 : _v.showSkeletons,\n    ]);\n    //@ts-ignore\n    const table = (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__.useReactTable)(Object.assign(Object.assign({ getCoreRowModel: (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getCoreRowModel)(), getExpandedRowModel: tableOptions.enableExpanding || tableOptions.enableGrouping\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getExpandedRowModel)()\n            : undefined, getFacetedMinMaxValues: tableOptions.enableFacetedValues\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedMinMaxValues)()\n            : undefined, getFacetedRowModel: tableOptions.enableFacetedValues\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedRowModel)()\n            : undefined, getFacetedUniqueValues: tableOptions.enableFacetedValues\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedUniqueValues)()\n            : undefined, getFilteredRowModel: tableOptions.enableColumnFilters ||\n            tableOptions.enableGlobalFilter ||\n            tableOptions.enableFilters\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFilteredRowModel)()\n            : undefined, getGroupedRowModel: tableOptions.enableGrouping\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getGroupedRowModel)()\n            : undefined, getPaginationRowModel: tableOptions.enablePagination\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getPaginationRowModel)()\n            : undefined, getSortedRowModel: tableOptions.enableSorting\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getSortedRowModel)()\n            : undefined, getSubRows: (row) => row === null || row === void 0 ? void 0 : row.subRows, onColumnOrderChange: setColumnOrder, onGroupingChange: setGrouping }, tableOptions), { \n        //@ts-ignore\n        columns: columnDefs, data, globalFilterFn: (_w = tableOptions.filterFns) === null || _w === void 0 ? void 0 : _w[globalFilterFn !== null && globalFilterFn !== void 0 ? globalFilterFn : 'fuzzy'], initialState, state: Object.assign({ columnFilterFns,\n            columnOrder,\n            creatingRow,\n            density,\n            draggingColumn,\n            draggingRow,\n            editingCell,\n            editingRow,\n            globalFilterFn,\n            grouping,\n            hoveredColumn,\n            hoveredRow,\n            isFullScreen,\n            showAlertBanner,\n            showColumnFilters,\n            showGlobalFilter,\n            showToolbarDropZone }, tableOptions.state) }));\n    // @ts-ignore\n    table.refs = {\n        // @ts-ignore\n        bottomToolbarRef,\n        editInputRefs,\n        filterInputRefs,\n        // @ts-ignore\n        searchInputRef,\n        // @ts-ignore\n        tableContainerRef,\n        // @ts-ignore\n        tableFooterRef,\n        tableHeadCellRefs,\n        // @ts-ignore\n        tableHeadRef,\n        // @ts-ignore\n        tablePaperRef,\n        // @ts-ignore\n        topToolbarRef,\n    };\n    const setCreatingRow = (row) => {\n        var _a, _b;\n        let _row = row;\n        if (row === true) {\n            _row = createRow(table);\n        }\n        (_b = (_a = tableOptions === null || tableOptions === void 0 ? void 0 : tableOptions.onCreatingRowChange) === null || _a === void 0 ? void 0 : _a.call(tableOptions, _row)) !== null && _b !== void 0 ? _b : _setCreatingRow(_row);\n    };\n    table.setCreatingRow = setCreatingRow;\n    table.setColumnFilterFns =\n        (_x = tableOptions.onColumnFilterFnsChange) !== null && _x !== void 0 ? _x : setColumnFilterFns;\n    table.setDensity = (_y = tableOptions.onDensityChange) !== null && _y !== void 0 ? _y : setDensity;\n    table.setDraggingColumn =\n        (_z = tableOptions.onDraggingColumnChange) !== null && _z !== void 0 ? _z : setDraggingColumn;\n    table.setDraggingRow = (_0 = tableOptions.onDraggingRowChange) !== null && _0 !== void 0 ? _0 : setDraggingRow;\n    table.setEditingCell = (_1 = tableOptions.onEditingCellChange) !== null && _1 !== void 0 ? _1 : setEditingCell;\n    table.setEditingRow = (_2 = tableOptions.onEditingRowChange) !== null && _2 !== void 0 ? _2 : setEditingRow;\n    table.setGlobalFilterFn =\n        (_3 = tableOptions.onGlobalFilterFnChange) !== null && _3 !== void 0 ? _3 : setGlobalFilterFn;\n    table.setHoveredColumn =\n        (_4 = tableOptions.onHoveredColumnChange) !== null && _4 !== void 0 ? _4 : setHoveredColumn;\n    table.setHoveredRow = (_5 = tableOptions.onHoveredRowChange) !== null && _5 !== void 0 ? _5 : setHoveredRow;\n    table.setIsFullScreen = (_6 = tableOptions.onIsFullScreenChange) !== null && _6 !== void 0 ? _6 : setIsFullScreen;\n    table.setShowAlertBanner =\n        (_7 = tableOptions.onShowAlertBannerChange) !== null && _7 !== void 0 ? _7 : setShowAlertBanner;\n    table.setShowColumnFilters =\n        (_8 = tableOptions.onShowColumnFiltersChange) !== null && _8 !== void 0 ? _8 : setShowColumnFilters;\n    table.setShowGlobalFilter =\n        (_9 = tableOptions.onShowGlobalFilterChange) !== null && _9 !== void 0 ? _9 : setShowGlobalFilter;\n    table.setShowToolbarDropZone =\n        (_10 = tableOptions.onShowToolbarDropZoneChange) !== null && _10 !== void 0 ? _10 : setShowToolbarDropZone;\n    useMRT_Effects(table);\n    return table;\n};\n\nconst useMaterialReactTable = (tableOptions) => useMRT_TableInstance(useMRT_TableOptions(tableOptions));\n\nconst isTableInstanceProp = (props) => props.table !== undefined;\nconst MaterialReactTable = (props) => {\n    let table;\n    if (isTableInstanceProp(props)) {\n        table = props.table;\n    }\n    else {\n        table = useMaterialReactTable(props);\n    }\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MRT_TablePaper, { table: table });\n};\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/material-react-table/dist/index.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/material-react-table/locales/es/index.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/material-react-table/locales/es/index.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MRT_Localization_ES: () => (/* binding */ MRT_Localization_ES)\n/* harmony export */ });\nconst MRT_Localization_ES = {\n    actions: 'Acciones',\n    and: 'y',\n    cancel: 'Cancelar',\n    changeFilterMode: 'Cambiar modo de filtro',\n    changeSearchMode: 'Cambiar modo de búsqueda',\n    clearFilter: 'Borrar filtro',\n    clearSearch: 'Borrar búsqueda',\n    clearSort: 'Borrar ordenamiento',\n    clickToCopy: 'Haga click para copiar',\n    collapse: 'Colapsar',\n    collapseAll: 'Colapsar todo',\n    columnActions: 'Columna de acciones',\n    copiedToClipboard: 'Copiado al portapapeles',\n    dropToGroupBy: 'Soltar para agrupar por {column}',\n    edit: 'Editar',\n    expand: 'Expandir',\n    expandAll: 'Expandir todo',\n    filterArrIncludes: 'Incluye',\n    filterArrIncludesAll: 'Incluye todos',\n    filterArrIncludesSome: 'Incluye algunos',\n    filterBetween: 'Entre',\n    filterBetweenInclusive: 'Entre (inclusivo)',\n    filterByColumn: 'Filtrar por {column}',\n    filterContains: 'Contiene',\n    filterEmpty: 'Vacio',\n    filterEndsWith: 'Termina con',\n    filterEquals: 'Iguales',\n    filterEqualsString: 'Iguales',\n    filterFuzzy: 'Difuso',\n    filterGreaterThan: 'Mas grande que',\n    filterGreaterThanOrEqualTo: 'Mas grande que o igual a',\n    filterInNumberRange: 'Entre',\n    filterIncludesString: 'Contiene',\n    filterIncludesStringSensitive: 'Contiene',\n    filterLessThan: 'Menos que',\n    filterLessThanOrEqualTo: 'Menos que o igual a',\n    filterMode: 'Modo de filtro: {filterType}',\n    filterNotEmpty: 'No vacio',\n    filterNotEquals: 'No iguales',\n    filterStartsWith: 'Empieza con',\n    filterWeakEquals: 'Iguales',\n    filteringByColumn: 'Filtrando por {column} - {filterType} - {filterValue}',\n    goToFirstPage: 'Ir a la primera página',\n    goToLastPage: 'Ir a la última página',\n    goToNextPage: 'Ir a la página siguiente',\n    goToPreviousPage: 'Regresar a la pagina anterior',\n    grab: 'Agarrar',\n    groupByColumn: 'Agrupar por {column}',\n    groupedBy: 'Agrupado por',\n    hideAll: 'Ocultar todo',\n    hideColumn: 'Ocultar {column}',\n    max: 'Máximo',\n    min: 'Mínimo',\n    move: 'Mover',\n    noRecordsToDisplay: 'No hay registros para mostrar',\n    noResultsFound: 'No se encontraron resultados',\n    of: 'de',\n    or: 'o',\n    pin: 'Anclar',\n    pinToLeft: 'Anclar a la izquierda',\n    pinToRight: 'Anclar a la derecha',\n    resetColumnSize: 'Resetear tamaño de columna',\n    resetOrder: 'Resetar orden',\n    rowActions: 'Acciones de fila',\n    rowNumber: '#',\n    rowNumbers: 'Números de fila',\n    rowsPerPage: 'Filas por página',\n    save: 'Guardar',\n    search: 'Buscar',\n    select: 'Seleccionar',\n    selectedCountOfRowCountRowsSelected: '{selectedCount} de {rowCount} fila(s) seleccionada(s)',\n    showAll: 'Mostrar todo',\n    showAllColumns: 'Mostrar todas las columnas',\n    showHideColumns: 'Mostrar/ocultar columnas',\n    showHideFilters: 'Mostrar/ocultar filtros',\n    showHideSearch: 'Mostrar/ocultar búsqueda',\n    sortByColumnAsc: 'Ordenar por {column} ascendente',\n    sortByColumnDesc: 'Ordenar por {column} descendente',\n    sortedByColumnAsc: 'Ordenar por {column} ascendente',\n    sortedByColumnDesc: 'Ordenar por {column} descendente',\n    thenBy: ', despues por ',\n    toggleDensity: 'Alternar densidad',\n    toggleFullScreen: 'Alternar pantalla completa',\n    toggleSelectAll: 'Alternar seleccionar todo',\n    toggleSelectRow: 'Alternar seleccionar fila',\n    toggleVisibility: 'Alternar visibilidad',\n    ungroupByColumn: 'Desagrupar por {column}',\n    unpin: 'Desanclar',\n    unpinAll: 'Desanclar todo',\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWF0ZXJpYWwtcmVhY3QtdGFibGUvbG9jYWxlcy9lcy9pbmRleC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsT0FBTztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLE9BQU87QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsV0FBVztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxRQUFRLEdBQUcsWUFBWSxHQUFHLFlBQVk7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxPQUFPO0FBQ3hDO0FBQ0E7QUFDQSwwQkFBMEIsT0FBTztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxlQUFlLElBQUksVUFBVTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFFBQVE7QUFDM0Msb0NBQW9DLFFBQVE7QUFDNUMscUNBQXFDLFFBQVE7QUFDN0Msc0NBQXNDLFFBQVE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLE9BQU87QUFDN0M7QUFDQTtBQUNBOztBQUUrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL21hdGVyaWFsLXJlYWN0LXRhYmxlL2xvY2FsZXMvZXMvaW5kZXguZXNtLmpzPzg2N2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTVJUX0xvY2FsaXphdGlvbl9FUyA9IHtcbiAgICBhY3Rpb25zOiAnQWNjaW9uZXMnLFxuICAgIGFuZDogJ3knLFxuICAgIGNhbmNlbDogJ0NhbmNlbGFyJyxcbiAgICBjaGFuZ2VGaWx0ZXJNb2RlOiAnQ2FtYmlhciBtb2RvIGRlIGZpbHRybycsXG4gICAgY2hhbmdlU2VhcmNoTW9kZTogJ0NhbWJpYXIgbW9kbyBkZSBiw7pzcXVlZGEnLFxuICAgIGNsZWFyRmlsdGVyOiAnQm9ycmFyIGZpbHRybycsXG4gICAgY2xlYXJTZWFyY2g6ICdCb3JyYXIgYsO6c3F1ZWRhJyxcbiAgICBjbGVhclNvcnQ6ICdCb3JyYXIgb3JkZW5hbWllbnRvJyxcbiAgICBjbGlja1RvQ29weTogJ0hhZ2EgY2xpY2sgcGFyYSBjb3BpYXInLFxuICAgIGNvbGxhcHNlOiAnQ29sYXBzYXInLFxuICAgIGNvbGxhcHNlQWxsOiAnQ29sYXBzYXIgdG9kbycsXG4gICAgY29sdW1uQWN0aW9uczogJ0NvbHVtbmEgZGUgYWNjaW9uZXMnLFxuICAgIGNvcGllZFRvQ2xpcGJvYXJkOiAnQ29waWFkbyBhbCBwb3J0YXBhcGVsZXMnLFxuICAgIGRyb3BUb0dyb3VwQnk6ICdTb2x0YXIgcGFyYSBhZ3J1cGFyIHBvciB7Y29sdW1ufScsXG4gICAgZWRpdDogJ0VkaXRhcicsXG4gICAgZXhwYW5kOiAnRXhwYW5kaXInLFxuICAgIGV4cGFuZEFsbDogJ0V4cGFuZGlyIHRvZG8nLFxuICAgIGZpbHRlckFyckluY2x1ZGVzOiAnSW5jbHV5ZScsXG4gICAgZmlsdGVyQXJySW5jbHVkZXNBbGw6ICdJbmNsdXllIHRvZG9zJyxcbiAgICBmaWx0ZXJBcnJJbmNsdWRlc1NvbWU6ICdJbmNsdXllIGFsZ3Vub3MnLFxuICAgIGZpbHRlckJldHdlZW46ICdFbnRyZScsXG4gICAgZmlsdGVyQmV0d2VlbkluY2x1c2l2ZTogJ0VudHJlIChpbmNsdXNpdm8pJyxcbiAgICBmaWx0ZXJCeUNvbHVtbjogJ0ZpbHRyYXIgcG9yIHtjb2x1bW59JyxcbiAgICBmaWx0ZXJDb250YWluczogJ0NvbnRpZW5lJyxcbiAgICBmaWx0ZXJFbXB0eTogJ1ZhY2lvJyxcbiAgICBmaWx0ZXJFbmRzV2l0aDogJ1Rlcm1pbmEgY29uJyxcbiAgICBmaWx0ZXJFcXVhbHM6ICdJZ3VhbGVzJyxcbiAgICBmaWx0ZXJFcXVhbHNTdHJpbmc6ICdJZ3VhbGVzJyxcbiAgICBmaWx0ZXJGdXp6eTogJ0RpZnVzbycsXG4gICAgZmlsdGVyR3JlYXRlclRoYW46ICdNYXMgZ3JhbmRlIHF1ZScsXG4gICAgZmlsdGVyR3JlYXRlclRoYW5PckVxdWFsVG86ICdNYXMgZ3JhbmRlIHF1ZSBvIGlndWFsIGEnLFxuICAgIGZpbHRlckluTnVtYmVyUmFuZ2U6ICdFbnRyZScsXG4gICAgZmlsdGVySW5jbHVkZXNTdHJpbmc6ICdDb250aWVuZScsXG4gICAgZmlsdGVySW5jbHVkZXNTdHJpbmdTZW5zaXRpdmU6ICdDb250aWVuZScsXG4gICAgZmlsdGVyTGVzc1RoYW46ICdNZW5vcyBxdWUnLFxuICAgIGZpbHRlckxlc3NUaGFuT3JFcXVhbFRvOiAnTWVub3MgcXVlIG8gaWd1YWwgYScsXG4gICAgZmlsdGVyTW9kZTogJ01vZG8gZGUgZmlsdHJvOiB7ZmlsdGVyVHlwZX0nLFxuICAgIGZpbHRlck5vdEVtcHR5OiAnTm8gdmFjaW8nLFxuICAgIGZpbHRlck5vdEVxdWFsczogJ05vIGlndWFsZXMnLFxuICAgIGZpbHRlclN0YXJ0c1dpdGg6ICdFbXBpZXphIGNvbicsXG4gICAgZmlsdGVyV2Vha0VxdWFsczogJ0lndWFsZXMnLFxuICAgIGZpbHRlcmluZ0J5Q29sdW1uOiAnRmlsdHJhbmRvIHBvciB7Y29sdW1ufSAtIHtmaWx0ZXJUeXBlfSAtIHtmaWx0ZXJWYWx1ZX0nLFxuICAgIGdvVG9GaXJzdFBhZ2U6ICdJciBhIGxhIHByaW1lcmEgcMOhZ2luYScsXG4gICAgZ29Ub0xhc3RQYWdlOiAnSXIgYSBsYSDDumx0aW1hIHDDoWdpbmEnLFxuICAgIGdvVG9OZXh0UGFnZTogJ0lyIGEgbGEgcMOhZ2luYSBzaWd1aWVudGUnLFxuICAgIGdvVG9QcmV2aW91c1BhZ2U6ICdSZWdyZXNhciBhIGxhIHBhZ2luYSBhbnRlcmlvcicsXG4gICAgZ3JhYjogJ0FnYXJyYXInLFxuICAgIGdyb3VwQnlDb2x1bW46ICdBZ3J1cGFyIHBvciB7Y29sdW1ufScsXG4gICAgZ3JvdXBlZEJ5OiAnQWdydXBhZG8gcG9yJyxcbiAgICBoaWRlQWxsOiAnT2N1bHRhciB0b2RvJyxcbiAgICBoaWRlQ29sdW1uOiAnT2N1bHRhciB7Y29sdW1ufScsXG4gICAgbWF4OiAnTcOheGltbycsXG4gICAgbWluOiAnTcOtbmltbycsXG4gICAgbW92ZTogJ01vdmVyJyxcbiAgICBub1JlY29yZHNUb0Rpc3BsYXk6ICdObyBoYXkgcmVnaXN0cm9zIHBhcmEgbW9zdHJhcicsXG4gICAgbm9SZXN1bHRzRm91bmQ6ICdObyBzZSBlbmNvbnRyYXJvbiByZXN1bHRhZG9zJyxcbiAgICBvZjogJ2RlJyxcbiAgICBvcjogJ28nLFxuICAgIHBpbjogJ0FuY2xhcicsXG4gICAgcGluVG9MZWZ0OiAnQW5jbGFyIGEgbGEgaXpxdWllcmRhJyxcbiAgICBwaW5Ub1JpZ2h0OiAnQW5jbGFyIGEgbGEgZGVyZWNoYScsXG4gICAgcmVzZXRDb2x1bW5TaXplOiAnUmVzZXRlYXIgdGFtYcOxbyBkZSBjb2x1bW5hJyxcbiAgICByZXNldE9yZGVyOiAnUmVzZXRhciBvcmRlbicsXG4gICAgcm93QWN0aW9uczogJ0FjY2lvbmVzIGRlIGZpbGEnLFxuICAgIHJvd051bWJlcjogJyMnLFxuICAgIHJvd051bWJlcnM6ICdOw7ptZXJvcyBkZSBmaWxhJyxcbiAgICByb3dzUGVyUGFnZTogJ0ZpbGFzIHBvciBww6FnaW5hJyxcbiAgICBzYXZlOiAnR3VhcmRhcicsXG4gICAgc2VhcmNoOiAnQnVzY2FyJyxcbiAgICBzZWxlY3Q6ICdTZWxlY2Npb25hcicsXG4gICAgc2VsZWN0ZWRDb3VudE9mUm93Q291bnRSb3dzU2VsZWN0ZWQ6ICd7c2VsZWN0ZWRDb3VudH0gZGUge3Jvd0NvdW50fSBmaWxhKHMpIHNlbGVjY2lvbmFkYShzKScsXG4gICAgc2hvd0FsbDogJ01vc3RyYXIgdG9kbycsXG4gICAgc2hvd0FsbENvbHVtbnM6ICdNb3N0cmFyIHRvZGFzIGxhcyBjb2x1bW5hcycsXG4gICAgc2hvd0hpZGVDb2x1bW5zOiAnTW9zdHJhci9vY3VsdGFyIGNvbHVtbmFzJyxcbiAgICBzaG93SGlkZUZpbHRlcnM6ICdNb3N0cmFyL29jdWx0YXIgZmlsdHJvcycsXG4gICAgc2hvd0hpZGVTZWFyY2g6ICdNb3N0cmFyL29jdWx0YXIgYsO6c3F1ZWRhJyxcbiAgICBzb3J0QnlDb2x1bW5Bc2M6ICdPcmRlbmFyIHBvciB7Y29sdW1ufSBhc2NlbmRlbnRlJyxcbiAgICBzb3J0QnlDb2x1bW5EZXNjOiAnT3JkZW5hciBwb3Ige2NvbHVtbn0gZGVzY2VuZGVudGUnLFxuICAgIHNvcnRlZEJ5Q29sdW1uQXNjOiAnT3JkZW5hciBwb3Ige2NvbHVtbn0gYXNjZW5kZW50ZScsXG4gICAgc29ydGVkQnlDb2x1bW5EZXNjOiAnT3JkZW5hciBwb3Ige2NvbHVtbn0gZGVzY2VuZGVudGUnLFxuICAgIHRoZW5CeTogJywgZGVzcHVlcyBwb3IgJyxcbiAgICB0b2dnbGVEZW5zaXR5OiAnQWx0ZXJuYXIgZGVuc2lkYWQnLFxuICAgIHRvZ2dsZUZ1bGxTY3JlZW46ICdBbHRlcm5hciBwYW50YWxsYSBjb21wbGV0YScsXG4gICAgdG9nZ2xlU2VsZWN0QWxsOiAnQWx0ZXJuYXIgc2VsZWNjaW9uYXIgdG9kbycsXG4gICAgdG9nZ2xlU2VsZWN0Um93OiAnQWx0ZXJuYXIgc2VsZWNjaW9uYXIgZmlsYScsXG4gICAgdG9nZ2xlVmlzaWJpbGl0eTogJ0FsdGVybmFyIHZpc2liaWxpZGFkJyxcbiAgICB1bmdyb3VwQnlDb2x1bW46ICdEZXNhZ3J1cGFyIHBvciB7Y29sdW1ufScsXG4gICAgdW5waW46ICdEZXNhbmNsYXInLFxuICAgIHVucGluQWxsOiAnRGVzYW5jbGFyIHRvZG8nLFxufTtcblxuZXhwb3J0IHsgTVJUX0xvY2FsaXphdGlvbl9FUyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/material-react-table/locales/es/index.esm.js\n");

/***/ })

};
;